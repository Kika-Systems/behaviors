[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "lib/.external-ecmascript.js",
    "static": true,
    "longname": "lib/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 49,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "lib/.external-webapi.js",
    "static": true,
    "longname": "lib/.external-webapi.js~CanvasRenderingContext2D",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 50,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "lib/.external-webapi.js",
    "static": true,
    "longname": "lib/.external-webapi.js~DocumentFragment",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 51,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "lib/.external-webapi.js",
    "static": true,
    "longname": "lib/.external-webapi.js~Element",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 52,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "lib/.external-webapi.js",
    "static": true,
    "longname": "lib/.external-webapi.js~Event",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 53,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "lib/.external-webapi.js",
    "static": true,
    "longname": "lib/.external-webapi.js~Node",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 54,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "lib/.external-webapi.js",
    "static": true,
    "longname": "lib/.external-webapi.js~NodeList",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 55,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "lib/.external-webapi.js",
    "static": true,
    "longname": "lib/.external-webapi.js~XMLHttpRequest",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 56,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "lib/.external-webapi.js",
    "static": true,
    "longname": "lib/.external-webapi.js~AudioContext",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "lib/behaviorRunner.js",
    "content": "import { autobind } from './general';\nimport { doneOrWait } from './postStepFNs';\nimport { createMouseEvent } from './events';\nimport { delay } from './delays';\n\n/**\n * A thin wrapper around the execution of a behaviors actions\n * in order to support behavior pausing.\n *\n * A behavior is in a paused state when the property `$WBBehaviorPaused`,\n * found on the `window` object, is truthy and when that property is\n * falsy the behavior is considered in an un-paused state.\n *\n * The check for a behavior pause state transitions is done\n * before performing the behaviors next action, allowing the\n * action to be atomic.\n */\nexport class BehaviorRunner {\n  /**\n   * @param {BehaviorRunnerOpts} init\n   */\n  constructor({ behaviorStepIterator, postStepFN, metadata }) {\n    /**\n     *  The behavior's action iterator\n     * @type {RawBehaviorIterator}\n     */\n    this.stepIterator = behaviorStepIterator;\n\n    /**\n     * @type {?number}\n     */\n    this.upCheckInterval = null;\n\n    /**\n     * @type {?Object}\n     */\n    this.metadata = metadata;\n\n    /**\n     * A function used to transform the return value of {@link BehaviorRunner#stepIterator}\n     * after performing an action into a value that is interpretable by Webrecorders automation\n     * system.\n     * @type {?function(result: RawBehaviorStepResults): BehaviorStepResults}\n     */\n    this.postStepFN = postStepFN;\n\n    /**\n     * @type {?Promise<void>}\n     * @private\n     */\n    this._waitP = null;\n    autobind(this);\n  }\n\n  /**\n   * Returns T/F indicating if the behavior is currently paused\n   * @return {boolean}\n   */\n  get isPaused() {\n    return window.$WBBehaviorPaused;\n  }\n\n  /**\n   * Swaps the behavior actions to be applied to the page.\n   * @param {RawBehaviorIterator} newBehaviorIterator - a new behavior action iterator to be run\n   * @param {function(results: RawBehaviorStepResults): BehaviorStepResults} [newPostStepFN] - an optional new post step function\n   * to be used. If a previous postStepFN is in use and a new function is not supplied the old one is persisted.\n   */\n  swapBehaviorIterator(newBehaviorIterator, newPostStepFN) {\n    this.stepIterator = newBehaviorIterator;\n    if (newPostStepFN) {\n      this.postStepFN = newPostStepFN;\n    }\n  }\n\n  /**\n   * Swaps the postStepFN to be used.\n   * @param {function(results: RawBehaviorStepResults): BehaviorStepResults} newPostStepFN - The new\n   * postStepFN to be used.\n   */\n  swapPostStepFn(newPostStepFN) {\n    this.postStepFN = newPostStepFN;\n  }\n\n  /**\n   * Returns a promise that resolves once `window.$WBBehaviorPaused`\n   * is falsy, checking at 2 second intervals.\n   * @return {Promise<void>}\n   */\n  waitToBeUnpaused() {\n    if (this._waitP) return this._waitP;\n    this._waitP = new Promise(resolve => {\n      this.upCheckInterval = setInterval(() => {\n        if (!window.$WBBehaviorPaused) {\n          clearInterval(this.upCheckInterval);\n          this._waitP = null;\n          resolve();\n        }\n      }, 2000);\n    });\n    return this._waitP;\n  }\n\n  /**\n   * Calls the next function of {@link BehaviorRunner#stepIterator} and\n   * if a postStepFN was supplied it is called with the results of\n   * the performed action otherwise they are returned directly.\n   * @return {Promise<BehaviorStepResults>}\n   */\n  performStep() {\n    const resultP = this.stepIterator.next();\n    if (this.postStepFN) {\n      return resultP.then(this.postStepFN);\n    }\n    return resultP.then(doneOrWait);\n  }\n\n  /**\n   * Initiates the next action of a behavior.\n   *\n   * If the behavior is transitioning into the paused state (previously not paused)\n   * the promise returned resolves with the results of performing the next\n   * action once the un-paused state has been reached.\n   *\n   * If this method is called and the behavior is currently in the paused state\n   * the promise returned is the same one returned when transitioning into the\n   * paused state.\n   *\n   * Otherwise the returned promise resolves with the state of the behavior\n   * after performing an action.\n   * @return {Promise<BehaviorStepResults>}\n   */\n  step() {\n    if (this._waitP) {\n      return this._waitP;\n    }\n    if (window.$WBBehaviorPaused) {\n      return this.waitToBeUnpaused().then(this.performStep);\n    }\n    return this.performStep();\n  }\n\n  /**\n   * Shortcut for automatically run the behavior via async generators\n   * @example\n   *   // in some async function\n   *   for await (const value of runner.autoRunIter()) {\n   *     console.log(value)\n   *   }\n   * @param {number} [delayAmount] - Optional amount of delay to be applied between\n   * steps\n   * @return {AsyncIterableIterator<BehaviorStepResults>}\n   */\n  async *autoRunIter(delayAmount) {\n    const haveDelay = typeof delayAmount === 'number';\n    window.$WBNOOUTLINKS = true;\n    let next = await this.step();\n    while (!next.done) {\n      yield next;\n      if (haveDelay) await delay(delayAmount);\n      next = await this.step();\n    }\n    yield next;\n  }\n\n  /**\n   * Automatically run the behavior\n   * @param {BehaviorRunOptions} [options = {}]\n   * @return {Promise<void>}\n   */\n  async autoRun(options = {}) {\n    const { delayAmount, noOutlinks = true, logging = true } = options;\n    const haveDelay = typeof delayAmount === 'number';\n    window.$WBNOOUTLINKS = noOutlinks;\n    let next = await this.step();\n    while (!next.done) {\n      if (logging) console.log(next.msg, next.state);\n      if (haveDelay) await delay(delayAmount);\n      next = await this.step();\n    }\n    if (logging) console.log('done');\n  }\n\n  /**\n   * Automatically run the behavior to completion optionally supplying\n   * an amount of time, in milliseconds, that will be waited for\n   * before initiating another action\n   * the wait after performing an behavior action (step)\n   * @param {BehaviorRunOptions} [options = {}]\n   * @return {Promise<void>}\n   */\n  async autoRunWithDelay(options = {}) {\n    const { delayAmount = 1000, noOutlinks = true, logging = true } = options;\n    window.$WBNOOUTLINKS = noOutlinks;\n    let next = await this.step();\n    while (!next.done) {\n      if (logging) console.log(next.msg, next.state);\n      await delay(delayAmount);\n      next = await this.step();\n    }\n    if (logging) console.log('done');\n  }\n\n  /**\n   * Pauses the behavior by setting the behavior paused flag to true\n   */\n  pause() {\n    window.$WBBehaviorPaused = true;\n  }\n\n  /**\n   * Un-pauses the behavior by setting the behavior paused flag to false\n   */\n  unpause() {\n    window.$WBBehaviorPaused = false;\n  }\n\n  /**\n   * Shortcut for running a behavior from a for await of loop.\n   * @return {BehaviorRunnerAsyncIterator}\n   */\n  [Symbol.asyncIterator]() {\n    return {\n      next: () => this.step(),\n    };\n  }\n}\n\n/**\n * Performs the setup required for integration with Webrecorders automation system\n * Adds as propeties to the supplied window object\n *  - $WBBehaviorStepIter$: the supplied `behaviorStepIterator`\n *  - $WBBehaviorRunner$: the instance of the class that wraps the behaviors actions\n *  - $WRIteratorHandler$: a function that initiates a behaviors action\n * @param {BehaviorRunnerInitOpts} init - Object used to initialize the behavior for running\n * @return {BehaviorRunner}\n */\nexport function initRunnableBehavior({\n  win,\n  behaviorStepIterator,\n  postStepFN,\n  metadata,\n}) {\n  win.$WBBehaviorStepIter$ = behaviorStepIterator;\n  const runner = new BehaviorRunner({\n    behaviorStepIterator,\n    postStepFN,\n    metadata,\n  });\n  win.$WBBehaviorRunner$ = runner;\n  win.$WRIteratorHandler$ = runner.step;\n  const crect = win.document.documentElement.getBoundingClientRect();\n  const x = Math.floor(Math.random() * crect.right - 100);\n  const y = Math.floor(Math.random() * crect.bottom - 100);\n  win.document.dispatchEvent(\n    createMouseEvent({\n      type: 'mousemove',\n      position: {\n        pageX: x,\n        pageY: y,\n        clientX: x,\n        clientY: y,\n        screenX: Math.floor(Math.random() * win.screen.width),\n        screenY: Math.floor(Math.random() * win.screen.height),\n      },\n    })\n  );\n  return runner;\n}\n\n/**\n * @typedef {Object} BehaviorRunnerOpts\n * @property {RawBehaviorIterator} behaviorStepIterator - An async iterator that\n * yields the state of the behavior\n * @property {function(results: RawBehaviorStepResults): BehaviorStepResults} [postStepFN] - An optional\n * function that is supplied the state of the behavior after performing an action.\n * It is required that this function returns the state unmodified or a transformation\n * of the state that is either an object that contains the original value of the done property\n * or a boolean that is the value of the original done property.\n * @property {Object} [metadata] - Optional metadata about the behavior currently being run\n */\n\n/**\n * @typedef {Object} BehaviorRunnerInitOpts\n * @property {Window} win\n * @property {RawBehaviorIterator} behaviorStepIterator - An async iterator that\n * yields the state of the behavior\n * @property {function(results: RawBehaviorStepResults): BehaviorStepResults} [postStepFN] - An optional\n * function that is supplied the state of the behavior after performing an action.\n * It is required that this function returns the state unmodified or a transformation\n * of the state that is either an object that contains the original value of the done property\n * or a boolean that is the value of the original done property.\n * @property {Object} [metadata] - Optional metadata about the behavior currently being run\n */\n\n/**\n * @typedef {Object} BehaviorRunnerAsyncIterator\n * @property {function(): Promise<BehaviorStepResults>} next - function used to initiate the next action of the behavior\n */\n\n/**\n * @typedef {Object} BehaviorRunOptions\n * @property {number} [delayAmount = 1000] - Time value in milliseconds representing how much time should be waited after initiating a behavior's step\n * @property {boolean} [noOutlinks = true] - Should the collection of outlinks be disabled when running the behavior\n * @property {boolean} [logging = true] - Should information the behavior sends be displayed\n */\n\n/**\n * @typedef {AsyncIterator<RawBehaviorStepResults>|AsyncIterableIterator<RawBehaviorStepResults>} RawBehaviorIterator\n */\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/lib/behaviorRunner.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "class",
    "name": "BehaviorRunner",
    "memberof": "lib/behaviorRunner.js",
    "static": true,
    "longname": "lib/behaviorRunner.js~BehaviorRunner",
    "access": "public",
    "export": true,
    "importPath": "lib/behaviorRunner.js",
    "importStyle": "{BehaviorRunner}",
    "description": "A thin wrapper around the execution of a behaviors actions\nin order to support behavior pausing.\n\nA behavior is in a paused state when the property `$WBBehaviorPaused`,\nfound on the `window` object, is truthy and when that property is\nfalsy the behavior is considered in an un-paused state.\n\nThe check for a behavior pause state transitions is done\nbefore performing the behaviors next action, allowing the\naction to be atomic.",
    "lineNumber": 18,
    "interface": false
  },
  {
    "__docId__": 59,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/behaviorRunner.js~BehaviorRunner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/behaviorRunner.js~BehaviorRunner#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "BehaviorRunnerOpts"
        ],
        "spread": false,
        "optional": false,
        "name": "init",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "stepIterator",
    "memberof": "lib/behaviorRunner.js~BehaviorRunner",
    "static": false,
    "longname": "lib/behaviorRunner.js~BehaviorRunner#stepIterator",
    "access": "public",
    "description": " The behavior's action iterator",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "RawBehaviorIterator"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "upCheckInterval",
    "memberof": "lib/behaviorRunner.js~BehaviorRunner",
    "static": false,
    "longname": "lib/behaviorRunner.js~BehaviorRunner#upCheckInterval",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "type": {
      "nullable": true,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "metadata",
    "memberof": "lib/behaviorRunner.js~BehaviorRunner",
    "static": false,
    "longname": "lib/behaviorRunner.js~BehaviorRunner#metadata",
    "access": "public",
    "description": "",
    "lineNumber": 37,
    "type": {
      "nullable": true,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "postStepFN",
    "memberof": "lib/behaviorRunner.js~BehaviorRunner",
    "static": false,
    "longname": "lib/behaviorRunner.js~BehaviorRunner#postStepFN",
    "access": "public",
    "description": "A function used to transform the return value of {@link BehaviorRunner#stepIterator}\nafter performing an action into a value that is interpretable by Webrecorders automation\nsystem.",
    "lineNumber": 45,
    "type": {
      "nullable": true,
      "types": [
        "function(result: RawBehaviorStepResults): BehaviorStepResults"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 64,
    "kind": "member",
    "name": "_waitP",
    "memberof": "lib/behaviorRunner.js~BehaviorRunner",
    "static": false,
    "longname": "lib/behaviorRunner.js~BehaviorRunner#_waitP",
    "access": "private",
    "description": "",
    "lineNumber": 51,
    "type": {
      "nullable": true,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 65,
    "kind": "get",
    "name": "isPaused",
    "memberof": "lib/behaviorRunner.js~BehaviorRunner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/behaviorRunner.js~BehaviorRunner#isPaused",
    "access": "public",
    "description": "Returns T/F indicating if the behavior is currently paused",
    "lineNumber": 59,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "swapBehaviorIterator",
    "memberof": "lib/behaviorRunner.js~BehaviorRunner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/behaviorRunner.js~BehaviorRunner#swapBehaviorIterator",
    "access": "public",
    "description": "Swaps the behavior actions to be applied to the page.",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "RawBehaviorIterator"
        ],
        "spread": false,
        "optional": false,
        "name": "newBehaviorIterator",
        "description": "a new behavior action iterator to be run"
      },
      {
        "nullable": null,
        "types": [
          "function(results: RawBehaviorStepResults): BehaviorStepResults"
        ],
        "spread": false,
        "optional": true,
        "name": "newPostStepFN",
        "description": "an optional new post step function\nto be used. If a previous postStepFN is in use and a new function is not supplied the old one is persisted."
      }
    ],
    "return": null
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "swapPostStepFn",
    "memberof": "lib/behaviorRunner.js~BehaviorRunner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/behaviorRunner.js~BehaviorRunner#swapPostStepFn",
    "access": "public",
    "description": "Swaps the postStepFN to be used.",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(results: RawBehaviorStepResults): BehaviorStepResults"
        ],
        "spread": false,
        "optional": false,
        "name": "newPostStepFN",
        "description": "The new\npostStepFN to be used."
      }
    ],
    "return": null
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "waitToBeUnpaused",
    "memberof": "lib/behaviorRunner.js~BehaviorRunner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/behaviorRunner.js~BehaviorRunner#waitToBeUnpaused",
    "access": "public",
    "description": "Returns a promise that resolves once `window.$WBBehaviorPaused`\nis falsy, checking at 2 second intervals.",
    "lineNumber": 90,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "performStep",
    "memberof": "lib/behaviorRunner.js~BehaviorRunner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/behaviorRunner.js~BehaviorRunner#performStep",
    "access": "public",
    "description": "Calls the next function of {@link BehaviorRunner#stepIterator} and\nif a postStepFN was supplied it is called with the results of\nthe performed action otherwise they are returned directly.",
    "lineNumber": 110,
    "return": {
      "nullable": null,
      "types": [
        "Promise<BehaviorStepResults>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "step",
    "memberof": "lib/behaviorRunner.js~BehaviorRunner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/behaviorRunner.js~BehaviorRunner#step",
    "access": "public",
    "description": "Initiates the next action of a behavior.\n\nIf the behavior is transitioning into the paused state (previously not paused)\nthe promise returned resolves with the results of performing the next\naction once the un-paused state has been reached.\n\nIf this method is called and the behavior is currently in the paused state\nthe promise returned is the same one returned when transitioning into the\npaused state.\n\nOtherwise the returned promise resolves with the state of the behavior\nafter performing an action.",
    "lineNumber": 133,
    "return": {
      "nullable": null,
      "types": [
        "Promise<BehaviorStepResults>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "autoRunIter",
    "memberof": "lib/behaviorRunner.js~BehaviorRunner",
    "generator": true,
    "async": true,
    "static": false,
    "longname": "lib/behaviorRunner.js~BehaviorRunner#autoRunIter",
    "access": "public",
    "description": "Shortcut for automatically run the behavior via async generators",
    "examples": [
      "  // in some async function\n  for await (const value of runner.autoRunIter()) {\n    console.log(value)\n  }"
    ],
    "lineNumber": 154,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "delayAmount",
        "description": "Optional amount of delay to be applied between\nsteps"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterableIterator<BehaviorStepResults>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "autoRun",
    "memberof": "lib/behaviorRunner.js~BehaviorRunner",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/behaviorRunner.js~BehaviorRunner#autoRun",
    "access": "public",
    "description": "Automatically run the behavior",
    "lineNumber": 171,
    "params": [
      {
        "nullable": null,
        "types": [
          "BehaviorRunOptions"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " {}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "autoRunWithDelay",
    "memberof": "lib/behaviorRunner.js~BehaviorRunner",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "lib/behaviorRunner.js~BehaviorRunner#autoRunWithDelay",
    "access": "public",
    "description": "Automatically run the behavior to completion optionally supplying\nan amount of time, in milliseconds, that will be waited for\nbefore initiating another action\nthe wait after performing an behavior action (step)",
    "lineNumber": 192,
    "params": [
      {
        "nullable": null,
        "types": [
          "BehaviorRunOptions"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " {}",
        "defaultRaw": {},
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "pause",
    "memberof": "lib/behaviorRunner.js~BehaviorRunner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/behaviorRunner.js~BehaviorRunner#pause",
    "access": "public",
    "description": "Pauses the behavior by setting the behavior paused flag to true",
    "lineNumber": 207,
    "params": [],
    "return": null
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "unpause",
    "memberof": "lib/behaviorRunner.js~BehaviorRunner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/behaviorRunner.js~BehaviorRunner#unpause",
    "access": "public",
    "description": "Un-pauses the behavior by setting the behavior paused flag to false",
    "lineNumber": 214,
    "params": [],
    "return": null
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "[Symbol.asyncIterator]",
    "memberof": "lib/behaviorRunner.js~BehaviorRunner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/behaviorRunner.js~BehaviorRunner#[Symbol.asyncIterator]",
    "access": "public",
    "description": "Shortcut for running a behavior from a for await of loop.",
    "lineNumber": 222,
    "return": {
      "nullable": null,
      "types": [
        "BehaviorRunnerAsyncIterator"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 83,
    "kind": "function",
    "name": "initRunnableBehavior",
    "memberof": "lib/behaviorRunner.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/behaviorRunner.js~initRunnableBehavior",
    "access": "public",
    "export": true,
    "importPath": "lib/behaviorRunner.js",
    "importStyle": "{initRunnableBehavior}",
    "description": "Performs the setup required for integration with Webrecorders automation system\nAdds as propeties to the supplied window object\n - $WBBehaviorStepIter$: the supplied `behaviorStepIterator`\n - $WBBehaviorRunner$: the instance of the class that wraps the behaviors actions\n - $WRIteratorHandler$: a function that initiates a behaviors action",
    "lineNumber": 238,
    "params": [
      {
        "nullable": null,
        "types": [
          "BehaviorRunnerInitOpts"
        ],
        "spread": false,
        "optional": false,
        "name": "init",
        "description": "Object used to initialize the behavior for running"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BehaviorRunner"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 84,
    "kind": "typedef",
    "name": "BehaviorRunnerOpts",
    "memberof": "lib/behaviorRunner.js",
    "static": true,
    "longname": "lib/behaviorRunner.js~BehaviorRunnerOpts",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "RawBehaviorIterator"
        ],
        "spread": false,
        "optional": false,
        "name": "behaviorStepIterator",
        "description": "An async iterator that\nyields the state of the behavior"
      },
      {
        "nullable": null,
        "types": [
          "function(results: RawBehaviorStepResults): BehaviorStepResults"
        ],
        "spread": false,
        "optional": true,
        "name": "postStepFN",
        "description": "An optional\nfunction that is supplied the state of the behavior after performing an action.\nIt is required that this function returns the state unmodified or a transformation\nof the state that is either an object that contains the original value of the done property\nor a boolean that is the value of the original done property."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "metadata",
        "description": "Optional metadata about the behavior currently being run"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "BehaviorRunnerOpts"
    }
  },
  {
    "__docId__": 85,
    "kind": "typedef",
    "name": "BehaviorRunnerInitOpts",
    "memberof": "lib/behaviorRunner.js",
    "static": true,
    "longname": "lib/behaviorRunner.js~BehaviorRunnerInitOpts",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Window"
        ],
        "spread": false,
        "optional": false,
        "name": "win",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "RawBehaviorIterator"
        ],
        "spread": false,
        "optional": false,
        "name": "behaviorStepIterator",
        "description": "An async iterator that\nyields the state of the behavior"
      },
      {
        "nullable": null,
        "types": [
          "function(results: RawBehaviorStepResults): BehaviorStepResults"
        ],
        "spread": false,
        "optional": true,
        "name": "postStepFN",
        "description": "An optional\nfunction that is supplied the state of the behavior after performing an action.\nIt is required that this function returns the state unmodified or a transformation\nof the state that is either an object that contains the original value of the done property\nor a boolean that is the value of the original done property."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "metadata",
        "description": "Optional metadata about the behavior currently being run"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "BehaviorRunnerInitOpts"
    }
  },
  {
    "__docId__": 86,
    "kind": "typedef",
    "name": "BehaviorRunnerAsyncIterator",
    "memberof": "lib/behaviorRunner.js",
    "static": true,
    "longname": "lib/behaviorRunner.js~BehaviorRunnerAsyncIterator",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "function(): Promise<BehaviorStepResults>"
        ],
        "spread": false,
        "optional": false,
        "name": "next",
        "description": "function used to initiate the next action of the behavior"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "BehaviorRunnerAsyncIterator"
    }
  },
  {
    "__docId__": 87,
    "kind": "typedef",
    "name": "BehaviorRunOptions",
    "memberof": "lib/behaviorRunner.js",
    "static": true,
    "longname": "lib/behaviorRunner.js~BehaviorRunOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "delayAmount",
        "description": "Time value in milliseconds representing how much time should be waited after initiating a behavior's step"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " true",
        "defaultRaw": true,
        "name": "noOutlinks",
        "description": "Should the collection of outlinks be disabled when running the behavior"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " true",
        "defaultRaw": true,
        "name": "logging",
        "description": "Should information the behavior sends be displayed"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "BehaviorRunOptions"
    }
  },
  {
    "__docId__": 88,
    "kind": "typedef",
    "name": "RawBehaviorIterator",
    "memberof": "lib/behaviorRunner.js",
    "static": true,
    "longname": "lib/behaviorRunner.js~RawBehaviorIterator",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "AsyncIterator<RawBehaviorStepResults>|AsyncIterableIterator<RawBehaviorStepResults>"
      ],
      "optional": false,
      "name": "RawBehaviorIterator"
    }
  },
  {
    "__docId__": 89,
    "kind": "file",
    "name": "lib/behaviorState.js",
    "content": "/**\n * Returns a behavior state object with the supplied msg indicating\n * the behavior runner should not wait for network idle.\n * The value returned should be yield'd to the behavior\n * runner\n * @param {string} msg - A message from the behavior representing a description of the action just performed\n * @param {*} [state] - Any additional information about the full state of the behavior\n * @return {BehaviorState}\n */\nexport function stateWithMsgNoWait(msg, state) {\n  return { wait: false, msg, state };\n}\n\n/**\n * Returns a behavior state object with the supplied msg indicating\n * the behavior runner should wait for network idle.\n * The value returned should be yield'd to the behavior\n * runner\n * @param {string} msg -  A message from the behavior representing a description of the action just performed\n * @param {*} [state] - Any additional information about the full state of the behavior\n * @return {BehaviorState}\n */\nexport function stateWithMsgWait(msg, state) {\n  return { wait: true, msg, state };\n}\n\n/**\n * Returns a behavior state object with the supplied wait\n * and msg values. The value returned should be yield'd\n * to the behavior runner\n * @param {boolean} wait\n * @param {*} msg - A message from the behavior representing a description of the action just performed\n * @param {*} [state] - Any additional information about the full state of the behavior\n * @return {BehaviorState}\n */\nexport function createState(wait, msg, state) {\n  return { wait, msg, state };\n}\n\n/**\n * Returns a behavior state object with the supplied msg with the wait\n * value being set by the return value of the supplied function.\n * The value returned should be yield'd to the behavior runner\n * @param {function(): boolean} fn\n * @param {*} msg - A message from the behavior representing a description of the action just performed\n * @param {*} [state] - Any additional information about the full state of the behavior\n * @return {BehaviorState}\n */\nexport function stateWithMsgWaitFromFn(fn, msg, state) {\n  let wait = false;\n  try {\n    wait = fn();\n  } catch (e) {\n    wait = false;\n  }\n  return createState(wait, msg);\n}\n\n/**\n * Returns a Promise that resolves to an behavior state object with\n * the supplied msg with the wait value being set by the value resolved Promise.\n * The value returned should be yield'd to the behavior runner\n * @param {Promise<boolean>} awaitable\n * @param {*} msg - A message from the behavior representing a description of the action just performed\n * @param {*} [state] - Any additional information about the full state of the behavior\n * @return {Promise<BehaviorState>}\n */\nexport async function stateWithMsgWaitFromAwaitable(awaitable, msg, state) {\n  let wait = false;\n  try {\n    wait = await awaitable;\n  } catch (e) {\n    wait = false;\n  }\n  return createState(wait, msg, state);\n}\n\n/**\n * @typedef {Object} BehaviorState\n * @property {string} msg - A message from the behavior representing a description of the action just performed\n * @property {boolean} wait - Should a wait for network idle be performed if possible by the runner\n * @property {*} state  - Any additional information about the full state of the behavior\n */\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/lib/behaviorState.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "stateWithMsgNoWait",
    "memberof": "lib/behaviorState.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/behaviorState.js~stateWithMsgNoWait",
    "access": "public",
    "export": true,
    "importPath": "lib/behaviorState.js",
    "importStyle": "{stateWithMsgNoWait}",
    "description": "Returns a behavior state object with the supplied msg indicating\nthe behavior runner should not wait for network idle.\nThe value returned should be yield'd to the behavior\nrunner",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": "A message from the behavior representing a description of the action just performed"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "state",
        "description": "Any additional information about the full state of the behavior"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BehaviorState"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 91,
    "kind": "function",
    "name": "stateWithMsgWait",
    "memberof": "lib/behaviorState.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/behaviorState.js~stateWithMsgWait",
    "access": "public",
    "export": true,
    "importPath": "lib/behaviorState.js",
    "importStyle": "{stateWithMsgWait}",
    "description": "Returns a behavior state object with the supplied msg indicating\nthe behavior runner should wait for network idle.\nThe value returned should be yield'd to the behavior\nrunner",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": "A message from the behavior representing a description of the action just performed"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "state",
        "description": "Any additional information about the full state of the behavior"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BehaviorState"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 92,
    "kind": "function",
    "name": "createState",
    "memberof": "lib/behaviorState.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/behaviorState.js~createState",
    "access": "public",
    "export": true,
    "importPath": "lib/behaviorState.js",
    "importStyle": "{createState}",
    "description": "Returns a behavior state object with the supplied wait\nand msg values. The value returned should be yield'd\nto the behavior runner",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "wait",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": "A message from the behavior representing a description of the action just performed"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "state",
        "description": "Any additional information about the full state of the behavior"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BehaviorState"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 93,
    "kind": "function",
    "name": "stateWithMsgWaitFromFn",
    "memberof": "lib/behaviorState.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/behaviorState.js~stateWithMsgWaitFromFn",
    "access": "public",
    "export": true,
    "importPath": "lib/behaviorState.js",
    "importStyle": "{stateWithMsgWaitFromFn}",
    "description": "Returns a behavior state object with the supplied msg with the wait\nvalue being set by the return value of the supplied function.\nThe value returned should be yield'd to the behavior runner",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": "A message from the behavior representing a description of the action just performed"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "state",
        "description": "Any additional information about the full state of the behavior"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BehaviorState"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "stateWithMsgWaitFromAwaitable",
    "memberof": "lib/behaviorState.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/behaviorState.js~stateWithMsgWaitFromAwaitable",
    "access": "public",
    "export": true,
    "importPath": "lib/behaviorState.js",
    "importStyle": "{stateWithMsgWaitFromAwaitable}",
    "description": "Returns a Promise that resolves to an behavior state object with\nthe supplied msg with the wait value being set by the value resolved Promise.\nThe value returned should be yield'd to the behavior runner",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "Promise<boolean>"
        ],
        "spread": false,
        "optional": false,
        "name": "awaitable",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": "A message from the behavior representing a description of the action just performed"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "state",
        "description": "Any additional information about the full state of the behavior"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<BehaviorState>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 95,
    "kind": "typedef",
    "name": "BehaviorState",
    "memberof": "lib/behaviorState.js",
    "static": true,
    "longname": "lib/behaviorState.js~BehaviorState",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": "A message from the behavior representing a description of the action just performed"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "wait",
        "description": "Should a wait for network idle be performed if possible by the runner"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "Any additional information about the full state of the behavior"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "BehaviorState"
    }
  },
  {
    "__docId__": 96,
    "kind": "file",
    "name": "lib/browser.js",
    "content": "/**\n * Waits for the value of `window.location.href` to differ from\n * the supplied value due to browser history manipulation. If actual navigation\n * causes a change this function is useless.  The default poll rate is 1 second\n * and the safety timeout is 5 seconds.\n * @param {string} previousLocation - The value of `window.location.href` prior\n * to the pending or already occurred history manipulation of `window.location`\n * @param {WaitForOptions} [options] - Optional options\n * for controlling the checks poll rate and the safety timeout length.\n * Supplied values for `pollRate` and `safety` in milliseconds.\n * @return {Promise<boolean>} - Returns false if no change was detected by\n * the timeout length determined by options.safety otherwise true.\n */\nexport function waitForHistoryManipToChangeLocation(previousLocation, options) {\n  const opts = Object.assign({ pollRate: 1000, max: 5000 }, options);\n  let pollInterval;\n  let safetyTimeout;\n  return new Promise(resolve => {\n    if (!locationEquals(previousLocation)) return resolve(true);\n    pollInterval = setInterval(() => {\n      if (!locationEquals(previousLocation)) {\n        if (safetyTimeout) {\n          clearTimeout(safetyTimeout);\n        }\n        clearInterval(pollInterval);\n        return resolve(true);\n      }\n    }, opts.pollRate);\n    safetyTimeout = setTimeout(() => {\n      if (pollInterval) clearInterval(pollInterval);\n      resolve(!locationEquals(previousLocation));\n    }, opts.max);\n  });\n}\n\n/**\n * Determines the strict equality of the string\n * to the value of `window.location.href`\n * @param {string} someLocation - The expect location.href value\n * @return {boolean}\n */\nexport function locationEquals(someLocation) {\n  return window.location.href === someLocation;\n}\n\n/**\n * Returns the value `window.location.href`\n * @return {string}\n */\nexport function browserLocation() {\n  return window.location.href;\n}\n\n/**\n * Determines if `window.location.href` contains\n * the supplied value as a substring.\n * @param {string} something - The value to determine if\n * it is a substring of `window.location.href`\n * @return {boolean}\n */\nexport function locationContains(something) {\n  return window.location.href.indexOf(something) !== -1;\n}\n\n/**\n * Navigate the browser back 1 entry in the history stack.\n * This may cause navigation.\n */\nexport function browserHistoryGoBack() {\n  history.go(-1);\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/lib/browser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 97,
    "kind": "function",
    "name": "waitForHistoryManipToChangeLocation",
    "memberof": "lib/browser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/browser.js~waitForHistoryManipToChangeLocation",
    "access": "public",
    "export": true,
    "importPath": "lib/browser.js",
    "importStyle": "{waitForHistoryManipToChangeLocation}",
    "description": "Waits for the value of `window.location.href` to differ from\nthe supplied value due to browser history manipulation. If actual navigation\ncauses a change this function is useless.  The default poll rate is 1 second\nand the safety timeout is 5 seconds.",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "previousLocation",
        "description": "The value of `window.location.href` prior\nto the pending or already occurred history manipulation of `window.location`"
      },
      {
        "nullable": null,
        "types": [
          "WaitForOptions"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Optional options\nfor controlling the checks poll rate and the safety timeout length.\nSupplied values for `pollRate` and `safety` in milliseconds."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": "Returns false if no change was detected by\nthe timeout length determined by options.safety otherwise true."
    }
  },
  {
    "__docId__": 98,
    "kind": "function",
    "name": "locationEquals",
    "memberof": "lib/browser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/browser.js~locationEquals",
    "access": "public",
    "export": true,
    "importPath": "lib/browser.js",
    "importStyle": "{locationEquals}",
    "description": "Determines the strict equality of the string\nto the value of `window.location.href`",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "someLocation",
        "description": "The expect location.href value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "browserLocation",
    "memberof": "lib/browser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/browser.js~browserLocation",
    "access": "public",
    "export": true,
    "importPath": "lib/browser.js",
    "importStyle": "{browserLocation}",
    "description": "Returns the value `window.location.href`",
    "lineNumber": 50,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 100,
    "kind": "function",
    "name": "locationContains",
    "memberof": "lib/browser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/browser.js~locationContains",
    "access": "public",
    "export": true,
    "importPath": "lib/browser.js",
    "importStyle": "{locationContains}",
    "description": "Determines if `window.location.href` contains\nthe supplied value as a substring.",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "something",
        "description": "The value to determine if\nit is a substring of `window.location.href`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 101,
    "kind": "function",
    "name": "browserHistoryGoBack",
    "memberof": "lib/browser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/browser.js~browserHistoryGoBack",
    "access": "public",
    "export": true,
    "importPath": "lib/browser.js",
    "importStyle": "{browserHistoryGoBack}",
    "description": "Navigate the browser back 1 entry in the history stack.\nThis may cause navigation.",
    "lineNumber": 69,
    "params": [],
    "return": null
  },
  {
    "__docId__": 102,
    "kind": "file",
    "name": "lib/clicks.js",
    "content": "import { delay, waitForPredicate } from './delays';\nimport { scrollIntoView } from './scrolls';\nimport { qs, qsa } from './dom';\nimport { createMouseEvent, fireMouseEventsOnElement } from './events';\nimport {\n  browserLocation,\n  waitForHistoryManipToChangeLocation,\n} from './browser';\n\n/**\n * @type {number}\n * @private\n */\nlet __currentClickCount = 0;\n\n/**\n * @type {Array<string>}\n * @private\n */\nconst __clickPreEvents = ['mousemove', 'mouseover', 'mousedown', 'mouseup'];\n\n/**\n * Calls the click function on the supplied element if non-null/defined.\n * Returns true or false to indicate if the click happened\n * @param {?SomeElement} elem - The element to be clicked\n * @return {boolean} - T/F to indicate that click happened.\n */\nexport function click(elem) {\n  let clicked = false;\n  if (elem != null) {\n    fireMouseEventsOnElement({\n      elem,\n      eventNames: __clickPreEvents,\n      clickCount: __currentClickCount,\n    });\n    __currentClickCount += 1;\n    elem.click();\n    elem.dispatchEvent(\n      createMouseEvent({\n        type: 'mouseleave',\n        elem,\n        clickCount: __currentClickCount,\n      })\n    );\n    clicked = true;\n  }\n  return clicked;\n}\n\n/**\n * Calls the click function on the supplied element if non-null/defined\n * that exists in the JS context of the supplied window (cntx).\n * Returns true or false to indicate if the click happened\n * @param {SomeElement} elem - The element to be clicked\n * @param {Window} cntx - The context window\n * @return {boolean} - T/F to indicate that click happened.\n */\nexport function clickInContext(elem, cntx) {\n  let clicked = false;\n  if (elem != null) {\n    fireMouseEventsOnElement({\n      elem,\n      eventNames: __clickPreEvents,\n      view: cntx,\n    });\n    elem.click();\n    elem.dispatchEvent(\n      createMouseEvent({ type: 'mouseleave', view: cntx, elem })\n    );\n    clicked = true;\n  }\n  return clicked;\n}\n\n/**\n * Calls the click method of the supplied element and waits the\n * specified delayTime after clicking IFF the supplied element was\n * non-null/undefined.\n * @param {?SomeElement} elem - The element to be clicked\n * @param {number} [delayTime = 1000] - How long is the delay after click\n * @return {Promise<boolean>} - A Promise that resolves to T/F\n * indicating if the click happened\n */\nexport async function clickWithDelay(elem, delayTime) {\n  let clicked = click(elem);\n  if (clicked) {\n    await delay(delayTime || 1000);\n  }\n  return clicked;\n}\n\n/**\n * Calls the click method of the supplied element that exists in\n * the JS context of the supplied window object (cntx) and waits the\n * specified delayTime after clicking IFF the supplied element was\n * non-null/undefined.\n * @param {HTMLElement|Element} elem - The element to be clicked\n * @param {Window} cntx - The context window\n * @param {number} [delayTime = 1000] - How long is the delay after click\n * @return {Promise<boolean>} - A Promise that resolves to T/F\n * indicating if the click happened\n */\nexport async function clickInContextWithDelay(elem, cntx, delayTime) {\n  const clicked = clickInContext(elem, cntx);\n  if (clicked) {\n    await delay(delayTime || 1000);\n  }\n  return clicked;\n}\n\n/**\n * Scrolls the supplied element into view and clicks it if the\n * element is non-null/undefined\n * @param {HTMLElement|Element} elem - The element to be scrolled into view\n * and clicked.\n * @return {boolean} - T/F to indicate that the click happened\n */\nexport function scrollIntoViewAndClick(elem) {\n  scrollIntoView(elem);\n  return click(elem);\n}\n\n/**\n * Scrolls the supplied element into view and clicks it if the\n * element is non-null/undefined and waits for the specified delay time\n * @param {HTMLElement|Element} elem - The element to be\n * @param {number} [delayTime = 1000] - How long is the delay\n * @return {Promise<boolean>} - A Promise that resolves to T/F indicating\n * that the click happened\n */\nexport function scrollIntoViewAndClickWithDelay(elem, delayTime) {\n  scrollIntoView(elem);\n  return clickWithDelay(elem, delayTime || 1000);\n}\n\n/**\n * Scrolls into view and clicks all the elements\n * present in the supplied array.\n * @param {Array<HTMLElement>} elems - The array of elements\n * to be scrolled into view and clicked\n * @return {number} - The number of elements clicked out of the supplied\n * array of elements\n */\nexport function scrollAllIntoViewAndClick(elems) {\n  let totalClicks = 0;\n  for (var i = 0; i < elems.length; ++i) {\n    scrollIntoView(elems[i]);\n    if (click(elems[i])) totalClicks += 1;\n  }\n  return totalClicks;\n}\n\n/**\n * Scrolls into view and clicks all the elements\n * present in the supplied array waiting for the supplied\n * delay time after each click of an element in the array.\n * @param {Array<HTMLElement|Element|Node>} elems - The array of elements\n * to be scrolled into view and clicked\n * @param {number} [delayTime = 1000] - How long is the delay after click\n * @return {Promise<void>}\n */\nexport async function scrollAllIntoViewAndClickWithDelay(elems, delayTime) {\n  const delayAmount = delayTime || 1000;\n  for (var i = 0; i < elems.length; ++i) {\n    scrollIntoView(elems[i]);\n    await clickWithDelay(elems[i], delayAmount);\n  }\n}\n\n/**\n * Clicks the element from executing document.querySelector using\n * the supplied selector\n * @param {string} selector - the css selector to use\n * @param {*} [cntx] - element to use rather than document for the querySelector call\n * @return {boolean} - T/F to indicate that the click happened\n */\nexport function selectElemAndClick(selector, cntx) {\n  return click(qs(selector, cntx));\n}\n\n/**\n * Clicks the element from executing document.querySelector using\n * the supplied selector and waiting the specified delay time after clicking\n * @param {string} selector - the css selector to use\n * @param {number} [delayTime = 1000] - How long is the delay\n * @return {Promise<boolean>} - A Promise that resolves to T/F indicating\n * that the click happened\n */\nexport function selectElemAndClickWithDelay(selector, delayTime) {\n  return clickWithDelay(document.querySelector(selector), delayTime || 1000);\n}\n\n/**\n * Clicks the element from executing querySelector using\n * the supplied selector using the supplied element\n * @param {Element|Node|HTMLElement} selectFrom - element to use for the querySelector call\n * @param {string} selector - the css selector to use\n * @return {boolean} - T/F to indicate that the click happened\n */\nexport function selectElemFromAndClick(selectFrom, selector) {\n  return click(qs(selector, selectFrom));\n}\n\n/**\n * Clicks the element from executing querySelector using\n * the supplied selector from the supplied element and waiting the specified delay time after clicking\n * @param {Element|Node|HTMLElement} selectFrom - element to use for the querySelector call\n * @param {string} selector - the css selector to use\n * @param {number} [delayTime = 1000] - How long is the delay\n * @return {Promise<boolean>} - A Promise that resolves to T/F indicating\n * that the click happened\n */\nexport function selectElemFromAndClickWithDelay(\n  selectFrom,\n  selector,\n  delayTime\n) {\n  return clickWithDelay(qs(selector, selectFrom), delayTime || 1000);\n}\n\n/**\n * Clicks the supplied element and then waits for the supplied predicate function to return true\n * @param {Element|Node|HTMLElement} elem - the element to be clicked\n * @param {function(): boolean} predicate - function returning true or false indicating the wait condition is satisfied\n * @param {?WaitForOptions} [options] - Options controlling how the wait\n * will happen\n * @return {Promise<{predicate: boolean, maxExceeded: boolean, clicked: boolean}>} - A Promise that resolves with\n * an object indicating the results of the operation\n */\nexport async function clickAndWaitFor(elem, predicate, options) {\n  const results = { clicked: false, maxExceeded: false, predicate: false };\n  results.clicked = click(elem);\n  if (results.clicked) {\n    const waitr = await waitForPredicate(predicate, options);\n    results.predicate = waitr.predicate;\n    results.maxExceeded = waitr.maxExceeded;\n  }\n  return results;\n}\n\n/**\n * Clicks the element returned by calling querySelector using the selector\n * on document or the supplied element (selectFrom) and then waits for the supplied\n * predicate function to return true\n * @param {string} selector - the css selector to use\n * @param {function(): boolean} predicate - function returning true or false indicating the wait condition is satisfied\n * @param {HTMLElement|Document} [selectFrom] - optional element to use for the querySelector(selector) call\n * @return {Promise<{predicate: boolean, maxExceeded: boolean, clicked: boolean}>} - A Promise that resolves with\n * an object indicating the results of the operation\n */\nexport function selectClickAndWaitFor(selector, predicate, selectFrom) {\n  return clickAndWaitFor(qs(selector, selectFrom), predicate);\n}\n\n/**\n * Clicks the element returned from result of calling querySelector using the supplied\n * selector on the supplied element N number of times. Note that the evaluation of the querySelector\n * is done all N times.\n * @param {Element} selectFrom - element to use for the querySelector(selector) call\n * @param {string} selector - the css selector to use\n * @param {number} n - How many times to click the element returned by\n * performing selectFrom.querySelector(selector)\n * @return {number} - How many clicks occurred\n */\nexport function selectFromAndClickNTimes(selectFrom, selector, n) {\n  let totalClicks = 0;\n  let clickMe;\n  for (var i = 0; i < n; ++i) {\n    clickMe = qs(selector, selectFrom);\n    if (click(clickMe)) {\n      totalClicks += 1;\n    }\n  }\n  return totalClicks;\n}\n\n/**\n * Clicks the element returned from result of calling querySelector using the supplied\n * selector on the supplied element N number of times and waits for delay time afters each click.\n * Note that the evaluation of the querySelector is done all N times.\n * @param {Element} selectFrom - The element to use to call querySelector(selector) on\n * @param {string} selector - the css selector to use\n * @param {number} n - How many times to click the element returned by\n * performing selectFrom.querySelector(selector)\n * @param {number} [delayTime = 1000] - How long is the delay\n * @return {Promise<number>} - How many clicks occurred\n */\nexport async function selectFromAndClickNTimesWithDelay(\n  selectFrom,\n  selector,\n  n,\n  delayTime\n) {\n  let totalClicks = 0;\n  const delayAmount = delayTime || 1000;\n  let clickMe;\n  for (var i = 0; i < n; ++i) {\n    clickMe = qs(selector, selectFrom);\n    if (await clickWithDelay(clickMe, delayAmount)) {\n      totalClicks += 1;\n    }\n  }\n  return totalClicks;\n}\n\n/**\n * Clicks the element returned from result of calling querySelector using the supplied\n * selector on the supplied element until the results of the evaluting the selector returns null/undefined,\n * waiting for delay time afters each click.\n * @param {Element} selectFrom - The element to use to call querySelector(selector) on\n * @param {string} selector - the css selector to use when performing selectFrom.querySelector(selector)\n * @param {{delay: number, max: ?number}} [options] - options about delayTime and safety time\n * @return {Promise<number>} - How many clicks occurred\n */\nexport async function selectFromAndClickUntilNullWithDelay(\n  selectFrom,\n  selector,\n  options\n) {\n  let totalClicks = 0;\n  const opts = Object.assign({ delay: 1000 }, options);\n  let exit = false;\n  let safety;\n  if (opts.max) {\n    safety = setTimeout(() => {\n      exit = true;\n    }, opts.max);\n  }\n  let clickMe = qs(selector, selectFrom);\n  while (clickMe != null) {\n    if (!clickMe.isConnected) break;\n    if (exit) break;\n    await clickWithDelay(clickMe, opts.delay);\n    clickMe = qs(selector, selectFrom);\n    totalClicks += 1;\n  }\n  if (opts.safety) {\n    clearTimeout(safety);\n  }\n  return totalClicks;\n}\n\n/**\n * Like {@link selectFromAndClickUntilNullWithDelay} but will stop\n * selecting and clicking the selected element if the current reference\n * becomes disconnected from the dom or the optional stopPredicate\n * returns true. There is no dealy for delay you want\n * {@link selectScrollIntoViewAndClickWithDelayWhileSelectedConnected}\n * @param {string} selector - The selector to be used to select the element\n * @param {SelectScrollIntoViewClickUntilNullOptions} options\n * @return {void}\n */\nexport function selectScrollIntoViewAndClickSelectedWhileConnected(\n  selector,\n  options = {}\n) {\n  let selected = qs(selector, options.cntx);\n  const haveStopPred = typeof options.stopPredicate === 'function';\n  while (selected) {\n    if (!selected.isConnected) break;\n    scrollIntoViewAndClick(selected);\n    if (haveStopPred && options.stopPredicate(selected)) break;\n    selected = qs(selector, options.cntx);\n  }\n}\n\n/**\n * Like {@link selectFromAndClickUntilNullWithDelay} but will stop\n * selecting and clicking the selected element if the current reference\n * becomes disconnected from the dom or the optional stopPredicate\n * returns true.\n * @param {string} selector - The selector to be used to select the element\n * @param {SelectScrollIntoViewClickUntilNullOptions} [options] - Additional configuration options\n * @return {Promise<void>}\n */\nexport async function selectScrollIntoViewAndClickWithDelayWhileSelectedConnected(\n  selector,\n  options = {}\n) {\n  let selected = qs(selector, options.cntx);\n  const haveStopPred = typeof options.stopPredicate === 'function';\n  while (selected) {\n    if (!selected.isConnected) break;\n    await scrollIntoViewAndClickWithDelay(selected, options.delay);\n    if (haveStopPred && options.stopPredicate(selected)) break;\n    selected = qs(selector, options.cntx);\n  }\n}\n\n/**\n * Selects all elements that match the supplied selector and clicks them\n * returning T/F indicating if a click happened on any selected element\n * @param {string} selector\n * @param {Element} [context]\n * @return {boolean}\n */\nexport function selectAllAndClick(selector, context) {\n  const selected = qsa(selector, context);\n  let anyClicked = false;\n  for (let i = 0; i < selected.length; i++) {\n    if (click(selected[i])) anyClicked = true;\n  }\n  return anyClicked;\n}\n\n/**\n * Selects all elements that match the supplied selector and clicks them\n * returning T/F indicating if a click happened on any selected element\n * @param {{selector: string, cntx: *, delayTime: *}} opts\n * @return {boolean}\n */\nexport async function selectAllAndClickWithDelay({ selector, cntx, delay }) {\n  const selected = qsa(selector, cntx);\n  let anyClicked = false;\n  for (let i = 0; i < selected.length; i++) {\n    let wasClicked = await clickWithDelay(selected[i], delay);\n    anyClicked = wasClicked || anyClicked;\n  }\n  return anyClicked;\n}\n\n/**\n * Clicks the supplied element and waits for browser history to change (the URL is updated by JavaScript modifying the current history stack)\n * @param {Element|HTMLElement} elemToBeClicked - the Element to be click\n * @param {WaitForOptions} [waitOpts] - options controlling the wait\n * @return {Promise<{oldLocation: ?string, historyChanged: boolean, clicked: boolean, newLocation: ?string, ok: boolean}>}\n */\nexport async function clickAndWaitForHistoryChange(elemToBeClicked, waitOpts) {\n  const results = {\n    clicked: false,\n    historyChanged: false,\n    ok: false,\n    oldLocation: browserLocation(),\n    newLocation: null,\n  };\n  results.clicked = click(elemToBeClicked);\n  if (results.clicked) {\n    results.historyChanged = await waitForHistoryManipToChangeLocation(\n      results.oldLocation,\n      waitOpts\n    );\n  }\n  if (results.historyChanged) {\n    results.newLocation = browserLocation();\n  }\n  results.ok = results.clicked && results.historyChanged;\n  return results;\n}\n\n/**\n * @typedef {Object} SelectScrollIntoViewClickUntilNullOptions\n * @property {Document|Element|HTMLElement} [cntx] - optional element to call querySelector on using selector\n * @property {function(selected: Element): boolean} [stopPredicate] - optional function called to determine if the loop should end after each iteration\n * @property{number} [delay] - amount of time, in milliseconds, that should be waited after scrolling into view and clicking (defaults to 1 second) -- Only used if the function will apply a delay\n */\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/lib/clicks.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 103,
    "kind": "variable",
    "name": "__currentClickCount",
    "memberof": "lib/clicks.js",
    "static": true,
    "longname": "lib/clicks.js~__currentClickCount",
    "access": "private",
    "export": false,
    "importPath": "lib/clicks.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 104,
    "kind": "variable",
    "name": "__clickPreEvents",
    "memberof": "lib/clicks.js",
    "static": true,
    "longname": "lib/clicks.js~__clickPreEvents",
    "access": "private",
    "export": false,
    "importPath": "lib/clicks.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "Array<string>"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "click",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/clicks.js~click",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{click}",
    "description": "Calls the click function on the supplied element if non-null/defined.\nReturns true or false to indicate if the click happened",
    "lineNumber": 28,
    "params": [
      {
        "nullable": true,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be clicked"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "T/F to indicate that click happened."
    }
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "clickInContext",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/clicks.js~clickInContext",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{clickInContext}",
    "description": "Calls the click function on the supplied element if non-null/defined\nthat exists in the JS context of the supplied window (cntx).\nReturns true or false to indicate if the click happened",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be clicked"
      },
      {
        "nullable": null,
        "types": [
          "Window"
        ],
        "spread": false,
        "optional": false,
        "name": "cntx",
        "description": "The context window"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "T/F to indicate that click happened."
    }
  },
  {
    "__docId__": 107,
    "kind": "function",
    "name": "clickWithDelay",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/clicks.js~clickWithDelay",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{clickWithDelay}",
    "description": "Calls the click method of the supplied element and waits the\nspecified delayTime after clicking IFF the supplied element was\nnon-null/undefined.",
    "lineNumber": 84,
    "params": [
      {
        "nullable": true,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be clicked"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "delayTime",
        "description": "How long is the delay after click"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": "A Promise that resolves to T/F\nindicating if the click happened"
    }
  },
  {
    "__docId__": 108,
    "kind": "function",
    "name": "clickInContextWithDelay",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/clicks.js~clickInContextWithDelay",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{clickInContextWithDelay}",
    "description": "Calls the click method of the supplied element that exists in\nthe JS context of the supplied window object (cntx) and waits the\nspecified delayTime after clicking IFF the supplied element was\nnon-null/undefined.",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be clicked"
      },
      {
        "nullable": null,
        "types": [
          "Window"
        ],
        "spread": false,
        "optional": false,
        "name": "cntx",
        "description": "The context window"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "delayTime",
        "description": "How long is the delay after click"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": "A Promise that resolves to T/F\nindicating if the click happened"
    }
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "scrollIntoViewAndClick",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/clicks.js~scrollIntoViewAndClick",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{scrollIntoViewAndClick}",
    "description": "Scrolls the supplied element into view and clicks it if the\nelement is non-null/undefined",
    "lineNumber": 118,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be scrolled into view\nand clicked."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "T/F to indicate that the click happened"
    }
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "scrollIntoViewAndClickWithDelay",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/clicks.js~scrollIntoViewAndClickWithDelay",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{scrollIntoViewAndClickWithDelay}",
    "description": "Scrolls the supplied element into view and clicks it if the\nelement is non-null/undefined and waits for the specified delay time",
    "lineNumber": 131,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "delayTime",
        "description": "How long is the delay"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": "A Promise that resolves to T/F indicating\nthat the click happened"
    }
  },
  {
    "__docId__": 111,
    "kind": "function",
    "name": "scrollAllIntoViewAndClick",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/clicks.js~scrollAllIntoViewAndClick",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{scrollAllIntoViewAndClick}",
    "description": "Scrolls into view and clicks all the elements\npresent in the supplied array.",
    "lineNumber": 144,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<HTMLElement>"
        ],
        "spread": false,
        "optional": false,
        "name": "elems",
        "description": "The array of elements\nto be scrolled into view and clicked"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The number of elements clicked out of the supplied\narray of elements"
    }
  },
  {
    "__docId__": 112,
    "kind": "function",
    "name": "scrollAllIntoViewAndClickWithDelay",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/clicks.js~scrollAllIntoViewAndClickWithDelay",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{scrollAllIntoViewAndClickWithDelay}",
    "description": "Scrolls into view and clicks all the elements\npresent in the supplied array waiting for the supplied\ndelay time after each click of an element in the array.",
    "lineNumber": 162,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<HTMLElement|Element|Node>"
        ],
        "spread": false,
        "optional": false,
        "name": "elems",
        "description": "The array of elements\nto be scrolled into view and clicked"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "delayTime",
        "description": "How long is the delay after click"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 113,
    "kind": "function",
    "name": "selectElemAndClick",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/clicks.js~selectElemAndClick",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{selectElemAndClick}",
    "description": "Clicks the element from executing document.querySelector using\nthe supplied selector",
    "lineNumber": 177,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the css selector to use"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "cntx",
        "description": "element to use rather than document for the querySelector call"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "T/F to indicate that the click happened"
    }
  },
  {
    "__docId__": 114,
    "kind": "function",
    "name": "selectElemAndClickWithDelay",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/clicks.js~selectElemAndClickWithDelay",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{selectElemAndClickWithDelay}",
    "description": "Clicks the element from executing document.querySelector using\nthe supplied selector and waiting the specified delay time after clicking",
    "lineNumber": 189,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the css selector to use"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "delayTime",
        "description": "How long is the delay"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": "A Promise that resolves to T/F indicating\nthat the click happened"
    }
  },
  {
    "__docId__": 115,
    "kind": "function",
    "name": "selectElemFromAndClick",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/clicks.js~selectElemFromAndClick",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{selectElemFromAndClick}",
    "description": "Clicks the element from executing querySelector using\nthe supplied selector using the supplied element",
    "lineNumber": 200,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "Node",
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "selectFrom",
        "description": "element to use for the querySelector call"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the css selector to use"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "T/F to indicate that the click happened"
    }
  },
  {
    "__docId__": 116,
    "kind": "function",
    "name": "selectElemFromAndClickWithDelay",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/clicks.js~selectElemFromAndClickWithDelay",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{selectElemFromAndClickWithDelay}",
    "description": "Clicks the element from executing querySelector using\nthe supplied selector from the supplied element and waiting the specified delay time after clicking",
    "lineNumber": 213,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "Node",
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "selectFrom",
        "description": "element to use for the querySelector call"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the css selector to use"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "delayTime",
        "description": "How long is the delay"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": "A Promise that resolves to T/F indicating\nthat the click happened"
    }
  },
  {
    "__docId__": 117,
    "kind": "function",
    "name": "clickAndWaitFor",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/clicks.js~clickAndWaitFor",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{clickAndWaitFor}",
    "description": "Clicks the supplied element and then waits for the supplied predicate function to return true",
    "lineNumber": 230,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "Node",
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "the element to be clicked"
      },
      {
        "nullable": null,
        "types": [
          "function(): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "predicate",
        "description": "function returning true or false indicating the wait condition is satisfied"
      },
      {
        "nullable": true,
        "types": [
          "WaitForOptions"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Options controlling how the wait\nwill happen"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<{predicate: boolean, maxExceeded: boolean, clicked: boolean}>"
      ],
      "spread": false,
      "description": "A Promise that resolves with\nan object indicating the results of the operation"
    }
  },
  {
    "__docId__": 118,
    "kind": "function",
    "name": "selectClickAndWaitFor",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/clicks.js~selectClickAndWaitFor",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{selectClickAndWaitFor}",
    "description": "Clicks the element returned by calling querySelector using the selector\non document or the supplied element (selectFrom) and then waits for the supplied\npredicate function to return true",
    "lineNumber": 251,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the css selector to use"
      },
      {
        "nullable": null,
        "types": [
          "function(): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "predicate",
        "description": "function returning true or false indicating the wait condition is satisfied"
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "selectFrom",
        "description": "optional element to use for the querySelector(selector) call"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<{predicate: boolean, maxExceeded: boolean, clicked: boolean}>"
      ],
      "spread": false,
      "description": "A Promise that resolves with\nan object indicating the results of the operation"
    }
  },
  {
    "__docId__": 119,
    "kind": "function",
    "name": "selectFromAndClickNTimes",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/clicks.js~selectFromAndClickNTimes",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{selectFromAndClickNTimes}",
    "description": "Clicks the element returned from result of calling querySelector using the supplied\nselector on the supplied element N number of times. Note that the evaluation of the querySelector\nis done all N times.",
    "lineNumber": 265,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "selectFrom",
        "description": "element to use for the querySelector(selector) call"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the css selector to use"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "How many times to click the element returned by\nperforming selectFrom.querySelector(selector)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "How many clicks occurred"
    }
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "selectFromAndClickNTimesWithDelay",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/clicks.js~selectFromAndClickNTimesWithDelay",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{selectFromAndClickNTimesWithDelay}",
    "description": "Clicks the element returned from result of calling querySelector using the supplied\nselector on the supplied element N number of times and waits for delay time afters each click.\nNote that the evaluation of the querySelector is done all N times.",
    "lineNumber": 288,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "selectFrom",
        "description": "The element to use to call querySelector(selector) on"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the css selector to use"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "How many times to click the element returned by\nperforming selectFrom.querySelector(selector)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "delayTime",
        "description": "How long is the delay"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<number>"
      ],
      "spread": false,
      "description": "How many clicks occurred"
    }
  },
  {
    "__docId__": 121,
    "kind": "function",
    "name": "selectFromAndClickUntilNullWithDelay",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/clicks.js~selectFromAndClickUntilNullWithDelay",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{selectFromAndClickUntilNullWithDelay}",
    "description": "Clicks the element returned from result of calling querySelector using the supplied\nselector on the supplied element until the results of the evaluting the selector returns null/undefined,\nwaiting for delay time afters each click.",
    "lineNumber": 315,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "selectFrom",
        "description": "The element to use to call querySelector(selector) on"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the css selector to use when performing selectFrom.querySelector(selector)"
      },
      {
        "nullable": null,
        "types": [
          "{delay: number, max: ?number}"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "options about delayTime and safety time"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<number>"
      ],
      "spread": false,
      "description": "How many clicks occurred"
    }
  },
  {
    "__docId__": 122,
    "kind": "function",
    "name": "selectScrollIntoViewAndClickSelectedWhileConnected",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/clicks.js~selectScrollIntoViewAndClickSelectedWhileConnected",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{selectScrollIntoViewAndClickSelectedWhileConnected}",
    "description": "Like {@link selectFromAndClickUntilNullWithDelay} but will stop\nselecting and clicking the selected element if the current reference\nbecomes disconnected from the dom or the optional stopPredicate\nreturns true. There is no dealy for delay you want\n{@link selectScrollIntoViewAndClickWithDelayWhileSelectedConnected}",
    "lineNumber": 353,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "The selector to be used to select the element"
      },
      {
        "nullable": null,
        "types": [
          "SelectScrollIntoViewClickUntilNullOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 123,
    "kind": "function",
    "name": "selectScrollIntoViewAndClickWithDelayWhileSelectedConnected",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/clicks.js~selectScrollIntoViewAndClickWithDelayWhileSelectedConnected",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{selectScrollIntoViewAndClickWithDelayWhileSelectedConnected}",
    "description": "Like {@link selectFromAndClickUntilNullWithDelay} but will stop\nselecting and clicking the selected element if the current reference\nbecomes disconnected from the dom or the optional stopPredicate\nreturns true.",
    "lineNumber": 376,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "The selector to be used to select the element"
      },
      {
        "nullable": null,
        "types": [
          "SelectScrollIntoViewClickUntilNullOptions"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Additional configuration options"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 124,
    "kind": "function",
    "name": "selectAllAndClick",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/clicks.js~selectAllAndClick",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{selectAllAndClick}",
    "description": "Selects all elements that match the supplied selector and clicks them\nreturning T/F indicating if a click happened on any selected element",
    "lineNumber": 397,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": true,
        "name": "context",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 125,
    "kind": "function",
    "name": "selectAllAndClickWithDelay",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/clicks.js~selectAllAndClickWithDelay",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{selectAllAndClickWithDelay}",
    "description": "Selects all elements that match the supplied selector and clicks them\nreturning T/F indicating if a click happened on any selected element",
    "lineNumber": 412,
    "params": [
      {
        "nullable": null,
        "types": [
          "{selector: string, cntx: *, delayTime: *}"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 126,
    "kind": "function",
    "name": "clickAndWaitForHistoryChange",
    "memberof": "lib/clicks.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/clicks.js~clickAndWaitForHistoryChange",
    "access": "public",
    "export": true,
    "importPath": "lib/clicks.js",
    "importStyle": "{clickAndWaitForHistoryChange}",
    "description": "Clicks the supplied element and waits for browser history to change (the URL is updated by JavaScript modifying the current history stack)",
    "lineNumber": 428,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elemToBeClicked",
        "description": "the Element to be click"
      },
      {
        "nullable": null,
        "types": [
          "WaitForOptions"
        ],
        "spread": false,
        "optional": true,
        "name": "waitOpts",
        "description": "options controlling the wait"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<{oldLocation: ?string, historyChanged: boolean, clicked: boolean, newLocation: ?string, ok: boolean}>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 127,
    "kind": "typedef",
    "name": "SelectScrollIntoViewClickUntilNullOptions",
    "memberof": "lib/clicks.js",
    "static": true,
    "longname": "lib/clicks.js~SelectScrollIntoViewClickUntilNullOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Document",
          "Element",
          "HTMLElement"
        ],
        "spread": false,
        "optional": true,
        "name": "cntx",
        "description": "optional element to call querySelector on using selector"
      },
      {
        "nullable": null,
        "types": [
          "function(selected: Element): boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "stopPredicate",
        "description": "optional function called to determine if the loop should end after each iteration\n@property{number} [delay] - amount of time, in milliseconds, that should be waited after scrolling into view and clicking (defaults to 1 second) -- Only used if the function will apply a delay"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "SelectScrollIntoViewClickUntilNullOptions"
    }
  },
  {
    "__docId__": 128,
    "kind": "file",
    "name": "lib/delays.js",
    "content": "import { qs, selectorExists } from './dom';\nimport { promiseResolveReject } from './general';\n\n/**\n * 1 second in milliseconds\n * @type {number}\n */\nexport const DelayAmount1Second = 1000;\n\n/**\n * 2the second in milliseconds\n * @type {number}\n */\nexport const DelayAmount2Seconds = 2000;\n\n/**\n * 3 second in milliseconds\n * @type {number}\n */\nexport const DelayAmount3Seconds = 3000;\n\n/**\n * 4 second in milliseconds\n * @type {number}\n */\nexport const DelayAmount4Seconds = 4000;\n\n/**\n * 5 second in milliseconds\n * @type {number}\n */\nexport const DelayAmount5Seconds = 5000;\n\n/**\n * Converts the supplied n number of seconds into milliseconds\n * which is required for setTimeout and setInterval\n * @param {number} n - The number of seconds to be delayed\n * @return {number} - The delay amount in milliseconds\n */\nexport function secondsToDelayAmount(n) {\n  return n * 1000;\n}\n\n/**\n * Returns a Promise that resolves once\n * the behavior has been un-paused\n * @return {Promise<any>}\n */\nexport function resolveWhenBehaviorUnPaused() {\n  return new Promise(resolve => {\n    let intervalId = setInterval(() => {\n      if (!window.$WBBehaviorPaused) {\n        clearInterval(intervalId);\n        resolve();\n      }\n    }, 2000);\n  });\n}\n\n/**\n * Polls the supplied function at the timeout rate\n * only if the behavior is not paused\n * @return {number} - The id of the interval\n */\nexport function setIntervalP(callback, timeout) {\n  return setInterval(function() {\n    if (!window.$WBBehaviorPaused) {\n      callback();\n    }\n  }, timeout);\n}\n\n/**\n * Like setTimeout except that the timeout respects the pause state\n * of the behavior\n * @return {number} - The id of the timeout\n */\nexport function setTimeoutP(callback, timeout) {\n  function execIfNotPaused() {\n    if (!window.$WBBehaviorPaused) {\n      callback();\n    } else {\n      setTimeout(execIfNotPaused, 500);\n    }\n  }\n\n  return setTimeout(execIfNotPaused, timeout);\n}\n\n/**\n * Returns a Promise that resolves after waiting the amount of time\n * specified by delayTime.\n * @param {number} [delayTime = 3000] - The length of the delay in milliseconds\n * @return {Promise<void>}\n */\nexport function delay(delayTime) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delayTime || 3000);\n  });\n}\n\n/**\n * Returns a promise that resolves once the supplied predicate function\n * returns a truthy value.\n * @param {function(): boolean} predicate - A predicate function that\n * returns a truthy value to indicate the wait condition was satisfied otherwise\n * a falsy value to indicate wait condition not satisfied\n * @param {?WaitForOptions} [options] - Options controlling how the wait\n * will happen\n * @return {Promise<WaitResult>}\n */\nexport function waitForPredicate(predicate, options) {\n  const opts = Object.assign({ pollRate: 1000 }, options);\n  const results = { maxExceeded: false, predicate: false };\n  let maxTo;\n  return new Promise(resolve => {\n    if (predicate()) {\n      results.predicate = true;\n      return resolve(results);\n    }\n    let int = setInterval(() => {\n      if (predicate()) {\n        results.predicate = true;\n        clearInterval(int);\n        if (maxTo) clearTimeout(maxTo);\n        resolve(results);\n      }\n    }, opts.pollRate);\n    if (opts.max && opts.max !== -1) {\n      maxTo = setTimeout(() => {\n        results.predicate = predicate();\n        results.maxExceeded = true;\n        clearInterval(int);\n        resolve(results);\n      }, opts.max);\n    }\n  });\n}\n\n/**\n * Calls `fromNode.querySelector` using the supplied selector. If the\n * return value of the first calls is null/undefined then waits for the same call\n * to return a truthy value and then returns the element the selector matches.\n * @param {SomeElement} fromNode - The element the to be selected `selector` from\n * @param {string} selector - The querySelector to use for `fromNode.querySelector`\n * call.\n * @param {?WaitForOptions} [options] - Options controlling the wait\n * @return {Promise<?SomeElement>}\n */\nexport async function waitForAndSelectElement(fromNode, selector, options) {\n  const elem = qs(selector, fromNode);\n  if (!elem) {\n    const waitRet = await waitForPredicate(\n      () => selectorExists(selector, fromNode),\n      options\n    );\n    if (waitRet.predicate) return qs(selector, fromNode);\n    return null;\n  }\n  return elem;\n}\n\n/**\n * Returns a promise that resolves once\n * `document.readyState === 'complete'`\n * @return {Promise<void>}\n */\nexport function domCompletePromise() {\n  if (document.readyState !== 'complete') {\n    return new Promise(r => {\n      let i = setInterval(() => {\n        if (document.readyState === 'complete') {\n          clearInterval(i);\n          r();\n        }\n      }, 1000);\n    });\n  }\n  return Promise.resolve();\n}\n\n/**\n * Waits for the number children of the supplied parentElement\n * to become greater than the supplied parent elements `currentChildCount`.\n *\n * __Configuration__\n *\n * If a `max` is supplied (defaults to 15 seconds) the wait for additional children\n * to be added will not exceed the configured `max` value unless `max = -1`,\n * which in this case, the wait is infinite.\n *\n * When a `guard` function is supplied it is polled at value of `pollRate`\n * (defaults to 1 second), if and when it returns true the wait is considered\n * done regardless if the supplied parent element had additional children\n * added to it.\n *\n * @param {SomeElement} parentElement - The parent element\n * @param {WaitForOptions} [options] - Options controlling the wait\n * @return {Promise<WaitResult>}\n */\nexport function waitForAdditionalElemChildren(parentElement, options) {\n  const opts = Object.assign({ pollRate: 1000, max: 15000 }, options);\n  let int;\n  let safety;\n  const currentChildCount = parentElement.childElementCount;\n  const results = { predicate: false, maxExceeded: false };\n  return new Promise(resolve => {\n    int = setInterval(() => {\n      if (!parentElement.isConnected) {\n        clearInterval(int);\n        if (safety) clearTimeout(safety);\n        return resolve(results);\n      }\n      if (opts.guard && opts.guard()) {\n        clearInterval(int);\n        if (safety) clearTimeout(safety);\n        return resolve(results);\n      }\n      if (parentElement.childElementCount > currentChildCount) {\n        clearInterval(int);\n        if (safety) clearTimeout(safety);\n        results.predicate = true;\n        return resolve(results);\n      }\n    }, opts.pollRate);\n    if (opts.max !== -1) {\n      safety = setTimeout(() => {\n        clearInterval(int);\n        results.predicate = parentElement.childElementCount > currentChildCount;\n        results.maxExceeded = true;\n        resolve(results);\n      }, opts.max);\n    }\n  });\n}\n\n/**\n * Waits for additional child elements to be added to the supplied parentElement\n * using a mutation observer.\n *\n * __Configuration__\n *\n * If a `max` is supplied (defaults to 15 seconds) the wait for additional children\n * to be added will not exceed the configured `max` value unless `max = -1`,\n * which in this case, the wait is infinite.\n *\n * When a `guard` function is supplied it is polled at value of `pollRate`\n * (defaults to 1 second), if and when it returns true the wait is considered\n * done regardless if the supplied parent element had additional children\n * added to it.\n *\n * @param {SomeElement} parentElement - The parent element\n * @param {GuardedWaitForOptions} [options] - Options controlling the wait\n * @return {Promise<WaitResult>}\n */\nexport function waitForAdditionalElemChildrenMO(parentElement, options) {\n  const opts = Object.assign({ pollRate: 1000, max: 15000 }, options);\n  let maxTo;\n  let pollIn;\n  const results = { predicate: false, maxExceeded: false };\n  const prr = promiseResolveReject();\n  let mutatationObz;\n  const observer = () => {\n    if (maxTo) clearTimeout(maxTo);\n    if (pollIn) clearInterval(pollIn);\n    results.predicate = true;\n    if (mutatationObz) {\n      mutatationObz.disconnect();\n    }\n    prr.resolve(results);\n  };\n  if (opts.guard && opts.guard()) {\n    results.predicate = true;\n    prr.resolve(results);\n    return prr.promise;\n  }\n  mutatationObz = new MutationObserver(observer);\n  mutatationObz.observe(parentElement, { childList: true });\n  if (opts.guard) {\n    pollIn = setInterval(() => {\n      if (opts.guard()) {\n        observer();\n      }\n    }, opts.pollRate);\n  }\n  if (opts.max !== -1) {\n    maxTo = setTimeout(() => {\n      if (pollIn !== -1) clearInterval(pollIn);\n      results.maxExceeded = true;\n      mutatationObz.disconnect();\n      prr.resolve(results);\n    }, opts.max);\n  }\n  return prr.promise;\n}\n\n/**\n * Waits for the supplied element to be removed from the document.\n * The condition, element removed from document, is polled at the configured\n * `pollRate` (defaults to 1 second) for a maximum of `max` time (defaults to 15 seconds)\n * unless `max = -1` which in this case there is no maximum.\n * @param {SomeElement} elem - The element that should be removed\n * @param {WaitForOptions} [options] - Options controlling the wait\n * @return {Promise<WaitResult>}\n */\nexport function waitUntilElementIsRemovedFromDom(elem, options) {\n  const results = { predicate: false, maxExceeded: false };\n  const opts = Object.assign({ pollRate: 1000, max: 15000 }, options);\n  return new Promise(resolve => {\n    if (!elem.isConnected) {\n      results.predicate = true;\n      return resolve(results);\n    }\n    let safety;\n    const poll = setInterval(() => {\n      if (!elem.isConnected) {\n        if (safety) clearTimeout(safety);\n        clearInterval(poll);\n        results.predicate = true;\n        return resolve(results);\n      }\n    }, opts.pollRate);\n    if (opts.max !== -1) {\n      safety = setTimeout(() => {\n        clearInterval(poll);\n        results.predicate = !elem.isConnected;\n        results.maxExceeded = true;\n        resolve(results);\n      }, opts.max);\n    }\n  });\n}\n\n/**\n * Waits for the supplied selector to exist\n * @param {WaitForSelectorOptions} config - Options controlling the wait\n * @return {Promise<WaitResult>}\n */\nexport function waitForSelector({ selector, cntx, options }) {\n  return waitForPredicate(() => selectorExists(selector, cntx), options);\n}\n\n/**\n * @typedef {Object} WaitForOptions\n * @property {number} [pollRate = 1000] - The rate at which the condition will be checked\n * @property {?number} [max = 15000] - The maximum length of time the polling will happen in milliseconds\n */\n\n/**\n * @typedef {Object} GuardedWaitForOptions\n * @property {function(): boolean} [guard] - Function polled to determine if the wait\n * is considered done by additional conditions\n * @property {number} [pollRate = 1000] - The rate at which the condition will be checked\n * @property {?number} [max] - The maximum length of time the polling will happen in milliseconds\n */\n\n/**\n * @typedef {Object} WaitResult\n * @property {boolean} predicate - T/F indicating if the stopping condition(s) of a wait was met, this includes guards\n * @property {boolean} maxExceeded - T/F indicating if the configured maximum wait time was exceeded\n */\n\n/**\n * @typedef {Object} WaitForSelectorOptions\n * @property {string} selector - The selector to be waited for\n * @param {SomeElement|Document} [cntx] - element to use rather than document for the querySelector call\n * @param {WaitForOptions} [options] - Options controlling the wait\n */\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/lib/delays.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 129,
    "kind": "variable",
    "name": "DelayAmount1Second",
    "memberof": "lib/delays.js",
    "static": true,
    "longname": "lib/delays.js~DelayAmount1Second",
    "access": "public",
    "export": true,
    "importPath": "lib/delays.js",
    "importStyle": "{DelayAmount1Second}",
    "description": "1 second in milliseconds",
    "lineNumber": 8,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 130,
    "kind": "variable",
    "name": "DelayAmount2Seconds",
    "memberof": "lib/delays.js",
    "static": true,
    "longname": "lib/delays.js~DelayAmount2Seconds",
    "access": "public",
    "export": true,
    "importPath": "lib/delays.js",
    "importStyle": "{DelayAmount2Seconds}",
    "description": "2the second in milliseconds",
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 131,
    "kind": "variable",
    "name": "DelayAmount3Seconds",
    "memberof": "lib/delays.js",
    "static": true,
    "longname": "lib/delays.js~DelayAmount3Seconds",
    "access": "public",
    "export": true,
    "importPath": "lib/delays.js",
    "importStyle": "{DelayAmount3Seconds}",
    "description": "3 second in milliseconds",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 132,
    "kind": "variable",
    "name": "DelayAmount4Seconds",
    "memberof": "lib/delays.js",
    "static": true,
    "longname": "lib/delays.js~DelayAmount4Seconds",
    "access": "public",
    "export": true,
    "importPath": "lib/delays.js",
    "importStyle": "{DelayAmount4Seconds}",
    "description": "4 second in milliseconds",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 133,
    "kind": "variable",
    "name": "DelayAmount5Seconds",
    "memberof": "lib/delays.js",
    "static": true,
    "longname": "lib/delays.js~DelayAmount5Seconds",
    "access": "public",
    "export": true,
    "importPath": "lib/delays.js",
    "importStyle": "{DelayAmount5Seconds}",
    "description": "5 second in milliseconds",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 134,
    "kind": "function",
    "name": "secondsToDelayAmount",
    "memberof": "lib/delays.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/delays.js~secondsToDelayAmount",
    "access": "public",
    "export": true,
    "importPath": "lib/delays.js",
    "importStyle": "{secondsToDelayAmount}",
    "description": "Converts the supplied n number of seconds into milliseconds\nwhich is required for setTimeout and setInterval",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "The number of seconds to be delayed"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The delay amount in milliseconds"
    }
  },
  {
    "__docId__": 135,
    "kind": "function",
    "name": "resolveWhenBehaviorUnPaused",
    "memberof": "lib/delays.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/delays.js~resolveWhenBehaviorUnPaused",
    "access": "public",
    "export": true,
    "importPath": "lib/delays.js",
    "importStyle": "{resolveWhenBehaviorUnPaused}",
    "description": "Returns a Promise that resolves once\nthe behavior has been un-paused",
    "lineNumber": 49,
    "return": {
      "nullable": null,
      "types": [
        "Promise<any>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 136,
    "kind": "function",
    "name": "setIntervalP",
    "memberof": "lib/delays.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/delays.js~setIntervalP",
    "access": "public",
    "export": true,
    "importPath": "lib/delays.js",
    "importStyle": "{setIntervalP}",
    "description": "Polls the supplied function at the timeout rate\nonly if the behavior is not paused",
    "lineNumber": 65,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The id of the interval"
    },
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      },
      {
        "name": "timeout",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 137,
    "kind": "function",
    "name": "setTimeoutP",
    "memberof": "lib/delays.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/delays.js~setTimeoutP",
    "access": "public",
    "export": true,
    "importPath": "lib/delays.js",
    "importStyle": "{setTimeoutP}",
    "description": "Like setTimeout except that the timeout respects the pause state\nof the behavior",
    "lineNumber": 78,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The id of the timeout"
    },
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      },
      {
        "name": "timeout",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 138,
    "kind": "function",
    "name": "delay",
    "memberof": "lib/delays.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/delays.js~delay",
    "access": "public",
    "export": true,
    "importPath": "lib/delays.js",
    "importStyle": "{delay}",
    "description": "Returns a Promise that resolves after waiting the amount of time\nspecified by delayTime.",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 3000",
        "defaultRaw": 3000,
        "name": "delayTime",
        "description": "The length of the delay in milliseconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 139,
    "kind": "function",
    "name": "waitForPredicate",
    "memberof": "lib/delays.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/delays.js~waitForPredicate",
    "access": "public",
    "export": true,
    "importPath": "lib/delays.js",
    "importStyle": "{waitForPredicate}",
    "description": "Returns a promise that resolves once the supplied predicate function\nreturns a truthy value.",
    "lineNumber": 112,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "predicate",
        "description": "A predicate function that\nreturns a truthy value to indicate the wait condition was satisfied otherwise\na falsy value to indicate wait condition not satisfied"
      },
      {
        "nullable": true,
        "types": [
          "WaitForOptions"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Options controlling how the wait\nwill happen"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<WaitResult>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 140,
    "kind": "function",
    "name": "waitForAndSelectElement",
    "memberof": "lib/delays.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/delays.js~waitForAndSelectElement",
    "access": "public",
    "export": true,
    "importPath": "lib/delays.js",
    "importStyle": "{waitForAndSelectElement}",
    "description": "Calls `fromNode.querySelector` using the supplied selector. If the\nreturn value of the first calls is null/undefined then waits for the same call\nto return a truthy value and then returns the element the selector matches.",
    "lineNumber": 150,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "fromNode",
        "description": "The element the to be selected `selector` from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "The querySelector to use for `fromNode.querySelector`\ncall."
      },
      {
        "nullable": true,
        "types": [
          "WaitForOptions"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Options controlling the wait"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<?SomeElement>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 141,
    "kind": "function",
    "name": "domCompletePromise",
    "memberof": "lib/delays.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/delays.js~domCompletePromise",
    "access": "public",
    "export": true,
    "importPath": "lib/delays.js",
    "importStyle": "{domCompletePromise}",
    "description": "Returns a promise that resolves once\n`document.readyState === 'complete'`",
    "lineNumber": 168,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 142,
    "kind": "function",
    "name": "waitForAdditionalElemChildren",
    "memberof": "lib/delays.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/delays.js~waitForAdditionalElemChildren",
    "access": "public",
    "export": true,
    "importPath": "lib/delays.js",
    "importStyle": "{waitForAdditionalElemChildren}",
    "description": "Waits for the number children of the supplied parentElement\nto become greater than the supplied parent elements `currentChildCount`.\n\n__Configuration__\n\nIf a `max` is supplied (defaults to 15 seconds) the wait for additional children\nto be added will not exceed the configured `max` value unless `max = -1`,\nwhich in this case, the wait is infinite.\n\nWhen a `guard` function is supplied it is polled at value of `pollRate`\n(defaults to 1 second), if and when it returns true the wait is considered\ndone regardless if the supplied parent element had additional children\nadded to it.",
    "lineNumber": 201,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "parentElement",
        "description": "The parent element"
      },
      {
        "nullable": null,
        "types": [
          "WaitForOptions"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Options controlling the wait"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<WaitResult>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 143,
    "kind": "function",
    "name": "waitForAdditionalElemChildrenMO",
    "memberof": "lib/delays.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/delays.js~waitForAdditionalElemChildrenMO",
    "access": "public",
    "export": true,
    "importPath": "lib/delays.js",
    "importStyle": "{waitForAdditionalElemChildrenMO}",
    "description": "Waits for additional child elements to be added to the supplied parentElement\nusing a mutation observer.\n\n__Configuration__\n\nIf a `max` is supplied (defaults to 15 seconds) the wait for additional children\nto be added will not exceed the configured `max` value unless `max = -1`,\nwhich in this case, the wait is infinite.\n\nWhen a `guard` function is supplied it is polled at value of `pollRate`\n(defaults to 1 second), if and when it returns true the wait is considered\ndone regardless if the supplied parent element had additional children\nadded to it.",
    "lineNumber": 256,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "parentElement",
        "description": "The parent element"
      },
      {
        "nullable": null,
        "types": [
          "GuardedWaitForOptions"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Options controlling the wait"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<WaitResult>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 144,
    "kind": "function",
    "name": "waitUntilElementIsRemovedFromDom",
    "memberof": "lib/delays.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/delays.js~waitUntilElementIsRemovedFromDom",
    "access": "public",
    "export": true,
    "importPath": "lib/delays.js",
    "importStyle": "{waitUntilElementIsRemovedFromDom}",
    "description": "Waits for the supplied element to be removed from the document.\nThe condition, element removed from document, is polled at the configured\n`pollRate` (defaults to 1 second) for a maximum of `max` time (defaults to 15 seconds)\nunless `max = -1` which in this case there is no maximum.",
    "lineNumber": 306,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element that should be removed"
      },
      {
        "nullable": null,
        "types": [
          "WaitForOptions"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Options controlling the wait"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<WaitResult>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 145,
    "kind": "function",
    "name": "waitForSelector",
    "memberof": "lib/delays.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/delays.js~waitForSelector",
    "access": "public",
    "export": true,
    "importPath": "lib/delays.js",
    "importStyle": "{waitForSelector}",
    "description": "Waits for the supplied selector to exist",
    "lineNumber": 339,
    "params": [
      {
        "nullable": null,
        "types": [
          "WaitForSelectorOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Options controlling the wait"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<WaitResult>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 146,
    "kind": "typedef",
    "name": "WaitForOptions",
    "memberof": "lib/delays.js",
    "static": true,
    "longname": "lib/delays.js~WaitForOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "pollRate",
        "description": "The rate at which the condition will be checked"
      },
      {
        "nullable": true,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 15000",
        "defaultRaw": 15000,
        "name": "max",
        "description": "The maximum length of time the polling will happen in milliseconds"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "WaitForOptions"
    }
  },
  {
    "__docId__": 147,
    "kind": "typedef",
    "name": "GuardedWaitForOptions",
    "memberof": "lib/delays.js",
    "static": true,
    "longname": "lib/delays.js~GuardedWaitForOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "function(): boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "guard",
        "description": "Function polled to determine if the wait\nis considered done by additional conditions"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "pollRate",
        "description": "The rate at which the condition will be checked"
      },
      {
        "nullable": true,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "max",
        "description": "The maximum length of time the polling will happen in milliseconds"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "GuardedWaitForOptions"
    }
  },
  {
    "__docId__": 148,
    "kind": "typedef",
    "name": "WaitResult",
    "memberof": "lib/delays.js",
    "static": true,
    "longname": "lib/delays.js~WaitResult",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "predicate",
        "description": "T/F indicating if the stopping condition(s) of a wait was met, this includes guards"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "maxExceeded",
        "description": "T/F indicating if the configured maximum wait time was exceeded"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "WaitResult"
    }
  },
  {
    "__docId__": 149,
    "kind": "typedef",
    "name": "WaitForSelectorOptions",
    "memberof": "lib/delays.js",
    "static": true,
    "longname": "lib/delays.js~WaitForSelectorOptions",
    "access": "public",
    "description": "",
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement",
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "cntx",
        "description": "element to use rather than document for the querySelector call"
      },
      {
        "nullable": null,
        "types": [
          "WaitForOptions"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Options controlling the wait"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "The selector to be waited for"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "WaitForSelectorOptions"
    }
  },
  {
    "__docId__": 150,
    "kind": "file",
    "name": "lib/dom.js",
    "content": "import { camelCase } from './strings';\nimport { isPromise } from './general';\n\n/**\n * Returns the results of evaluating the supplied\n * xpath query using an optional context `contextElement`, defaults\n * to document, as XPathResult.ORDERED_NODE_SNAPSHOT_TYPE\n * @param {string} xpathQuery - The xpath query to be evaluated\n * @param {SomeElement|Document} [contextElement] - Optional\n * element to be used as the context of the evaluation\n * @return {XPathResult} - The results of the xpath query evaluation\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/evaluate\n */\nexport function xpathSnapShot(xpathQuery, contextElement) {\n  return document.evaluate(\n    xpathQuery,\n    contextElement || document,\n    null,\n    XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,\n    null\n  );\n}\n\n/**\n * Provides the same functionality of the chrome console utility `$x`\n * but likely less performant\n * @param {string} xpathQuery - The xpath query to be evaluated\n * @param {SomeElement|Document} [contextElement] - Optional\n * element to be used as the context of the evaluation\n * @return {Array<SomeElement>} - The results of the xpath query evaluation\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/evaluate\n * @see https://developers.google.com/web/tools/chrome-devtools/console/utilities\n */\nexport function xpathSnapShotArray(xpathQuery, contextElement) {\n  const snapShot = xpathSnapShot(xpathQuery, contextElement);\n  const elements = [];\n  const len = snapShot.snapshotLength;\n  for (var i = 0; i < len; i++) {\n    elements.push(snapShot.snapshotItem(i));\n  }\n  return elements;\n}\n\n/**\n * Ensures that if the value of the chrome console utility $x\n * is not the actual utility (jquery is on the page) the returned\n * function behaves exactly like it.\n * @param {function(...args: *): Array<SomeElement>} cliXPG\n * @return {function(...args: *): Array<SomeElement>}\n */\nexport function maybePolyfillXPG(cliXPG) {\n  if (\n    typeof cliXPG === 'function' &&\n    cliXPG.toString().includes('[Command Line API]')\n  ) {\n    return cliXPG;\n  }\n  return xpathSnapShotArray;\n}\n\n/**\n * Utility function for `(document||element).querySelector(selector)`\n * @param {string} selector - the selector to be use\n * @param {SomeElement|Document} [context] - element to use rather than document for the querySelector call\n * @return {?SomeElement}\n */\nexport function qs(selector, context) {\n  if (context != null) return context.querySelector(selector);\n  return document.querySelector(selector);\n}\n\n/**\n * Utility function for `(document||element).querySelector(selector)`\n * @param {string} selector - the selector to be use\n * @param {function(elem: SomeElement): boolean} filterFn\n * @param {SomeElement|Document} [context] - element to use rather than document for the querySelector call\n * @return {?SomeElement}\n */\nexport function filteredQs(selector, filterFn, context) {\n  const elem = qs(selector, context);\n  if (elem == null) return null;\n  if (elem && filterFn(elem)) return elem;\n  return null;\n}\n\n/**\n * Utility function for `document.querySelectorAll(selector)`\n * @param {string} selector - the selector to be use\n * @param {SomeElement|Document} [context] - element to use rather than document for the querySelector call\n * @return {NodeList<SomeElement>}\n */\nexport function qsa(selector, context) {\n  if (context != null) return context.querySelectorAll(selector);\n  return document.querySelectorAll(selector);\n}\n\n/**\n * Utility function for `document.getElementById(id)`\n * @param {string} eid - The id of the element to get\n * @param {SomeElement|Document} [context] - Optional document element to use rather than\n * the current JS context's\n * @return {?SomeElement}\n */\nexport function id(eid, context) {\n  if (context != null) return context.getElementById(eid);\n  return document.getElementById(eid);\n}\n\n/**\n * Removes the element selected by the supplied querySelector, if it exits,\n * returning true to indicate the element was removed and false otherwise\n * @param {string} selector - the selector to be use\n * @param {SomeElement|Document} [context] - element to use rather than document for the querySelector call\n * @return {boolean}\n */\nexport function maybeRemoveElem(selector, context) {\n  const elem = qs(selector, context);\n  if (elem) {\n    elem.remove();\n    return true;\n  }\n  return false;\n}\n\n/**\n * Removes the element with the supplied id, if it exits, returning\n * true to indicate the element was removed and false otherwise\n * @param {string} eid - The id of the element to remove\n * @param {SomeElement|Document} [context] - Optional document element to use rather than\n * the current JS context's\n * @return {boolean}\n */\nexport function maybeRemoveElemById(eid, context) {\n  const elem = id(eid, context);\n  if (elem) {\n    elem.remove();\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if the supplied elements `offsetTop === 0`\n * @param {SomeElement} elem - The element to check its\n * offsetTop\n * @return {boolean}\n */\nexport function elemOffsetTopZero(elem) {\n  return elem.offsetTop === 0;\n}\n\n/**\n * Marks the supplied element as visited by adding the marker\n * to its classList.\n * @param {SomeElement} elem - The element to mark\n * as visited\n * @param {string} [marker = 'wrvistited'] - Optional marker to use\n * defaults to `wrvistited`\n */\nexport function markElemAsVisited(elem, marker = 'wrvistited') {\n  if (elem != null) {\n    elem.classList.add(marker);\n  }\n}\n\n/**\n * Creates a style tag if one was not created before and adds\n * the supplied `styleDef` to it. If a style tag was created before\n * this function is a no-op\n * @param {string} styleDef - The CSS rules to add\n * @return {Object} - An object containing the selectors as key value pairs\n * where the keys are the selectors in camelcase and the value is the raw selector\n */\nexport function addBehaviorStyle(styleDef) {\n  let style = document.getElementById('$wrStyle$');\n  if (style == null) {\n    style = document.createElement('style');\n    style.id = '$wrStyle$';\n    document.head.appendChild(style);\n  }\n  style.textContent = styleDef;\n  const rules = style.sheet.rules;\n  let ruleIdx = rules.length;\n  let selector;\n  const classes = {};\n  while (ruleIdx--) {\n    selector = rules[ruleIdx].selectorText.replace('.', '');\n    classes[camelCase(selector)] = selector;\n  }\n  return classes;\n}\n\n/**\n * Determines if the supplied iframe is accessible from this\n * origin. Test is that access the window object of the iframes contentWindow\n * does not throw an exception and the contentDocument is not falsy.\n * @param {HTMLIFrameElement} iframe - The iframe to determine accessibility\n * @return {boolean} - True if the iframe is accessible and false otherwise\n */\nexport function canAccessIf(iframe) {\n  if (iframe == null) return false;\n  try {\n    iframe.contentWindow.window;\n  } catch (e) {\n    return false;\n  }\n  return iframe.contentDocument != null;\n}\n\n/**\n * Determines if the element the supplied selector selects exists\n * @param {string} selector - The querySelector to use for testing if\n * the element it selects exists\n * @param {Document|SomeElement} [cntx] - Optional element to use rather\n * than the current JS context's document object\n * @return {boolean} - True if the element exists, false otherwise\n */\nexport function selectorExists(selector, cntx) {\n  return qs(selector, cntx) != null;\n}\n\n/**\n * Determines if the element the supplied id identifies exists\n * @param {string} eid - The id of the element\n * @param {Document} [cntx] - Optional document object to use rather\n * than the current JS context's document object\n * @return {boolean} - True if the element exists, false otherwise\n */\nexport function idExists(eid, cntx) {\n  return id(eid, cntx) != null;\n}\n\n/**\n * Attempts to find a tag using the supplied function that accepts\n * an xpath query and an optional starting element and returns\n * the element the supplied predicate function returns a truthy value for\n * @param {function(query: string, node: ?Node): Node[]} xpg - xpath execution function\n * @param {string} tag - The tag to be found\n * @param {function(elem: SomeElement): boolean} predicate - Element selecting predicate function\n * @param {Document|SomeElement} [cntx] - Optional starting element, defaults to `document`\n * @return {SomeElement} - The desired element if it was found\n */\nexport function findTag(xpg, tag, predicate, cntx) {\n  const tags = xpg(`//${tag}`, cntx || document);\n  for (var i = 0; i < tags.length; ++i) {\n    if (predicate(tags[i])) return tags[i];\n  }\n  return null;\n}\n\n/**\n * Retrieves the value of an elements attribute if it exists\n * @param {SomeElement} elem - The element to retrieve an attribute from\n * @param {string} attr - The name of the attribute to be retrieved\n * @return {*} - The value of the retrieved attribute if it exists\n */\nexport function attr(elem, attr) {\n  if (elem) return elem.getAttribute(attr);\n  return null;\n}\n\n/**\n * Tests to determine if the value of elements attribute equals\n * the supplied value using loose equality\n * @param {SomeElement} elem - The element to retrieve an attribute from\n * @param {string} attr - The name of the attribute to be retrieved\n * @param {*} shouldEq - The value the attributes value should equal\n * @return {boolean} - T/F indicating if the attribute equals. Note\n * false can indicate the attribute does not equal expected or\n * the element was null/undefined\n */\nexport function attrEq(elem, attr, shouldEq) {\n  if (elem) return elem.getAttribute(attr) == shouldEq;\n  return false;\n}\n\n/**\n * Returns the Nth child node of the supplied element (indexing assumes start is 1)\n * @param {SomeElement|Document} elem - The element to retrieve the nth child of\n * @param {number} nth - The number of the nth child\n * @return {?SomeElement} - The nth child if it exists\n */\nexport function nthChildNodeOf(elem, nth) {\n  if (elem && elem.children && elem.children.length >= nth) {\n    return elem.childNodes[nth - 1];\n  }\n  return null;\n}\n\n/**\n * Chains {@link nthChildElemOf} for each nth child in `nths`\n * @param {SomeElement} startingElem - The starting parent element\n * @param {...number} nths - The consecutive nth child node\n * @return {?SomeElement}\n * @example\n * // child is the parent elements 3rd child node's 4th child node's 5th child node\n * const child = chainNthChildNodeOf(parentElement, 3, 4, 5);\n */\nexport function chainNthChildNodeOf(startingElem, ...nths) {\n  if (elemHasChildren(startingElem)) {\n    let child = startingElem;\n    for (var i = 0; i < nths.length; ++i) {\n      child = nthChildNodeOf(child, nths[i]);\n      if (child == null) break;\n    }\n    return child;\n  }\n  return null;\n}\n\n/**\n * Returns the first child element of the supplied elements parent element.\n * If the supplied element or the elements parent is null/undefined null is returned\n * @param {?SomeElement} elem - The element who's parents first child is desired\n * @return {?SomeElement}\n */\nexport function firstChildElemOfParent(elem) {\n  if (elem == null || elem.parentElement == null) return null;\n  return elem.parentElement.firstElementChild;\n}\n\n/**\n * Returns the supplied elements first element child. If the element is null\n * null is returned\n * @param {?SomeElement} elem - The element who's first child is desired\n * @returns {?SomeElement}\n */\nexport function firstChildElementOf(elem) {\n  if (elem != null) return elem.firstElementChild;\n  return null;\n}\n\n/**\n * Returns the first child element of the element matching the supplied selector\n * @param {string} selector - The selector to match the parent element of the desired child\n * @param {Document|SomeElement} [cntx] - Optional starting element, defaults to `document`\n * @returns {?SomeElement}\n */\nexport function firstChildElementOfSelector(selector, cntx) {\n  return firstChildElementOf(qs(selector, cntx));\n}\n\n/**\n * Returns the nth previous sibling of the supplied element if it is not null/undefined or the supplied element is not null/undefined\n * @param {?SomeElement} elem - The element who's nth previous sibling is desired\n * @param {number} nth - The nth previous sibling\n * @return {SomeElement}\n */\nexport function nthPreviousSibling(elem, nth) {\n  let prevSibling = elem;\n  for (let i = 0; i < nth; i++) {\n    if (!prevSibling) break;\n    prevSibling = prevSibling.previousElementSibling;\n  }\n  return prevSibling;\n}\n\n/**\n * Returns the Nth child element of the supplied element (indexing assumes start is 1)\n * @param {SomeElement|Document} elem - The element to retrieve the nth child element of\n * @param {number} nth - The number of the nth child element\n * @return {?SomeElement} - The nth child if it exists\n */\nexport function nthChildElementOf(elem, nth) {\n  if (!elem || !elem.firstElementChild) return null;\n  let child = elem.firstElementChild;\n  for (let i = 1; i < nth; i++) {\n    child = child.nextElementSibling;\n    if (!child) break;\n  }\n  return child;\n}\n\n/**\n * Chains {@link nthChildElementOf} for each nth child element in `nths`\n * @param {SomeElement} elem - The starting parent element\n * @param {...number} nths - The consecutive nth child node\n * @return {?SomeElement}\n * @example\n * // child is the parent elements 3rd child element's 4th child element's 5th child element\n * const child = chainNthChildElementOf(parentElement, 3, 4, 5);\n */\nexport function chainNthChildElementOf(elem, ...nths) {\n  let child = elem;\n  for (let i = 0; i < nths.length; i++) {\n    child = nthChildElementOf(child, nths[i]);\n    if (!child) break;\n  }\n  return child;\n}\n\n/**\n * Chains {@link firstChildElementOf} on the supplied element n `times`\n * @param {SomeElement} elem - The starting element\n * @param {number} times - How many times to call {@link firstChildElementOf}\n * @returns {?SomeElement}\n */\nexport function chainFistChildElemOf(elem, times) {\n  if (elem == null) return null;\n  let child = elem;\n  for (var i = 0; i < times; ++i) {\n    child = firstChildElementOf(child);\n    if (child == null) break;\n  }\n  return child;\n}\n\n/**\n * Returns the last child element of the supplied element\n * @param {?SomeElement} elem - The element who's last child element is desired\n * @returns {?SomeElement}\n */\nexport function lastChildElementOf(elem) {\n  if (elem != null) return elem.lastElementChild;\n  return null;\n}\n\n/**\n * Returns the last child element of the element the selector selects\n * @param {string} selector - The selector to be used to select the element who's last child element is desired\n * @param {Document|SomeElement} [cntx] - Optional starting element, defaults to `document`\n * @returns {?SomeElement}\n */\nexport function lastChildElementOfSelector(selector, cntx) {\n  return lastChildElementOf(qs(selector, cntx));\n}\n\n/**\n * Chains {@link lastChildElementOf} n `times` starting with the supplied element\n * @param {SomeElement} elem - The starting parent element who\n * @param {number} times - How many times should the\n * @returns {?SomeElement}\n */\nexport function chainLastChildElemOf(elem, times) {\n  let child = elem;\n  if (elem != null && elem.children && elem.children.length) {\n    for (var i = 0; i < times; ++i) {\n      child = lastChildElementOf(child);\n      if (child == null) break;\n    }\n  }\n  return child;\n}\n\n/**\n * Returns the number of child elements the supplied element has if it is not\n * null/undefined otherwise -1\n * @param {SomeElement} elem - The element who's child element count is deired\n * @return {number}\n */\nexport function numElemChildren(elem) {\n  if (elem != null) {\n    return elem.childElementCount;\n  }\n  return -1;\n}\n\n/**\n * Consecutively calls querySelector(selector) on the element returned by the previous invocation\n * @param {SomeElement|Document} startingSelectFrom - The first element to perform querySelector(startingSelector) on\n * @param {string} startingSelector - The first selector\n * @param {...string} selectors - Additional selections\n * @return {?SomeElement} - Final selected element if it exists\n */\nexport function chainQs(startingSelectFrom, startingSelector, ...selectors) {\n  let selected = qs(startingSelector, startingSelectFrom);\n  if (selected != null) {\n    const len = selectors.length;\n    for (var i = 0; i < len; ++i) {\n      selected = qs(selectors[i], selected);\n      if (selected == null) return null;\n    }\n  }\n  return selected;\n}\n\n/**\n * Adds a CSS classname to the supplied element\n * @param {?SomeElement} elem - The element to add the classname to\n * @param {string} clazz - The classname to be added\n */\nexport function addClass(elem, clazz) {\n  if (elem) {\n    elem.classList.add(clazz);\n  }\n}\n\n/**\n * Removes a CSS classname to the supplied element\n * @param {?SomeElement} elem - The element to remove the classname to\n * @param {string} clazz - The classname to be removed\n */\nexport function removeClass(elem, clazz) {\n  if (elem) {\n    elem.classList.remove(clazz);\n  }\n}\n\n/**\n * Tests to see if the supplied element has a css class\n * @param {?SomeElement} elem - The element to be tested if it has the class\n * @param {string} clazz - The classname\n * @return {boolean} - T/F indicating if the element has the class\n */\nexport function hasClass(elem, clazz) {\n  if (elem) return elem.classList.contains(clazz);\n  return false;\n}\n\n/**\n * Tests to see if the supplied element has the supplied css classes\n * @param {?SomeElement} elem - The element to be tested if it has the classes\n * @param {...string} classes - The classes the element must have\n * @return {boolean} - T/F indicating if the element has the classes\n */\nexport function hasClasses(elem, ...classes) {\n  if (!elem) return false;\n  for (let i = 0; i < classes.length; i++) {\n    if (!elem.classList.contains(classes[i])) return false;\n  }\n  return true;\n}\n\n/**\n * Tests to see if the supplied element has any of the supplied css classes\n * @param {?SomeElement} elem - The element to be tested if it has any of the classes\n * @param {...string} classes - The classes the element can have\n * @return {boolean} - T/F indicating if the element has any of the classes\n */\nexport function hasAnyClass(elem, ...classes) {\n  if (!elem) return false;\n  for (let i = 0; i < classes.length; i++) {\n    if (elem.classList.contains(classes[i])) return true;\n  }\n  return false;\n}\n\n/**\n * Returns T/F indicating if the element matches the supplied selector\n * @param {SomeElement} elem\n * @param {string} selector\n * @return {boolean}\n */\nexport function elemMatchesSelector(elem, selector) {\n  if (!elem) return false;\n  return elem.matches(selector);\n}\n\n/**\n * Returns T/F indicating if the supplied element has not CSS classes\n * @param {SomeElement} elem\n * @return {boolean}\n */\nexport function isClasslessElem(elem) {\n  return elem.classList.length === 0;\n}\n\n/**\n * Returns the supplied elements next element sibling\n * @param {SomeElement} elem - The element to receive its sibling\n * @return {?SomeElement} - The elements sibling if it exists\n */\nexport function getElemSibling(elem) {\n  if (!elem) return null;\n  return elem.nextElementSibling;\n}\n\n/**\n * Returns the next element sibling of the parent element of the\n * supplied element\n * @param {SomeElement} elem - The element to receive its sibling\n * @return {?SomeElement} - The elements sibling if it exists\n */\nexport function getElemsParentsSibling(elem) {\n  if (!elem) return null;\n  return getElemSibling(elem.parentElement);\n}\n\n/**\n * Returns T/F indicating if the supplied element has an sibling element\n * @param {SomeElement} elem\n * @return {boolean}\n */\nexport function elemHasSibling(elem) {\n  return getElemSibling(elem) != null;\n}\n\n/**\n * Returns the supplied elements next element sibling and removes the\n * supplied element\n * @param {SomeElement} elem - The element to receive its sibling\n * @return {?SomeElement} - The elements sibling if it exists\n */\nexport function getElemSiblingAndRemoveElem(elem) {\n  const sibling = getElemSibling(elem);\n  elem.remove();\n  return sibling;\n}\n\n/**\n * Determines if the supplied elements bounding client rect's\n * x,y,width,height,top,left properties all equal zero.\n * Note this function returns true if the element is null/undefined;\n * @param {SomeElement} elem - The element to be tested\n * @return {boolean} - T/F indicating if all zero or not.\n */\nexport function elemHasZeroBoundingRect(elem) {\n  if (elem == null) return true;\n  const rect = elem.getBoundingClientRect();\n  return (\n    rect.x === 0 &&\n    rect.y === 0 &&\n    rect.width === 0 &&\n    rect.height === 0 &&\n    rect.top === 0 &&\n    rect.left === 0\n  );\n}\n\n/**\n * Returns T/F indicating if the supplied element is visible.\n *\n * If the supplied element is falsy the return value is false.\n *\n * The test checks the computed style of the supplied element\n * to determine if it's css display property is not null and\n * the visibility of the element is visible.\n *\n * @param {SomeElement} elem\n * @return {boolean}\n */\nexport function isElemVisible(elem) {\n  if (elem == null) return false;\n  const computedStyle = window.getComputedStyle(elem);\n  if (computedStyle.display === 'none') return false;\n  return computedStyle.visibility === 'visible';\n}\n\n/**\n * Returns the Nth parent element of the supplied element (indexing assumes start is 1)\n * @param {SomeElement} elem - The element to retrieve the nth parent element of\n * @param {number} nth - The number of the nth parent\n * @return {?SomeElement} - The nth parent element if it exists\n */\nexport function getNthParentElement(elem, nth) {\n  if (elem != null && elem.parentElement != null && nth >= 1) {\n    let counter = nth - 1;\n    let parent = elem.parentElement;\n    while (counter > 0 && parent != null) {\n      parent = parent.parentElement;\n      counter--;\n    }\n    return parent;\n  }\n  return null;\n}\n\n/**\n * Returns T/F indicating if the supplied element's textContents contains the supplied string\n * @param {SomeElement} elem\n * @param {string} needle - The string that the elements textContents should contain\n * @param {boolean} [caseInsensitive] - Should the compairison be case insensitive\n * @returns {boolean}\n */\nexport function elementTextContains(elem, needle, caseInsensitive) {\n  if (elem != null && elem.textContent != null) {\n    const tc = elem.textContent;\n    return (caseInsensitive ? tc.toLowerCase() : tc).includes(needle);\n  }\n  return false;\n}\n\n/**\n * Returns T/F indicating if the supplied element's textContents equals the supplied string\n * @param {SomeElement} elem\n * @param {string} shouldEqual - The string that the elements textContents should be equal to\n * @param {boolean} [caseInsensitive] - Should the compairison be case insensitive\n * @returns {boolean}\n */\nexport function elementTextEqs(elem, shouldEqual, caseInsensitive) {\n  if (elem != null) {\n    const tc = elem.textContent;\n    return (caseInsensitive ? tc.toLowerCase() : tc) == shouldEqual;\n  }\n  return false;\n}\n\n/**\n * Returns T/F indicating if the supplied element' textContent starts and ends with the supplied start and end strings\n * @param {SomeElement} elem\n * @param {string} start - The string the element's textContent should start with\n * @param {string} end - The string the element's textContent should end with\n * @returns {boolean}\n */\nexport function elementTextStartsWithAndEndsWith(elem, start, end) {\n  return elementTextStartsWith(elem, start) && elementTextEndsWith(elem, end);\n}\n\n/**\n * Returns T/F indicating if the supplied element's textContent starts with the supplied string\n * @param {SomeElement} elem\n * @param {string} start - The string the element's textContent should start with\n * @returns {boolean}\n */\nexport function elementTextStartsWith(elem, start) {\n  if (elem != null && elem.textContent != null) {\n    return elem.textContent.startsWith(start);\n  }\n  return false;\n}\n\n/**\n * Returns T/F indicating if the supplied element's textContent ends with the supplied string\n * @param {SomeElement} elem\n * @param {string} end - The string the element's textContent should end with\n * @returns {boolean}\n */\nexport function elementTextEndsWith(elem, end) {\n  if (elem != null && elem.textContent != null) {\n    return elem.textContent.endsWith(end);\n  }\n  return false;\n}\n\n/**\n * Returns the results of splitting the supplied elements innerText using the supplied splitter\n * @param {SomeElement} elem\n * @param {string|RegExp} splitter\n * @returns {?Array<string>}\n */\nexport function splitElemInnerText(elem, splitter) {\n  if (elem != null && elem.innerText != null) {\n    return elem.innerText.split(splitter);\n  }\n  return null;\n}\n\n/**\n * Returns the results of splitting the supplied elements textContent using the supplied splitter\n * @param {SomeElement} elem\n * @param {string|RegExp} splitter\n * @returns {?Array<string>}\n */\nexport function splitElemTextContents(elem, splitter) {\n  if (elem != null && elem.textContent != null) {\n    return elem.textContent.split(splitter);\n  }\n  return null;\n}\n\n/**\n * Returns the supplied elements innerText\n * @param {?SomeElement} elem\n * @param {boolean} [trim] - Should the innerText be trimmed\n * @returns {?string}\n */\nexport function elemInnerText(elem, trim) {\n  if (elem != null && elem.innerText != null) {\n    return trim ? elem.innerText.trim() : elem.innerText;\n  }\n  return null;\n}\n\n/**\n * Returns T/F if the supplied elements innerText matches the supplied regex\n * @param {SomeElement} elem\n * @param {RegExp} regex\n * @return {boolean}\n */\nexport function elemInnerTextMatchesRegex(elem, regex) {\n  if (elem == null) return false;\n  return regex.test(elem.innerText);\n}\n\n/**\n * Returns the inner text of the element the supplied selectors matches\n * @param {string} selector - the selector to be use\n * @param {SomeElement|Document} [cntx] - element to use rather than document for the querySelector call\n * @return {?string}\n */\nexport function innerTextOfSelected(selector, cntx) {\n  return elemInnerText(qs(selector, cntx));\n}\n\n/**\n * Returns T/F if the supplied elements innerText equals the supplied string case sensitive\n * @param {SomeElement} elem\n * @param {string} shouldEqual - The string the elements inner text should equal\n * @param {boolean} [trim = false] - Should the innerText be trimmed before comparison\n * @return {boolean}\n */\nexport function elemInnerTextEqs(elem, shouldEqual, trim = false) {\n  if (elem == null || !elem.innerText) return false;\n  const innerText = trim ? elem.innerText.trim() : elem.innerText;\n  return innerText === shouldEqual;\n}\n\n/**\n * Returns T/F if the supplied elements innerText equals the supplied string case in-sensitive\n * @param {SomeElement} elem\n * @param {string} shouldEqual\n * @param {boolean} [trim = false]\n * @return {boolean}\n */\nexport function elemInnerTextEqsInsensitive(elem, shouldEqual, trim = false) {\n  if (elem == null || !elem.innerText) return false;\n  const innerText = trim ? elem.innerText.trim() : elem.innerText;\n  return innerText.toLowerCase() === shouldEqual;\n}\n\n/**\n * Returns T/F if the supplied elements innerText equals one of the supplied string case sensitive\n * @param {SomeElement} elem\n * @param {...string} shouldEquals\n * @return {boolean}\n */\nexport function elemInnerTextEqsOneOf(elem, ...shouldEquals) {\n  if (elem != null && elem.innerText != null) return false;\n  const innertText = elem.innerText;\n  for (var i = 0; i < shouldEquals.length; ++i) {\n    if (innertText === shouldEquals[i]) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the textContent of the supplied element\n * @param {SomeElement} elem\n * @returns {?string}\n */\nexport function elemTextContent(elem) {\n  if (elem != null && elem.textContent != null) return elem.textContent;\n  return null;\n}\n\n/**\n * Returns the scrollTop and scrollLeft values of the supplied document if one\n * was supplied other wise the values are from the current document\n * @param {?Document} [doc]\n * @return {{scrollTop: number, scrollLeft: number}}\n */\nexport function documentScrollPosition(doc) {\n  const documentElem = doc != null ? doc : document;\n  const elem = documentElem.body\n    ? documentElem.body\n    : documentElem.documentElement;\n  return {\n    scrollTop: elem.scrollTop,\n    scrollLeft: elem.scrollLeft,\n  };\n}\n\n/**\n * Helper function to get the actual x and y position,\n * page x and y position (scroll) and the height, width of a given element\n * @param {Element} element\n * @param {Document} [doc]\n * @return {?{y: number, pageY: number, x: number, pageX: number, w: number, h: number}}\n */\nexport function getElementPositionWidthHeight(element, doc) {\n  if (element == null) return null;\n  const rect = element.getBoundingClientRect();\n  const scrollPos = documentScrollPosition(doc);\n  return {\n    y: rect.top,\n    x: rect.left,\n    pageY: rect.top + scrollPos.scrollTop,\n    pageX: rect.left + scrollPos.scrollLeft,\n    w: rect.width,\n    h: rect.height,\n  };\n}\n\n/**\n * Get the position of the passed DOM element\n * @param {SomeElement} element\n * @param {Object} options\n * @return {{clientY: number, clientX: number, pageY: number, pageX: number}}\n */\nexport function getElementClientPagePosition(element, options) {\n  const opts = Object.assign({ x: 1, y: 1, floor: false }, options);\n  const cords = getElementPositionWidthHeight(element, opts.doc);\n  const clientX = cords.x + (cords.w / 100) * opts.x;\n  const clientY = cords.y + (cords.h / 100) * opts.y;\n  const pageX = cords.pageX + (cords.w / 100) * opts.x;\n  const pageY = cords.pageY + (cords.h / 100) * opts.y;\n  return {\n    clientX: opts.floor ? Math.floor(clientX) : clientX,\n    clientY: opts.floor ? Math.floor(clientY) : clientY,\n    pageX: opts.floor ? Math.floor(pageX) : pageX,\n    pageY: opts.floor ? Math.floor(pageY) : pageY,\n  };\n}\n\n/**\n * Get the center of the passed DOM element\n * @param {SomeElement} element\n * @param {{floor: boolean}} [options]\n * @return {?{clientY: number, clientX: number, pageY: number, pageX: number}}\n */\nexport function getElementClientPageCenter(element, options) {\n  if (element == null) return null;\n  const opts = Object.assign({ floor: false }, options);\n  const cords = getElementPositionWidthHeight(element, opts.doc);\n  const clientX = cords.x + cords.w / 2;\n  const clientY = cords.y + cords.h / 2;\n  const pageX = cords.pageX + cords.w / 2;\n  const pageY = cords.pageY + cords.h / 2;\n  return {\n    clientX: opts.floor ? Math.floor(clientX) : clientX,\n    clientY: opts.floor ? Math.floor(clientY) : clientY,\n    pageX: opts.floor ? Math.floor(pageX) : pageX,\n    pageY: opts.floor ? Math.floor(pageY) : pageY,\n  };\n}\n\n/**\n * Determines if the element the supplied selector selects exists.\n *\n * If one of the supplied selectors matches an existing element the idx property\n * of the returned object is set to the index of the selector in the array and\n * the success property is set to true.\n *\n * Otherwise idx = -1 and success = false.\n * @param {Array<string>} selectors - The query selectors to use for testing if\n * the elements it selects exist\n * @param {SomeElement} [cntx] - Optional element to use rather\n * than the current JS context's document object\n * @return {{idx: number, success: boolean}} - The results of the selectors\n * existence check\n */\nexport function anySelectorExists(selectors, cntx) {\n  const numSelectors = selectors.length;\n  for (var i = 0; i < numSelectors; ++i) {\n    if (selectorExists(selectors[i], cntx)) {\n      return { idx: i, success: true };\n    }\n  }\n  return { idx: -1, success: false };\n}\n\n/**\n * Returns T/F indicating if the elements name (localName) is equal to the supplied name\n * @param {SomeElement} elem - The element to check if its name equals the supplied name\n * @param {string} name - The name of the desired element\n * @return {boolean}\n */\nexport function elementsNameEquals(elem, name) {\n  if (!elem) return false;\n  return elem.localName === name;\n}\n\n/**\n * Returns T/F indicating if the nodes name (nodeName) is equal to the supplied name\n * @param {SomeElement} node - The node to check if its name equals the supplied name\n * @param {string} name - The name of the desired Node\n * @return {boolean}\n */\nexport function nodesNameEquals(node, name) {\n  if (!node) return false;\n  return node.nodeName === name;\n}\n\n/**\n * @typedef {Object} XPathOnOfOpts\n * @property {Array<string>} queries\n * @property {*} xpg\n * @property {*} [context]\n */\n\n/**\n * Returns the results of evaluating one of the supplied xpath queries if\n * one of the queries yields results otherwise null/undefined\n * @param {XPathOnOfOpts} options\n * @return {?Array<SomeElement>}\n */\nexport function xpathOneOf({ queries, xpg, context }) {\n  let results = null;\n  for (var i = 0; i < queries.length; i++) {\n    results = xpg(queries[i], context);\n    if (results.length || results.snapshotLength) return results;\n  }\n  return results;\n}\n\n/**\n * Returns the results of querySelector using one of the supplied selectors\n * one if one of the selectors yields results otherwise null/undefined\n * @param {{selectors: Array<string>, context: *}} options\n * @return {?SomeElement}\n */\nexport function qsOneOf({ selectors, context }) {\n  if (selectors == null) return null;\n  let results = null;\n  for (var i = 0; i < selectors.length; i++) {\n    results = qs(selectors[i], context);\n    if (results) return results;\n  }\n  return results;\n}\n\n/**\n * Returns the results of querySelectorAll using one of the supplied\n * selectors if one of the selectors yields results otherwise null/undefined\n * @param {{selectors: Array<string>, context: *}} options - Optional document object to use rather than\n * defaulting to the current execution contexts document object\n * @return {?NodeList<SomeElement>}\n */\nexport function qsaOneOf({ selectors, context }) {\n  if (selectors == null) return null;\n  let results = null;\n  for (var i = 0; i < selectors.length; i++) {\n    results = qsa(selectors[i], context);\n    if (results.length) return results;\n  }\n  return results;\n}\n\n/**\n * Returns the next element sibling of the supplied selector IFF\n * the selector returns a results and the next element sibling exists\n * otherwise null/undefined\n * @param {string} selector - The selector for the element who's next sibling is\n * to be returned\n @param {SomeElement|Document} [context] - element to use rather than document for the querySelector call\n * @return {?SomeElement}\n */\nexport function selectedNextElementSibling(selector, context) {\n  const maybeSelected = qs(selector, context);\n  if (maybeSelected && maybeSelected.nextElementSibling) {\n    return maybeSelected.nextElementSibling;\n  }\n  return null;\n}\n\n/**\n * Returns T/F indicating if the documents baseURI ends with the supplied string\n * @param {string} shouldEndWith - What the documents base URI should end with\n * @param {Document} [cntxDoc] - Optional document object to use rather than\n * defaulting to the current execution contexts document object\n * @return {boolean}\n */\nexport function docBaseURIEndsWith(shouldEndWith, cntxDoc) {\n  if (!shouldEndWith) return false;\n  return (cntxDoc || document).baseURI.endsWith(shouldEndWith);\n}\n\n/**\n * Returns T/F indicating if the documents baseURI equals the supplied string\n * @param {string} shouldEqual - What the documents base URI should be equal to\n * @param {Document} [cntxDoc] - Optional document object to use rather than\n * defaulting to the current execution contexts document object\n * @return {boolean}\n */\nexport function docBaseURIEquals(shouldEqual, cntxDoc) {\n  if (!shouldEqual) return false;\n  return (cntxDoc || document).baseURI === shouldEqual;\n}\n\n/**\n * Repeatably performs the supplied xpath query yielding the results\n * of the each query. If an empty result set is encountered and generateMoreElements\n * function was supplied it is called and the query repeated. If the second query\n * try yields another empty set the iterator ends\n * @param {string} query - The xpath query to be repeated until it returns no more elements\n * @param [cntx] - Optional element to execute the xpath query from (defaults to document)\n * @param {function(): void} [generateMoreElements] - Optional function used to generate more elements that may match the supplied xpath\n * @return {IterableIterator<SomeElement>}\n */\nexport function* repeatedXpathQueryIterator(query, cntx, generateMoreElements) {\n  let snapShot = xpathSnapShot(query, cntx);\n  const haveGenMore = typeof generateMoreElements === 'function';\n  while (snapShot.snapshotLength > 0) {\n    for (let i = 0; i < snapShot.snapshotLength; i++) {\n      yield snapShot.snapshotItem(i);\n    }\n    snapShot = xpathSnapShot(query, cntx);\n    if (snapShot.snapshotLength === 0) {\n      if (haveGenMore) generateMoreElements();\n      snapShot = xpathSnapShot(query, cntx);\n    }\n  }\n}\n\n/**\n * Repeatably performs the supplied xpath query yielding the results\n * of the each query. If an empty result set is encountered and generateMoreElements\n * function was supplied it is called and the query repeated. If the second query\n * try yields another empty set the iterator ends\n * @param {string} query - The xpath query to be repeated until it returns no more elements\n * @param [cntx] - Optional element to execute the xpath query from (defaults to document)\n * @param {function(): *} [generateMoreElements] - Optional function used to generate more elements that may match the supplied xpath\n * @return {AsyncIterableIterator<SomeElement>}\n */\nexport async function* repeatedXpathQueryIteratorAsync(\n  query,\n  cntx,\n  generateMoreElements\n) {\n  let snapShot = xpathSnapShot(query, cntx);\n  let i;\n  const haveGenMore = typeof generateMoreElements === 'function';\n  while (snapShot.snapshotLength > 0) {\n    for (i = 0; i < snapShot.snapshotLength; i++) {\n      yield snapShot.snapshotItem(i);\n    }\n    snapShot = xpathSnapShot(query, cntx);\n    if (snapShot.snapshotLength === 0) {\n      if (haveGenMore) {\n        const result = generateMoreElements();\n        if (isPromise(result)) await result;\n      }\n      snapShot = xpathSnapShot(query, cntx);\n    }\n  }\n}\n\n/**\n * Returns the value of the elements data attribute if it exists\n * If the element is null/undefined or does not have data attributes null is returned.\n * @param {HTMLElement|SVGElement} elem - The element that should have the data attribute\n * @param {string} dataKey - The name of the data value to be retrieved\n * @return {?string}\n */\nexport function elemDataValue(elem, dataKey) {\n  if (!elem) return null;\n  if (!elem.dataset) return null;\n  return elem.dataset[dataKey];\n}\n\n/**\n * Returns T/F indicating if the element has data attribute equal to the supplied value\n * @param {HTMLElement|SVGElement} elem - The element that should have the data attribute\n * @param dataKey - The name of the data value to be retrieved\n * @param dataValue - The expected value of the elements data attribute\n * @return {boolean}\n */\nexport function elemDataValueEqs(elem, dataKey, dataValue) {\n  if (!elem || !elem.dataset) return false;\n  return elem.dataset[dataKey] === dataValue;\n}\n\n/**\n * Returns T/F indicating if the supplied element has children.\n * If the supplied element is null/undefined false is returned.\n * @param {Element?} elem - The element to be checked for children\n * @return {boolean}\n */\nexport function elemHasChildren(elem) {\n  if (elem == null) return false;\n  if (typeof elem.hasChildNodes === 'function') {\n    return elem.hasChildNodes();\n  }\n  return elem.children.length > 0;\n}\n\n/**\n * Returns an iterator over the supplied parent element's child elements that\n * ends once the current child has no next element sibling.\n *\n * If the parent element is null/undefined then the returned iterator yields nothing.\n * @param {SomeElement?} parentElement - The parent element who's child elements will be iterated over\n * @return {IterableIterator<SomeElement?>}\n */\nexport function* childElementIterator(parentElement) {\n  if (parentElement == null) return;\n  let child = parentElement.firstElementChild;\n  while (child != null) {\n    yield child;\n    child = child.nextElementSibling;\n  }\n}\n\n/**\n * Returns an iterator over the supplied parent element's child nodes that\n * ends once the current child has no next sibling.\n *\n * If the parent element is null/undefined then the returned iterator yields nothing.\n * @param {SomeElement?} parentElement - The parent element who's child nodes will be iterated over\n * @return {IterableIterator<Node?>}\n */\nexport function* childNodeIterator(parentElement) {\n  if (parentElement == null) return;\n  let child = parentElement.firstChild;\n  while (child != null) {\n    yield child;\n    child = child.nextSibling;\n  }\n}\n\n/**\n * Applies the supplied `predicate` to every child element of the supplied\n * parent element and returns the element that the `predicate` returns true for\n * otherwise returns null.\n *\n * If the parent element is null then null is returned.\n * @param {SomeElement} parentElement - The parent element who's child element will be searched\n * @param {function(elem: SomeElement): boolean} predicate - The predicate function used to select a child\n * @return {?SomeElement}\n */\nexport function findDirectChildElement(parentElement, predicate) {\n  if (parentElement == null) return null;\n  for (let i = 0; i < parentElement.children.length; i++) {\n    if (predicate(parentElement.children[i])) return parentElement.children[i];\n  }\n  return null;\n}\n\n/**\n * @typedef {HTMLAnchorElement|HTMLElement|HTMLAppletElement|HTMLAreaElement|HTMLAudioElement|HTMLBaseElement|HTMLBaseFontElement|HTMLQuoteElement|HTMLBodyElement|HTMLBRElement|HTMLButtonElement|HTMLCanvasElement|HTMLTableCaptionElement|HTMLTableColElement|HTMLDataElement|HTMLDataListElement|HTMLModElement|HTMLDetailsElement|HTMLDialogElement|HTMLDirectoryElement|HTMLDivElement|HTMLDListElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLLabelElement|HTMLLegendElement|HTMLLIElement|HTMLLinkElement|HTMLMapElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLObjectElement|HTMLOListElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPictureElement|HTMLPreElement|HTMLProgressElement|HTMLScriptElement|HTMLSelectElement|HTMLSlotElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableElement|HTMLTableSectionElement|HTMLTableDataCellElement|HTMLTemplateElement|HTMLTextAreaElement|HTMLTableHeaderCellElement|HTMLTimeElement|HTMLTitleElement|HTMLTableRowElement|HTMLTrackElement|HTMLUListElement|HTMLVideoElement|Element|Node|SVGAElement|SVGCircleElement|SVGClipPathElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEConvolveMatrixElement|SVGFEDiffuseLightingElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEFloodElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGFEGaussianBlurElement|SVGFEImageElement|SVGFEMergeElement|SVGFEMergeNodeElement|SVGFEMorphologyElement|SVGFEOffsetElement|SVGFEPointLightElement|SVGFESpecularLightingElement|SVGFESpotLightElement|SVGFETileElement|SVGFETurbulenceElement|SVGFilterElement|SVGForeignObjectElement|SVGGElement|SVGImageElement|SVGLineElement|SVGLinearGradientElement|SVGMarkerElement|SVGMaskElement|SVGMetadataElement|SVGPathElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRadialGradientElement|SVGRectElement|SVGScriptElement|SVGStopElement|SVGStyleElement|SVGSVGElement|SVGSwitchElement|SVGSymbolElement|SVGTextElement|SVGTextPathElement|SVGTitleElement|SVGTSpanElement|SVGUseElement|SVGViewElement} SomeElement\n */\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/lib/dom.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 151,
    "kind": "function",
    "name": "xpathSnapShot",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~xpathSnapShot",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{xpathSnapShot}",
    "description": "Returns the results of evaluating the supplied\nxpath query using an optional context `contextElement`, defaults\nto document, as XPathResult.ORDERED_NODE_SNAPSHOT_TYPE",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/Document/evaluate"
    ],
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "xpathQuery",
        "description": "The xpath query to be evaluated"
      },
      {
        "nullable": null,
        "types": [
          "SomeElement",
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "contextElement",
        "description": "Optional\nelement to be used as the context of the evaluation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "XPathResult"
      ],
      "spread": false,
      "description": "The results of the xpath query evaluation"
    }
  },
  {
    "__docId__": 152,
    "kind": "function",
    "name": "xpathSnapShotArray",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~xpathSnapShotArray",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{xpathSnapShotArray}",
    "description": "Provides the same functionality of the chrome console utility `$x`\nbut likely less performant",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/Document/evaluate",
      "https://developers.google.com/web/tools/chrome-devtools/console/utilities"
    ],
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "xpathQuery",
        "description": "The xpath query to be evaluated"
      },
      {
        "nullable": null,
        "types": [
          "SomeElement",
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "contextElement",
        "description": "Optional\nelement to be used as the context of the evaluation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<SomeElement>"
      ],
      "spread": false,
      "description": "The results of the xpath query evaluation"
    }
  },
  {
    "__docId__": 153,
    "kind": "function",
    "name": "maybePolyfillXPG",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~maybePolyfillXPG",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{maybePolyfillXPG}",
    "description": "Ensures that if the value of the chrome console utility $x\nis not the actual utility (jquery is on the page) the returned\nfunction behaves exactly like it.",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(...args: *): Array<SomeElement>"
        ],
        "spread": false,
        "optional": false,
        "name": "cliXPG",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function(...args: *): Array<SomeElement>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 154,
    "kind": "function",
    "name": "qs",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~qs",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{qs}",
    "description": "Utility function for `(document||element).querySelector(selector)`",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the selector to be use"
      },
      {
        "nullable": null,
        "types": [
          "SomeElement",
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "context",
        "description": "element to use rather than document for the querySelector call"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 155,
    "kind": "function",
    "name": "filteredQs",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~filteredQs",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{filteredQs}",
    "description": "Utility function for `(document||element).querySelector(selector)`",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the selector to be use"
      },
      {
        "nullable": null,
        "types": [
          "function(elem: SomeElement): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "filterFn",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "SomeElement",
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "context",
        "description": "element to use rather than document for the querySelector call"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 156,
    "kind": "function",
    "name": "qsa",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~qsa",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{qsa}",
    "description": "Utility function for `document.querySelectorAll(selector)`",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the selector to be use"
      },
      {
        "nullable": null,
        "types": [
          "SomeElement",
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "context",
        "description": "element to use rather than document for the querySelector call"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "NodeList<SomeElement>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 157,
    "kind": "function",
    "name": "id",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~id",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{id}",
    "description": "Utility function for `document.getElementById(id)`",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eid",
        "description": "The id of the element to get"
      },
      {
        "nullable": null,
        "types": [
          "SomeElement",
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "context",
        "description": "Optional document element to use rather than\nthe current JS context's"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 158,
    "kind": "function",
    "name": "maybeRemoveElem",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~maybeRemoveElem",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{maybeRemoveElem}",
    "description": "Removes the element selected by the supplied querySelector, if it exits,\nreturning true to indicate the element was removed and false otherwise",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the selector to be use"
      },
      {
        "nullable": null,
        "types": [
          "SomeElement",
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "context",
        "description": "element to use rather than document for the querySelector call"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 159,
    "kind": "function",
    "name": "maybeRemoveElemById",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~maybeRemoveElemById",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{maybeRemoveElemById}",
    "description": "Removes the element with the supplied id, if it exits, returning\ntrue to indicate the element was removed and false otherwise",
    "lineNumber": 133,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eid",
        "description": "The id of the element to remove"
      },
      {
        "nullable": null,
        "types": [
          "SomeElement",
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "context",
        "description": "Optional document element to use rather than\nthe current JS context's"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 160,
    "kind": "function",
    "name": "elemOffsetTopZero",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~elemOffsetTopZero",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{elemOffsetTopZero}",
    "description": "Returns true if the supplied elements `offsetTop === 0`",
    "lineNumber": 148,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to check its\noffsetTop"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 161,
    "kind": "function",
    "name": "markElemAsVisited",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~markElemAsVisited",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{markElemAsVisited}",
    "description": "Marks the supplied element as visited by adding the marker\nto its classList.",
    "lineNumber": 160,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to mark\nas visited"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 'wrvistited'",
        "defaultRaw": " 'wrvistited'",
        "name": "marker",
        "description": "Optional marker to use\ndefaults to `wrvistited`"
      }
    ],
    "return": null
  },
  {
    "__docId__": 162,
    "kind": "function",
    "name": "addBehaviorStyle",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~addBehaviorStyle",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{addBehaviorStyle}",
    "description": "Creates a style tag if one was not created before and adds\nthe supplied `styleDef` to it. If a style tag was created before\nthis function is a no-op",
    "lineNumber": 174,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "styleDef",
        "description": "The CSS rules to add"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "An object containing the selectors as key value pairs\nwhere the keys are the selectors in camelcase and the value is the raw selector"
    }
  },
  {
    "__docId__": 163,
    "kind": "function",
    "name": "canAccessIf",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~canAccessIf",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{canAccessIf}",
    "description": "Determines if the supplied iframe is accessible from this\norigin. Test is that access the window object of the iframes contentWindow\ndoes not throw an exception and the contentDocument is not falsy.",
    "lineNumber": 200,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLIFrameElement"
        ],
        "spread": false,
        "optional": false,
        "name": "iframe",
        "description": "The iframe to determine accessibility"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True if the iframe is accessible and false otherwise"
    }
  },
  {
    "__docId__": 164,
    "kind": "function",
    "name": "selectorExists",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~selectorExists",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{selectorExists}",
    "description": "Determines if the element the supplied selector selects exists",
    "lineNumber": 218,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "The querySelector to use for testing if\nthe element it selects exists"
      },
      {
        "nullable": null,
        "types": [
          "Document",
          "SomeElement"
        ],
        "spread": false,
        "optional": true,
        "name": "cntx",
        "description": "Optional element to use rather\nthan the current JS context's document object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True if the element exists, false otherwise"
    }
  },
  {
    "__docId__": 165,
    "kind": "function",
    "name": "idExists",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~idExists",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{idExists}",
    "description": "Determines if the element the supplied id identifies exists",
    "lineNumber": 229,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eid",
        "description": "The id of the element"
      },
      {
        "nullable": null,
        "types": [
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "cntx",
        "description": "Optional document object to use rather\nthan the current JS context's document object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True if the element exists, false otherwise"
    }
  },
  {
    "__docId__": 166,
    "kind": "function",
    "name": "findTag",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~findTag",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{findTag}",
    "description": "Attempts to find a tag using the supplied function that accepts\nan xpath query and an optional starting element and returns\nthe element the supplied predicate function returns a truthy value for",
    "lineNumber": 243,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(query: string, node: ?Node): Node[]"
        ],
        "spread": false,
        "optional": false,
        "name": "xpg",
        "description": "xpath execution function"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tag",
        "description": "The tag to be found"
      },
      {
        "nullable": null,
        "types": [
          "function(elem: SomeElement): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "predicate",
        "description": "Element selecting predicate function"
      },
      {
        "nullable": null,
        "types": [
          "Document",
          "SomeElement"
        ],
        "spread": false,
        "optional": true,
        "name": "cntx",
        "description": "Optional starting element, defaults to `document`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": "The desired element if it was found"
    }
  },
  {
    "__docId__": 167,
    "kind": "function",
    "name": "attr",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~attr",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{attr}",
    "description": "Retrieves the value of an elements attribute if it exists",
    "lineNumber": 257,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to retrieve an attribute from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "attr",
        "description": "The name of the attribute to be retrieved"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The value of the retrieved attribute if it exists"
    }
  },
  {
    "__docId__": 168,
    "kind": "function",
    "name": "attrEq",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~attrEq",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{attrEq}",
    "description": "Tests to determine if the value of elements attribute equals\nthe supplied value using loose equality",
    "lineNumber": 272,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to retrieve an attribute from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "attr",
        "description": "The name of the attribute to be retrieved"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "shouldEq",
        "description": "The value the attributes value should equal"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "T/F indicating if the attribute equals. Note\nfalse can indicate the attribute does not equal expected or\nthe element was null/undefined"
    }
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "nthChildNodeOf",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~nthChildNodeOf",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{nthChildNodeOf}",
    "description": "Returns the Nth child node of the supplied element (indexing assumes start is 1)",
    "lineNumber": 283,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement",
          "Document"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to retrieve the nth child of"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "nth",
        "description": "The number of the nth child"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": "The nth child if it exists"
    }
  },
  {
    "__docId__": 170,
    "kind": "function",
    "name": "chainNthChildNodeOf",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~chainNthChildNodeOf",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{chainNthChildNodeOf}",
    "description": "Chains {@link nthChildElemOf} for each nth child in `nths`",
    "examples": [
      "// child is the parent elements 3rd child node's 4th child node's 5th child node\nconst child = chainNthChildNodeOf(parentElement, 3, 4, 5);"
    ],
    "lineNumber": 299,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "startingElem",
        "description": "The starting parent element"
      },
      {
        "nullable": null,
        "types": [
          "...number"
        ],
        "spread": true,
        "optional": false,
        "name": "nths",
        "description": "The consecutive nth child node"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 171,
    "kind": "function",
    "name": "firstChildElemOfParent",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~firstChildElemOfParent",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{firstChildElemOfParent}",
    "description": "Returns the first child element of the supplied elements parent element.\nIf the supplied element or the elements parent is null/undefined null is returned",
    "lineNumber": 317,
    "params": [
      {
        "nullable": true,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element who's parents first child is desired"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 172,
    "kind": "function",
    "name": "firstChildElementOf",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~firstChildElementOf",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{firstChildElementOf}",
    "description": "Returns the supplied elements first element child. If the element is null\nnull is returned",
    "lineNumber": 328,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?SomeElement}"
      }
    ],
    "params": [
      {
        "nullable": true,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element who's first child is desired"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 173,
    "kind": "function",
    "name": "firstChildElementOfSelector",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~firstChildElementOfSelector",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{firstChildElementOfSelector}",
    "description": "Returns the first child element of the element matching the supplied selector",
    "lineNumber": 339,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?SomeElement}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "The selector to match the parent element of the desired child"
      },
      {
        "nullable": null,
        "types": [
          "Document",
          "SomeElement"
        ],
        "spread": false,
        "optional": true,
        "name": "cntx",
        "description": "Optional starting element, defaults to `document`"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 174,
    "kind": "function",
    "name": "nthPreviousSibling",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~nthPreviousSibling",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{nthPreviousSibling}",
    "description": "Returns the nth previous sibling of the supplied element if it is not null/undefined or the supplied element is not null/undefined",
    "lineNumber": 349,
    "params": [
      {
        "nullable": true,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element who's nth previous sibling is desired"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "nth",
        "description": "The nth previous sibling"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 175,
    "kind": "function",
    "name": "nthChildElementOf",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~nthChildElementOf",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{nthChildElementOf}",
    "description": "Returns the Nth child element of the supplied element (indexing assumes start is 1)",
    "lineNumber": 364,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement",
          "Document"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to retrieve the nth child element of"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "nth",
        "description": "The number of the nth child element"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": "The nth child if it exists"
    }
  },
  {
    "__docId__": 176,
    "kind": "function",
    "name": "chainNthChildElementOf",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~chainNthChildElementOf",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{chainNthChildElementOf}",
    "description": "Chains {@link nthChildElementOf} for each nth child element in `nths`",
    "examples": [
      "// child is the parent elements 3rd child element's 4th child element's 5th child element\nconst child = chainNthChildElementOf(parentElement, 3, 4, 5);"
    ],
    "lineNumber": 383,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The starting parent element"
      },
      {
        "nullable": null,
        "types": [
          "...number"
        ],
        "spread": true,
        "optional": false,
        "name": "nths",
        "description": "The consecutive nth child node"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 177,
    "kind": "function",
    "name": "chainFistChildElemOf",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~chainFistChildElemOf",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{chainFistChildElemOf}",
    "description": "Chains {@link firstChildElementOf} on the supplied element n `times`",
    "lineNumber": 398,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?SomeElement}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The starting element"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "times",
        "description": "How many times to call {@link firstChildElementOf}"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 178,
    "kind": "function",
    "name": "lastChildElementOf",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~lastChildElementOf",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{lastChildElementOf}",
    "description": "Returns the last child element of the supplied element",
    "lineNumber": 413,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?SomeElement}"
      }
    ],
    "params": [
      {
        "nullable": true,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element who's last child element is desired"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 179,
    "kind": "function",
    "name": "lastChildElementOfSelector",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~lastChildElementOfSelector",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{lastChildElementOfSelector}",
    "description": "Returns the last child element of the element the selector selects",
    "lineNumber": 424,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?SomeElement}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "The selector to be used to select the element who's last child element is desired"
      },
      {
        "nullable": null,
        "types": [
          "Document",
          "SomeElement"
        ],
        "spread": false,
        "optional": true,
        "name": "cntx",
        "description": "Optional starting element, defaults to `document`"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 180,
    "kind": "function",
    "name": "chainLastChildElemOf",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~chainLastChildElemOf",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{chainLastChildElemOf}",
    "description": "Chains {@link lastChildElementOf} n `times` starting with the supplied element",
    "lineNumber": 434,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?SomeElement}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The starting parent element who"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "times",
        "description": "How many times should the"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 181,
    "kind": "function",
    "name": "numElemChildren",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~numElemChildren",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{numElemChildren}",
    "description": "Returns the number of child elements the supplied element has if it is not\nnull/undefined otherwise -1",
    "lineNumber": 451,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element who's child element count is deired"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 182,
    "kind": "function",
    "name": "chainQs",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~chainQs",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{chainQs}",
    "description": "Consecutively calls querySelector(selector) on the element returned by the previous invocation",
    "lineNumber": 465,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement",
          "Document"
        ],
        "spread": false,
        "optional": false,
        "name": "startingSelectFrom",
        "description": "The first element to perform querySelector(startingSelector) on"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "startingSelector",
        "description": "The first selector"
      },
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "selectors",
        "description": "Additional selections"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": "Final selected element if it exists"
    }
  },
  {
    "__docId__": 183,
    "kind": "function",
    "name": "addClass",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~addClass",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{addClass}",
    "description": "Adds a CSS classname to the supplied element",
    "lineNumber": 482,
    "params": [
      {
        "nullable": true,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to add the classname to"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "clazz",
        "description": "The classname to be added"
      }
    ],
    "return": null
  },
  {
    "__docId__": 184,
    "kind": "function",
    "name": "removeClass",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~removeClass",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{removeClass}",
    "description": "Removes a CSS classname to the supplied element",
    "lineNumber": 493,
    "params": [
      {
        "nullable": true,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to remove the classname to"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "clazz",
        "description": "The classname to be removed"
      }
    ],
    "return": null
  },
  {
    "__docId__": 185,
    "kind": "function",
    "name": "hasClass",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~hasClass",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{hasClass}",
    "description": "Tests to see if the supplied element has a css class",
    "lineNumber": 505,
    "params": [
      {
        "nullable": true,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be tested if it has the class"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "clazz",
        "description": "The classname"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "T/F indicating if the element has the class"
    }
  },
  {
    "__docId__": 186,
    "kind": "function",
    "name": "hasClasses",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~hasClasses",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{hasClasses}",
    "description": "Tests to see if the supplied element has the supplied css classes",
    "lineNumber": 516,
    "params": [
      {
        "nullable": true,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be tested if it has the classes"
      },
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "classes",
        "description": "The classes the element must have"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "T/F indicating if the element has the classes"
    }
  },
  {
    "__docId__": 187,
    "kind": "function",
    "name": "hasAnyClass",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~hasAnyClass",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{hasAnyClass}",
    "description": "Tests to see if the supplied element has any of the supplied css classes",
    "lineNumber": 530,
    "params": [
      {
        "nullable": true,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be tested if it has any of the classes"
      },
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "classes",
        "description": "The classes the element can have"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "T/F indicating if the element has any of the classes"
    }
  },
  {
    "__docId__": 188,
    "kind": "function",
    "name": "elemMatchesSelector",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~elemMatchesSelector",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{elemMatchesSelector}",
    "description": "Returns T/F indicating if the element matches the supplied selector",
    "lineNumber": 544,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 189,
    "kind": "function",
    "name": "isClasslessElem",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~isClasslessElem",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{isClasslessElem}",
    "description": "Returns T/F indicating if the supplied element has not CSS classes",
    "lineNumber": 554,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 190,
    "kind": "function",
    "name": "getElemSibling",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~getElemSibling",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{getElemSibling}",
    "description": "Returns the supplied elements next element sibling",
    "lineNumber": 563,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to receive its sibling"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": "The elements sibling if it exists"
    }
  },
  {
    "__docId__": 191,
    "kind": "function",
    "name": "getElemsParentsSibling",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~getElemsParentsSibling",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{getElemsParentsSibling}",
    "description": "Returns the next element sibling of the parent element of the\nsupplied element",
    "lineNumber": 574,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to receive its sibling"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": "The elements sibling if it exists"
    }
  },
  {
    "__docId__": 192,
    "kind": "function",
    "name": "elemHasSibling",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~elemHasSibling",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{elemHasSibling}",
    "description": "Returns T/F indicating if the supplied element has an sibling element",
    "lineNumber": 584,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 193,
    "kind": "function",
    "name": "getElemSiblingAndRemoveElem",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~getElemSiblingAndRemoveElem",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{getElemSiblingAndRemoveElem}",
    "description": "Returns the supplied elements next element sibling and removes the\nsupplied element",
    "lineNumber": 594,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to receive its sibling"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": "The elements sibling if it exists"
    }
  },
  {
    "__docId__": 194,
    "kind": "function",
    "name": "elemHasZeroBoundingRect",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~elemHasZeroBoundingRect",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{elemHasZeroBoundingRect}",
    "description": "Determines if the supplied elements bounding client rect's\nx,y,width,height,top,left properties all equal zero.\nNote this function returns true if the element is null/undefined;",
    "lineNumber": 607,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be tested"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "T/F indicating if all zero or not."
    }
  },
  {
    "__docId__": 195,
    "kind": "function",
    "name": "isElemVisible",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~isElemVisible",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{isElemVisible}",
    "description": "Returns T/F indicating if the supplied element is visible.\n\nIf the supplied element is falsy the return value is false.\n\nThe test checks the computed style of the supplied element\nto determine if it's css display property is not null and\nthe visibility of the element is visible.",
    "lineNumber": 632,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 196,
    "kind": "function",
    "name": "getNthParentElement",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~getNthParentElement",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{getNthParentElement}",
    "description": "Returns the Nth parent element of the supplied element (indexing assumes start is 1)",
    "lineNumber": 645,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to retrieve the nth parent element of"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "nth",
        "description": "The number of the nth parent"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": "The nth parent element if it exists"
    }
  },
  {
    "__docId__": 197,
    "kind": "function",
    "name": "elementTextContains",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~elementTextContains",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{elementTextContains}",
    "description": "Returns T/F indicating if the supplied element's textContents contains the supplied string",
    "lineNumber": 665,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "needle",
        "description": "The string that the elements textContents should contain"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "caseInsensitive",
        "description": "Should the compairison be case insensitive"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 198,
    "kind": "function",
    "name": "elementTextEqs",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~elementTextEqs",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{elementTextEqs}",
    "description": "Returns T/F indicating if the supplied element's textContents equals the supplied string",
    "lineNumber": 680,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "shouldEqual",
        "description": "The string that the elements textContents should be equal to"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "caseInsensitive",
        "description": "Should the compairison be case insensitive"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 199,
    "kind": "function",
    "name": "elementTextStartsWithAndEndsWith",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~elementTextStartsWithAndEndsWith",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{elementTextStartsWithAndEndsWith}",
    "description": "Returns T/F indicating if the supplied element' textContent starts and ends with the supplied start and end strings",
    "lineNumber": 695,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "The string the element's textContent should start with"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "The string the element's textContent should end with"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 200,
    "kind": "function",
    "name": "elementTextStartsWith",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~elementTextStartsWith",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{elementTextStartsWith}",
    "description": "Returns T/F indicating if the supplied element's textContent starts with the supplied string",
    "lineNumber": 705,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "The string the element's textContent should start with"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 201,
    "kind": "function",
    "name": "elementTextEndsWith",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~elementTextEndsWith",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{elementTextEndsWith}",
    "description": "Returns T/F indicating if the supplied element's textContent ends with the supplied string",
    "lineNumber": 718,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "The string the element's textContent should end with"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 202,
    "kind": "function",
    "name": "splitElemInnerText",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~splitElemInnerText",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{splitElemInnerText}",
    "description": "Returns the results of splitting the supplied elements innerText using the supplied splitter",
    "lineNumber": 731,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?Array<string>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "splitter",
        "description": ""
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Array<string>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 203,
    "kind": "function",
    "name": "splitElemTextContents",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~splitElemTextContents",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{splitElemTextContents}",
    "description": "Returns the results of splitting the supplied elements textContent using the supplied splitter",
    "lineNumber": 744,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?Array<string>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string",
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "splitter",
        "description": ""
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Array<string>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 204,
    "kind": "function",
    "name": "elemInnerText",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~elemInnerText",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{elemInnerText}",
    "description": "Returns the supplied elements innerText",
    "lineNumber": 757,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?string}"
      }
    ],
    "params": [
      {
        "nullable": true,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "trim",
        "description": "Should the innerText be trimmed"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 205,
    "kind": "function",
    "name": "elemInnerTextMatchesRegex",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~elemInnerTextMatchesRegex",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{elemInnerTextMatchesRegex}",
    "description": "Returns T/F if the supplied elements innerText matches the supplied regex",
    "lineNumber": 770,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "regex",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 206,
    "kind": "function",
    "name": "innerTextOfSelected",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~innerTextOfSelected",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{innerTextOfSelected}",
    "description": "Returns the inner text of the element the supplied selectors matches",
    "lineNumber": 781,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the selector to be use"
      },
      {
        "nullable": null,
        "types": [
          "SomeElement",
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "cntx",
        "description": "element to use rather than document for the querySelector call"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 207,
    "kind": "function",
    "name": "elemInnerTextEqs",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~elemInnerTextEqs",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{elemInnerTextEqs}",
    "description": "Returns T/F if the supplied elements innerText equals the supplied string case sensitive",
    "lineNumber": 792,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "shouldEqual",
        "description": "The string the elements inner text should equal"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " false",
        "defaultRaw": false,
        "name": "trim",
        "description": "Should the innerText be trimmed before comparison"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 208,
    "kind": "function",
    "name": "elemInnerTextEqsInsensitive",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~elemInnerTextEqsInsensitive",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{elemInnerTextEqsInsensitive}",
    "description": "Returns T/F if the supplied elements innerText equals the supplied string case in-sensitive",
    "lineNumber": 805,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "shouldEqual",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " false",
        "defaultRaw": false,
        "name": "trim",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 209,
    "kind": "function",
    "name": "elemInnerTextEqsOneOf",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~elemInnerTextEqsOneOf",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{elemInnerTextEqsOneOf}",
    "description": "Returns T/F if the supplied elements innerText equals one of the supplied string case sensitive",
    "lineNumber": 817,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "shouldEquals",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 210,
    "kind": "function",
    "name": "elemTextContent",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~elemTextContent",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{elemTextContent}",
    "description": "Returns the textContent of the supplied element",
    "lineNumber": 831,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 211,
    "kind": "function",
    "name": "documentScrollPosition",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~documentScrollPosition",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{documentScrollPosition}",
    "description": "Returns the scrollTop and scrollLeft values of the supplied document if one\nwas supplied other wise the values are from the current document",
    "lineNumber": 842,
    "params": [
      {
        "nullable": true,
        "types": [
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "doc",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{scrollTop: number, scrollLeft: number}"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 212,
    "kind": "function",
    "name": "getElementPositionWidthHeight",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~getElementPositionWidthHeight",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{getElementPositionWidthHeight}",
    "description": "Helper function to get the actual x and y position,\npage x and y position (scroll) and the height, width of a given element",
    "lineNumber": 860,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "doc",
        "description": ""
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "{y: number, pageY: number, x: number, pageX: number, w: number, h: number}"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 213,
    "kind": "function",
    "name": "getElementClientPagePosition",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~getElementClientPagePosition",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{getElementClientPagePosition}",
    "description": "Get the position of the passed DOM element",
    "lineNumber": 880,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{clientY: number, clientX: number, pageY: number, pageX: number}"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 214,
    "kind": "function",
    "name": "getElementClientPageCenter",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~getElementClientPageCenter",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{getElementClientPageCenter}",
    "description": "Get the center of the passed DOM element",
    "lineNumber": 901,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{floor: boolean}"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "{clientY: number, clientX: number, pageY: number, pageX: number}"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 215,
    "kind": "function",
    "name": "anySelectorExists",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~anySelectorExists",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{anySelectorExists}",
    "description": "Determines if the element the supplied selector selects exists.\n\nIf one of the supplied selectors matches an existing element the idx property\nof the returned object is set to the index of the selector in the array and\nthe success property is set to true.\n\nOtherwise idx = -1 and success = false.",
    "lineNumber": 932,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "selectors",
        "description": "The query selectors to use for testing if\nthe elements it selects exist"
      },
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": true,
        "name": "cntx",
        "description": "Optional element to use rather\nthan the current JS context's document object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{idx: number, success: boolean}"
      ],
      "spread": false,
      "description": "The results of the selectors\nexistence check"
    }
  },
  {
    "__docId__": 216,
    "kind": "function",
    "name": "elementsNameEquals",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~elementsNameEquals",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{elementsNameEquals}",
    "description": "Returns T/F indicating if the elements name (localName) is equal to the supplied name",
    "lineNumber": 948,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to check if its name equals the supplied name"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The name of the desired element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 217,
    "kind": "function",
    "name": "nodesNameEquals",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~nodesNameEquals",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{nodesNameEquals}",
    "description": "Returns T/F indicating if the nodes name (nodeName) is equal to the supplied name",
    "lineNumber": 959,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "The node to check if its name equals the supplied name"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The name of the desired Node"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 218,
    "kind": "typedef",
    "name": "XPathOnOfOpts",
    "memberof": "lib/dom.js",
    "static": true,
    "longname": "lib/dom.js~XPathOnOfOpts",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "queries",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "xpg",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "context",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "XPathOnOfOpts"
    }
  },
  {
    "__docId__": 219,
    "kind": "function",
    "name": "xpathOneOf",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~xpathOneOf",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{xpathOneOf}",
    "description": "Returns the results of evaluating one of the supplied xpath queries if\none of the queries yields results otherwise null/undefined",
    "lineNumber": 977,
    "params": [
      {
        "nullable": null,
        "types": [
          "XPathOnOfOpts"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Array<SomeElement>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 220,
    "kind": "function",
    "name": "qsOneOf",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~qsOneOf",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{qsOneOf}",
    "description": "Returns the results of querySelector using one of the supplied selectors\none if one of the selectors yields results otherwise null/undefined",
    "lineNumber": 992,
    "params": [
      {
        "nullable": null,
        "types": [
          "{selectors: Array<string>, context: *}"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 221,
    "kind": "function",
    "name": "qsaOneOf",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~qsaOneOf",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{qsaOneOf}",
    "description": "Returns the results of querySelectorAll using one of the supplied\nselectors if one of the selectors yields results otherwise null/undefined",
    "lineNumber": 1009,
    "params": [
      {
        "nullable": null,
        "types": [
          "{selectors: Array<string>, context: *}"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional document object to use rather than\ndefaulting to the current execution contexts document object"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "NodeList<SomeElement>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 222,
    "kind": "function",
    "name": "selectedNextElementSibling",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~selectedNextElementSibling",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{selectedNextElementSibling}",
    "description": "Returns the next element sibling of the supplied selector IFF\nthe selector returns a results and the next element sibling exists\notherwise null/undefined",
    "lineNumber": 1028,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "The selector for the element who's next sibling is\nto be returned"
      },
      {
        "nullable": null,
        "types": [
          "SomeElement",
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "context",
        "description": "element to use rather than document for the querySelector call"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 223,
    "kind": "function",
    "name": "docBaseURIEndsWith",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~docBaseURIEndsWith",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{docBaseURIEndsWith}",
    "description": "Returns T/F indicating if the documents baseURI ends with the supplied string",
    "lineNumber": 1043,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "shouldEndWith",
        "description": "What the documents base URI should end with"
      },
      {
        "nullable": null,
        "types": [
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "cntxDoc",
        "description": "Optional document object to use rather than\ndefaulting to the current execution contexts document object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 224,
    "kind": "function",
    "name": "docBaseURIEquals",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~docBaseURIEquals",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{docBaseURIEquals}",
    "description": "Returns T/F indicating if the documents baseURI equals the supplied string",
    "lineNumber": 1055,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "shouldEqual",
        "description": "What the documents base URI should be equal to"
      },
      {
        "nullable": null,
        "types": [
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "cntxDoc",
        "description": "Optional document object to use rather than\ndefaulting to the current execution contexts document object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 225,
    "kind": "function",
    "name": "repeatedXpathQueryIterator",
    "memberof": "lib/dom.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~repeatedXpathQueryIterator",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{repeatedXpathQueryIterator}",
    "description": "Repeatably performs the supplied xpath query yielding the results\nof the each query. If an empty result set is encountered and generateMoreElements\nfunction was supplied it is called and the query repeated. If the second query\ntry yields another empty set the iterator ends",
    "lineNumber": 1070,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "query",
        "description": "The xpath query to be repeated until it returns no more elements"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "cntx",
        "description": "Optional element to execute the xpath query from (defaults to document)"
      },
      {
        "nullable": null,
        "types": [
          "function(): void"
        ],
        "spread": false,
        "optional": true,
        "name": "generateMoreElements",
        "description": "Optional function used to generate more elements that may match the supplied xpath"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IterableIterator<SomeElement>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 226,
    "kind": "function",
    "name": "repeatedXpathQueryIteratorAsync",
    "memberof": "lib/dom.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "lib/dom.js~repeatedXpathQueryIteratorAsync",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{repeatedXpathQueryIteratorAsync}",
    "description": "Repeatably performs the supplied xpath query yielding the results\nof the each query. If an empty result set is encountered and generateMoreElements\nfunction was supplied it is called and the query repeated. If the second query\ntry yields another empty set the iterator ends",
    "lineNumber": 1095,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "query",
        "description": "The xpath query to be repeated until it returns no more elements"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "cntx",
        "description": "Optional element to execute the xpath query from (defaults to document)"
      },
      {
        "nullable": null,
        "types": [
          "function(): *"
        ],
        "spread": false,
        "optional": true,
        "name": "generateMoreElements",
        "description": "Optional function used to generate more elements that may match the supplied xpath"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterableIterator<SomeElement>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 227,
    "kind": "function",
    "name": "elemDataValue",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~elemDataValue",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{elemDataValue}",
    "description": "Returns the value of the elements data attribute if it exists\nIf the element is null/undefined or does not have data attributes null is returned.",
    "lineNumber": 1125,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "SVGElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element that should have the data attribute"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "dataKey",
        "description": "The name of the data value to be retrieved"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 228,
    "kind": "function",
    "name": "elemDataValueEqs",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~elemDataValueEqs",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{elemDataValueEqs}",
    "description": "Returns T/F indicating if the element has data attribute equal to the supplied value",
    "lineNumber": 1138,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "SVGElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element that should have the data attribute"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dataKey",
        "description": "The name of the data value to be retrieved"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dataValue",
        "description": "The expected value of the elements data attribute"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 229,
    "kind": "function",
    "name": "elemHasChildren",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~elemHasChildren",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{elemHasChildren}",
    "description": "Returns T/F indicating if the supplied element has children.\nIf the supplied element is null/undefined false is returned.",
    "lineNumber": 1149,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element?"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be checked for children"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 230,
    "kind": "function",
    "name": "childElementIterator",
    "memberof": "lib/dom.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~childElementIterator",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{childElementIterator}",
    "description": "Returns an iterator over the supplied parent element's child elements that\nends once the current child has no next element sibling.\n\nIf the parent element is null/undefined then the returned iterator yields nothing.",
    "lineNumber": 1165,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement?"
        ],
        "spread": false,
        "optional": false,
        "name": "parentElement",
        "description": "The parent element who's child elements will be iterated over"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IterableIterator<SomeElement?>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 231,
    "kind": "function",
    "name": "childNodeIterator",
    "memberof": "lib/dom.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~childNodeIterator",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{childNodeIterator}",
    "description": "Returns an iterator over the supplied parent element's child nodes that\nends once the current child has no next sibling.\n\nIf the parent element is null/undefined then the returned iterator yields nothing.",
    "lineNumber": 1182,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement?"
        ],
        "spread": false,
        "optional": false,
        "name": "parentElement",
        "description": "The parent element who's child nodes will be iterated over"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IterableIterator<Node?>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 232,
    "kind": "function",
    "name": "findDirectChildElement",
    "memberof": "lib/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/dom.js~findDirectChildElement",
    "access": "public",
    "export": true,
    "importPath": "lib/dom.js",
    "importStyle": "{findDirectChildElement}",
    "description": "Applies the supplied `predicate` to every child element of the supplied\nparent element and returns the element that the `predicate` returns true for\notherwise returns null.\n\nIf the parent element is null then null is returned.",
    "lineNumber": 1201,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "parentElement",
        "description": "The parent element who's child element will be searched"
      },
      {
        "nullable": null,
        "types": [
          "function(elem: SomeElement): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "predicate",
        "description": "The predicate function used to select a child"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "SomeElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 233,
    "kind": "typedef",
    "name": "SomeElement",
    "memberof": "lib/dom.js",
    "static": true,
    "longname": "lib/dom.js~SomeElement",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "HTMLAnchorElement",
        "HTMLElement",
        "HTMLAppletElement",
        "HTMLAreaElement",
        "HTMLAudioElement",
        "HTMLBaseElement",
        "HTMLBaseFontElement",
        "HTMLQuoteElement",
        "HTMLBodyElement",
        "HTMLBRElement",
        "HTMLButtonElement",
        "HTMLCanvasElement",
        "HTMLTableCaptionElement",
        "HTMLTableColElement",
        "HTMLDataElement",
        "HTMLDataListElement",
        "HTMLModElement",
        "HTMLDetailsElement",
        "HTMLDialogElement",
        "HTMLDirectoryElement",
        "HTMLDivElement",
        "HTMLDListElement",
        "HTMLEmbedElement",
        "HTMLFieldSetElement",
        "HTMLFontElement",
        "HTMLFormElement",
        "HTMLFrameElement",
        "HTMLFrameSetElement",
        "HTMLHeadingElement",
        "HTMLHeadElement",
        "HTMLHRElement",
        "HTMLHtmlElement",
        "HTMLIFrameElement",
        "HTMLImageElement",
        "HTMLInputElement",
        "HTMLLabelElement",
        "HTMLLegendElement",
        "HTMLLIElement",
        "HTMLLinkElement",
        "HTMLMapElement",
        "HTMLMarqueeElement",
        "HTMLMenuElement",
        "HTMLMetaElement",
        "HTMLMeterElement",
        "HTMLObjectElement",
        "HTMLOListElement",
        "HTMLOptGroupElement",
        "HTMLOptionElement",
        "HTMLOutputElement",
        "HTMLParagraphElement",
        "HTMLParamElement",
        "HTMLPictureElement",
        "HTMLPreElement",
        "HTMLProgressElement",
        "HTMLScriptElement",
        "HTMLSelectElement",
        "HTMLSlotElement",
        "HTMLSourceElement",
        "HTMLSpanElement",
        "HTMLStyleElement",
        "HTMLTableElement",
        "HTMLTableSectionElement",
        "HTMLTableDataCellElement",
        "HTMLTemplateElement",
        "HTMLTextAreaElement",
        "HTMLTableHeaderCellElement",
        "HTMLTimeElement",
        "HTMLTitleElement",
        "HTMLTableRowElement",
        "HTMLTrackElement",
        "HTMLUListElement",
        "HTMLVideoElement",
        "Element",
        "Node",
        "SVGAElement",
        "SVGCircleElement",
        "SVGClipPathElement",
        "SVGDefsElement",
        "SVGDescElement",
        "SVGEllipseElement",
        "SVGFEBlendElement",
        "SVGFEColorMatrixElement",
        "SVGFEComponentTransferElement",
        "SVGFECompositeElement",
        "SVGFEConvolveMatrixElement",
        "SVGFEDiffuseLightingElement",
        "SVGFEDisplacementMapElement",
        "SVGFEDistantLightElement",
        "SVGFEFloodElement",
        "SVGFEFuncAElement",
        "SVGFEFuncBElement",
        "SVGFEFuncGElement",
        "SVGFEFuncRElement",
        "SVGFEGaussianBlurElement",
        "SVGFEImageElement",
        "SVGFEMergeElement",
        "SVGFEMergeNodeElement",
        "SVGFEMorphologyElement",
        "SVGFEOffsetElement",
        "SVGFEPointLightElement",
        "SVGFESpecularLightingElement",
        "SVGFESpotLightElement",
        "SVGFETileElement",
        "SVGFETurbulenceElement",
        "SVGFilterElement",
        "SVGForeignObjectElement",
        "SVGGElement",
        "SVGImageElement",
        "SVGLineElement",
        "SVGLinearGradientElement",
        "SVGMarkerElement",
        "SVGMaskElement",
        "SVGMetadataElement",
        "SVGPathElement",
        "SVGPatternElement",
        "SVGPolygonElement",
        "SVGPolylineElement",
        "SVGRadialGradientElement",
        "SVGRectElement",
        "SVGScriptElement",
        "SVGStopElement",
        "SVGStyleElement",
        "SVGSVGElement",
        "SVGSwitchElement",
        "SVGSymbolElement",
        "SVGTextElement",
        "SVGTextPathElement",
        "SVGTitleElement",
        "SVGTSpanElement",
        "SVGUseElement",
        "SVGViewElement"
      ],
      "optional": false,
      "name": "SomeElement"
    }
  },
  {
    "__docId__": 234,
    "kind": "file",
    "name": "lib/events.js",
    "content": "import { getElementClientPageCenter } from './dom';\nimport { promiseResolveReject } from './general';\n\n/**\n * @param {string} type\n * @param {number} clickCount\n * @return {number}\n * @private\n */\nfunction __generateDetailPropForMouseEvent(type, clickCount) {\n  switch (type) {\n    case 'click':\n    case 'dblclick':\n      return clickCount;\n    case 'mousedown':\n    case 'mouseup':\n      return clickCount + 1;\n    default:\n      return 0;\n  }\n}\n\n/**\n * @param {string} type\n * @param {boolean} [buttons]\n * @return {number}\n * @private\n */\nfunction __getWhichButtonForEvent(type, buttons) {\n  switch (type) {\n    case 'click':\n    case 'dblclick':\n    case 'mousedown':\n    case 'mouseup':\n      return buttons ? 1 : 0;\n    default:\n      return 0;\n  }\n}\n\n/**\n * @typedef {Object} CreateMouseEventOptions\n * @see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/MouseEvent\n * @property {string} type - The type of the mouse event to be created\n * @property {Element} elem - The element the mouse event will be fired on used to calculate mouse position\n * @property {Object} [position] - An object specifying the events position\n * @property {Object} [eventOpts] - Additional options to be used\n * @property {Window} [view] - The view (window)\n * @property {number} [clickCount] - How many clicks have been done before this event\n */\n\n/**\n * Creates and returns a new mouse event configured using the supplied options\n * @param {CreateMouseEventOptions} config\n * @return {MouseEvent}\n */\nexport function createMouseEvent(config) {\n  let eventPosition;\n  if (config.elem && config.position == null) {\n    eventPosition = getElementClientPageCenter(config.elem);\n    // my internet skills did not turn up anything on how to fake\n    // event cords in screen space.... so we just put something here\n    eventPosition.screenX = eventPosition.clientX + eventPosition.pageX;\n    eventPosition.screenY = eventPosition.clientY + eventPosition.pageY;\n  } else {\n    eventPosition = config.position;\n  }\n  const defaultOpts = {\n    button: __getWhichButtonForEvent(config.type),\n    buttons: __getWhichButtonForEvent(config.type, true),\n    bubbles: true,\n    cancelable: true,\n    composed: true,\n    ctrlKey: false,\n    shiftKey: false,\n    altKey: false,\n    metaKey: false,\n    view: config.view || window,\n    detail: __generateDetailPropForMouseEvent(\n      config.type,\n      config.clickCount || 0\n    ),\n  };\n  const eventOpts = Object.assign(defaultOpts, eventPosition, config.eventOpts);\n  return config.view != null\n    ? new config.view.MouseEvent(config.type, eventOpts)\n    : new MouseEvent(config.type, eventOpts);\n}\n\n/**\n * @typedef {Object} FireMouseEventsOnOptions\n * @property {Element} elem - The element the mouse event will be fired on used to calculate mouse position\n * @property {Array<string>} eventNames - The event types to be fired\n * @property {Window} [view] - The view (window)\n * @property {Object} [position] - An object specifying the events position\n * @property {Object} [eventOpts] - Additional options to be used\n * @property {number} [clickCount] - How many clicks have been done before this event\n */\n\n/**\n * Creates mouse events and fires them in order configured using the supplied options\n * @param {FireMouseEventsOnOptions} config\n */\nexport function fireMouseEventsOnElement(config) {\n  const { elem, eventNames, view, position, eventOpts, clickCount } = config;\n  if (elem != null) {\n    const numEvents = eventNames.length;\n    for (var eventIdx = 0; eventIdx < numEvents; ++eventIdx) {\n      elem.dispatchEvent(\n        createMouseEvent({\n          type: eventNames[eventIdx],\n          elem,\n          view,\n          position,\n          eventOpts,\n          clickCount,\n        })\n      );\n    }\n  }\n}\n\n/**\n * Fires the supplied event on the supplied element\n * @param {Element} elem - The element to have an event fired on\n * @param {Event} event - The event to be fired\n */\nexport function fireEventOn(elem, event) {\n  if (elem != null) {\n    elem.dispatchEvent(event);\n  }\n}\n\n/**\n * Returns a promise that resolves to true once the supplied event is fired from the supplied\n * event target. If `max` is supplied and the event is not fired by `max` the promise resolves to false.\n * @param {EventTarget} eventTarget - The event target that should fire `event`\n * @param {string} event - The event that should be fired from `eventTarget`\n * @param {number} [max] - Optional amount of time in milliseconds that defines\n * a maximum time to be waited for `event`\n * @return {Promise<boolean>}\n */\nexport function waitForEventTargetToFireEvent(eventTarget, event, max) {\n  const promResolveReject = promiseResolveReject();\n  const listener = fromSafety => {\n    eventTarget.removeEventListener(event, listener);\n    promResolveReject.resolve(!fromSafety);\n  };\n  eventTarget.addEventListener(event, listener);\n  if (max) {\n    setTimeout(listener, max, true);\n  }\n  return promResolveReject.promise;\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/lib/events.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 235,
    "kind": "function",
    "name": "__generateDetailPropForMouseEvent",
    "memberof": "lib/events.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/events.js~__generateDetailPropForMouseEvent",
    "access": "private",
    "export": false,
    "importPath": "lib/events.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "clickCount",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 236,
    "kind": "function",
    "name": "__getWhichButtonForEvent",
    "memberof": "lib/events.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/events.js~__getWhichButtonForEvent",
    "access": "private",
    "export": false,
    "importPath": "lib/events.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "buttons",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 237,
    "kind": "typedef",
    "name": "CreateMouseEventOptions",
    "memberof": "lib/events.js",
    "static": true,
    "longname": "lib/events.js~CreateMouseEventOptions",
    "access": "public",
    "description": "",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/MouseEvent"
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The type of the mouse event to be created"
      },
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element the mouse event will be fired on used to calculate mouse position"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "position",
        "description": "An object specifying the events position"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "eventOpts",
        "description": "Additional options to be used"
      },
      {
        "nullable": null,
        "types": [
          "Window"
        ],
        "spread": false,
        "optional": true,
        "name": "view",
        "description": "The view (window)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "clickCount",
        "description": "How many clicks have been done before this event"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "CreateMouseEventOptions"
    }
  },
  {
    "__docId__": 238,
    "kind": "function",
    "name": "createMouseEvent",
    "memberof": "lib/events.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/events.js~createMouseEvent",
    "access": "public",
    "export": true,
    "importPath": "lib/events.js",
    "importStyle": "{createMouseEvent}",
    "description": "Creates and returns a new mouse event configured using the supplied options",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "CreateMouseEventOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MouseEvent"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 239,
    "kind": "typedef",
    "name": "FireMouseEventsOnOptions",
    "memberof": "lib/events.js",
    "static": true,
    "longname": "lib/events.js~FireMouseEventsOnOptions",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element the mouse event will be fired on used to calculate mouse position"
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "eventNames",
        "description": "The event types to be fired"
      },
      {
        "nullable": null,
        "types": [
          "Window"
        ],
        "spread": false,
        "optional": true,
        "name": "view",
        "description": "The view (window)"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "position",
        "description": "An object specifying the events position"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "eventOpts",
        "description": "Additional options to be used"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "clickCount",
        "description": "How many clicks have been done before this event"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "FireMouseEventsOnOptions"
    }
  },
  {
    "__docId__": 240,
    "kind": "function",
    "name": "fireMouseEventsOnElement",
    "memberof": "lib/events.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/events.js~fireMouseEventsOnElement",
    "access": "public",
    "export": true,
    "importPath": "lib/events.js",
    "importStyle": "{fireMouseEventsOnElement}",
    "description": "Creates mouse events and fires them in order configured using the supplied options",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "FireMouseEventsOnOptions"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 241,
    "kind": "function",
    "name": "fireEventOn",
    "memberof": "lib/events.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/events.js~fireEventOn",
    "access": "public",
    "export": true,
    "importPath": "lib/events.js",
    "importStyle": "{fireEventOn}",
    "description": "Fires the supplied event on the supplied element",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to have an event fired on"
      },
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The event to be fired"
      }
    ],
    "return": null
  },
  {
    "__docId__": 242,
    "kind": "function",
    "name": "waitForEventTargetToFireEvent",
    "memberof": "lib/events.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/events.js~waitForEventTargetToFireEvent",
    "access": "public",
    "export": true,
    "importPath": "lib/events.js",
    "importStyle": "{waitForEventTargetToFireEvent}",
    "description": "Returns a promise that resolves to true once the supplied event is fired from the supplied\nevent target. If `max` is supplied and the event is not fired by `max` the promise resolves to false.",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "EventTarget"
        ],
        "spread": false,
        "optional": false,
        "name": "eventTarget",
        "description": "The event target that should fire `event`"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The event that should be fired from `eventTarget`"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "max",
        "description": "Optional amount of time in milliseconds that defines\na maximum time to be waited for `event`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 243,
    "kind": "file",
    "name": "lib/general.js",
    "content": "/**\n * Retrieves the property of an object, or item in array at index, based\n * on the supplied path.\n * @example\n *   const obj = { a: { b: { c: [1, 2, 3] } } }\n *   const two = getViaPath(obj, 'a', 'b', 'c', 1); // two == 2\n * @param {*} obj - An object\n * @param {*} pathItems\n * @return {*}\n */\nexport function getViaPath(obj, ...pathItems) {\n  if (obj == null || pathItems.length === 0) return null;\n  let cur = obj[pathItems[0]];\n  for (let i = 1; i < pathItems.length; i++) {\n    cur = cur[pathItems[i]];\n    if (cur == null) return null;\n  }\n  return cur;\n}\n\n/**\n * Initiates an pywb/webrecorder auto-fetch of content\n */\nexport function autoFetchFromDoc() {\n  if (window.$WBAutoFetchWorker$) {\n    window.$WBAutoFetchWorker$.extractFromLocalDoc();\n  }\n}\n\n/**\n * Sends the supplied array of URLs to the backing pywb/webrecorder auto-fetch worker if it exists\n * @param {Array<string>} urls\n */\nexport function sendAutoFetchWorkerURLs(urls) {\n  if (window.$WBAutoFetchWorker$) {\n    window.$WBAutoFetchWorker$.justFetch(urls);\n  }\n}\n\n/**\n * This function is a no op\n */\nexport function noop() {}\n\n/**\n * Automatically binds the non-inherited functions of the supplied\n * class to itself.\n * @param clazz\n */\nexport function autobind(clazz) {\n  const clazzProps = Object.getOwnPropertyNames(clazz.constructor.prototype);\n  let prop;\n  let propValue;\n  for (var i = 0; i < clazzProps.length; ++i) {\n    prop = clazzProps[i];\n    propValue = clazz[prop];\n    if (prop !== 'constructor' && typeof propValue === 'function') {\n      clazz[prop] = propValue.bind(clazz);\n    }\n  }\n}\n\n/**\n * Returns T/F if the supplied object has all of the supplied properties.\n * The existence check is `obj[prop] != null`\n * @param {Object} obj - The object to be tested\n * @param {...string} props - The property names\n * @return {boolean}\n */\nexport function objectHasProps(obj, ...props) {\n  if (obj == null) return false;\n  for (var i = 0; i < props.length; ++i) {\n    if (obj[props[i]] == null) return false;\n  }\n  return true;\n}\n\n/**\n * Returns T/F if an global property (on window) exists and has\n * all properties. The existence check is `obj[prop] != null`\n * @param {string} global - The name of the global\n * @param {...string} props - The property names\n * @return {boolean}\n */\nexport function globalWithPropsExist(global, ...props) {\n  const obj = window[global];\n  if (obj == null) return false;\n  for (var i = 0; i < props.length; ++i) {\n    if (obj[props[i]] == null) return false;\n  }\n  return true;\n}\n\n/**\n * Returns a new object with the properties of the object\n * on the new object\n * @param {?Object} object - The object to extract properties from\n * @param {...string} props - The property names to be extracted\n * @return {?Object} - The new object if the original object was not null\n */\nexport function extractProps(object, ...props) {\n  if (object == null) return null;\n  const extracted = {};\n  for (var i = 0; i < props.length; ++i) {\n    extracted[props[i]] = object[props[i]];\n  }\n  return extracted;\n}\n\n/**\n * Composes multiple functions from right to left into a single function.\n * The rightmost function can take multiple arguments with the remaining\n * functions taking only a single argument, the return value of the previous\n * invocation.\n * @param {...function(...args: *): *} funcs - The functions to compose.\n * @return {function(...args: *): *} - A function obtained by composing the functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nexport function compose(...funcs) {\n  if (funcs.length === 0) {\n    return arg => arg;\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce((a, b) => (...args) => a(b(...args)));\n}\n\n/**\n * Composes multiple async or Promise returning functions from right to\n * left into a single function. The rightmost function can take multiple arguments\n * with the remaining functions taking only a single argument, the return value\n * of the previous invocation.\n * @param {...function(...args: *): Promise<*>} funcs - The functions to compose.\n * @return {function(...args: *): Promise<*>} - A function obtained by composing the functions\n * from right to left. For example, composeAsync(f, g, h) is identical to doing\n * (...args) => h(...args).then(result => g(result).then(result => f(result)).\n */\nexport function composeAsync(...funcs) {\n  if (funcs.length === 0) {\n    return async function() {\n      return arguments[0];\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce((a, b) => (...args) => b(...args).then(a));\n}\n\n/**\n * Composes multiple Iterator returning functions from right to\n * left into a single function. The rightmost function can take multiple arguments\n * with the remaining functions taking only a single argument, the iterator returned\n * by the previous invocation. The composition of iterators can thought of\n * as chaining multiple iterators together, that is to say feeding the yielded results\n * of each iterator from right to left. This can be useful for chaining cascading\n * ordered actions.\n * @example\n *   function* iter1(iter) {\n *     console.log('start iter1');\n *     for (const value of iter) {\n *       yield `iter1 got \"${value}\" from the previous iter`;\n *     }\n *     yield 'end iter1';\n *   }\n *\n *   function* iter2(iter) {\n *     console.log('start iter2');\n *     for (const value of iter) {\n *       yield `iter2 got \"${value}\" from the previous iter`;\n *     }\n *     yield 'end iter2';\n *   }\n *\n *   function* iter3(...args) {\n *     console.log('start iter3');\n *     let i = args.length;\n *     while (i--) {\n *       yield args[i];\n *     }\n *    yield 'end iter3';\n *  }\n *\n *  const finalIter = composeIterators(iter1, iter2, iter3)(1, 2, 3, 4, 5);\n *\n *  for (const it of finalIter) {\n *    console.log(it);\n * }\n *\n *  // The output is as follows\n *  // logs \"start iter\" from iter1\n *  // logs \"start iter2\" from iter2\n *  // logs \"start iter3\" from iter3\n *  // logs 'iter1 got \"iter2 got \"5\" from the previous iter\" from the previous iter' from the for of finalIter\n *  // logs 'iter1 got \"iter2 got \"4\" from the previous iter\" from the previous iter' from the for of finalIter\n *  // logs 'iter1 got \"iter2 got \"3\" from the previous iter\" from the previous iter' from the for of finalIter\n *  // logs 'iter1 got \"iter2 got \"2\" from the previous iter\" from the previous iter' from the for of finalIter\n *  // logs 'iter1 got \"iter2 got \"1\" from the previous iter\" from the previous iter' from the for of finalIter\n *  // logs 'iter1 got \"iter2 got \"end iter3\" from the previous iter\" from the previous iter' from the for of finalIter\n *  // logs 'iter1 got \"end iter2\" from the previous iter' from the for of finalIter\n *  // logs 'end iter1' from the for of finalIter\n *\n * @param {...function(...args:*): Iterator<*>} funcs - The Iterator returning functions to be composed (chained)\n * @return {function(...args:*): Iterator<*>} - A function obtained by composing the functions\n * from right to left. See the documentations example for details\n */\nexport function composeIterators(...funcs) {\n  if (funcs.length === 0) {\n    return function*() {\n      yield arguments[0];\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(\n    (a, b) =>\n      function*(...args) {\n        yield* a(b(...args));\n      }\n  );\n}\n\n/**\n * Composes multiple AsyncIterator returning functions from right to\n * left into a single function. The rightmost function can take multiple arguments\n * with the remaining functions taking only a single argument, the iterator returned\n * by the previous invocation. The composition of AsyncIterator can thought of\n * as chaining multiple AsyncIterator together, that is to say feeding the yielded results\n * of each iterator from right to left. This can be useful for chaining cascading asynchronous\n * ordered actions.\n * @example\n *   async function* iter1(iter) {\n *     console.log('start iter1');\n *     for await (const value of iter) {\n *       yield `iter1 got \"${value}\" from the previous iter`;\n *     }\n *     yield 'end iter1';\n *   }\n *\n *   async function* iter2(iter) {\n *     console.log('start iter2');\n *     for await (const value of iter) {\n *       yield `iter2 got \"${value}\" from the previous iter`;\n *     }\n *     yield 'end iter2';\n *   }\n *\n *   async function* iter3(...args) {\n *     console.log('start iter3');\n *     let i = args.length;\n *     while (i--) {\n *       yield args[i];\n *     }\n *    yield 'end iter3';\n *  }\n *\n *  const finalAIter = composeAsyncIterators(iter1, iter2, iter3)(1, 2, 3, 4, 5);\n *\n *  (async () => {\n *    for await (const it of finalAIter) {\n *      console.log(it);\n *    }\n *  })();\n *\n *  // The output is as follows\n *  // logs \"start iter\" from iter1\n *  // logs \"start iter2\" from iter2\n *  // logs \"start iter3\" from iter3\n *  // logs 'iter1 got \"iter2 got \"5\" from the previous iter\" from the previous iter' from the for await of finalAiter\n *  // logs 'iter1 got \"iter2 got \"4\" from the previous iter\" from the previous iter' from the for await of finalAiter\n *  // logs 'iter1 got \"iter2 got \"3\" from the previous iter\" from the previous iter' from the for await of finalAiter\n *  // logs 'iter1 got \"iter2 got \"2\" from the previous iter\" from the previous iter' from the for await of finalAiter\n *  // logs 'iter1 got \"iter2 got \"1\" from the previous iter\" from the previous iter' from the for await of finalAiter\n *  // logs 'iter1 got \"iter2 got \"end iter3\" from the previous iter\" from the previous iter' from the for await of finalAiter\n *  // logs 'iter1 got \"end iter2\" from the previous iter' from the for await of finalAiter\n *  // logs 'end iter1' from the for await of finalAiter\n *\n * @param {...function(...args:*): AsyncIterator<*>} funcs - The AsyncIterator returning functions to be composed (chained)\n * @return {function(...args:*): AsyncIterator<*>} - A function obtained by composing the functions\n * from right to left. See the documentations example for details\n */\nexport function composeAsyncIterators(...funcs) {\n  if (funcs.length === 0) {\n    return async function*() {\n      yield arguments[0];\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(\n    (a, b) =>\n      async function*(...args) {\n        yield* a(b(...args));\n      }\n  );\n}\n\n/**\n * Creates a Promise that is resolvable externally returning an object\n * that exposes the promise itself and the resolve and reject functions\n * passed as arguments to the executor function\n * @return {{resolve: function, reject: function, promise: Promise<*>}}\n */\nexport function promiseResolveReject() {\n  const promResolveReject = { promise: null, resolve: null, reject: null };\n  promResolveReject.promise = new Promise((resolve, reject) => {\n    promResolveReject.resolve = resolve;\n    promResolveReject.reject = reject;\n  });\n  return promResolveReject;\n}\n\n/**\n * Returns T/F indicating if the supplied object is an instance of some class.\n * If the object to be tested is falsy false is returned otherwise the results\n * of the instanceof check.\n * @param {Object} obj - The object to be tested\n * @param {Object} shouldBeInstanceOfThis - The class the obj should be an instance of\n * @return {boolean}\n */\nexport function objectInstanceOf(obj, shouldBeInstanceOfThis) {\n  if (!obj) return false;\n  return obj instanceof shouldBeInstanceOfThis;\n}\n\n/**\n * Creates and returns a partially applied function with args being applied left to right\n * @param {function} fn - The function to partially apply arguments to\n * @param {*} [a1] - 1st arg\n * @param {*} [a2] - 2nd arg\n * @param {*} [a3] - 3rd arg\n * @param {*} [a4] - 4th arg\n * @param {*} [a5] - 5th arg\n * @param {...*} [aN] - The remaining arguments to be partially applied\n * @return {function(...args: *): *} - Returns the new partially applied function\n */\nexport function partial(fn, a1, a2, a3, a4, a5, ...aN) {\n  if (a1 == null) return fn;\n  if (aN.length) {\n    return (...args) => fn(a1, a2, a3, a4, a5, ...aN, ...args);\n  }\n  if (a5 != null) return (...args) => fn(a1, a2, a3, a4, a5, ...args);\n  if (a4 != null) return (...args) => fn(a1, a2, a3, a4, ...args);\n  if (a3 != null) return (...args) => fn(a1, a2, a3, ...args);\n  if (a2 != null) return (...args) => fn(a1, a2, ...args);\n  return (...args) => fn(a1, ...args);\n}\n\n/**\n * Creates and returns a partially applied function with args being applied right to left\n * @param {function} fn - The function to partially apply arguments to\n * @param {*} [a1] - 1st nth arg\n * @param {*} [a2] - 2nd nth arg\n * @param {*} [a3] - 3rd nth arg\n * @param {*} [a4] - 4th nth arg\n * @param {*} [a5] - 5th nth arg\n * @param {...*} [aN] - The remaining arguments to be partially applied\n * @return {function(...args: *): *} - Returns the new partially applied function\n */\nexport function partialRight(fn, a1, a2, a3, a4, a5, ...aN) {\n  if (a1 == null) return fn;\n  if (aN.length) {\n    return (...args) => fn(...args, a1, a2, a3, a4, a5, ...aN);\n  }\n  if (a5 != null) return (...args) => fn(...args, a1, a2, a3, a4, a5);\n  if (a4 != null) return (...args) => fn(...args, a1, a2, a3, a4);\n  if (a3 != null) return (...args) => fn(...args, a1, a2, a3);\n  if (a2 != null) return (...args) => fn(...args, a1, a2);\n  return (...args) => fn(...args, a1);\n}\n/** @ignore */\nlet __BytesToHex__;\n\n/**\n * Creates and returns a valid uuid v4\n * @return {string}\n */\nexport function uuidv4() {\n  if (__BytesToHex__ == null) {\n    __BytesToHex__ = new Array(256);\n    for (let i = 0; i < 256; ++i) {\n      __BytesToHex__[i] = (i + 0x100).toString(16).substr(1);\n    }\n  }\n  const randomBytes = crypto.getRandomValues(new Uint8Array(16));\n  randomBytes[6] = (randomBytes[6] & 0x0f) | 0x40;\n  randomBytes[8] = (randomBytes[8] & 0x3f) | 0x80;\n  return [\n    __BytesToHex__[randomBytes[0]],\n    __BytesToHex__[randomBytes[1]],\n    __BytesToHex__[randomBytes[2]],\n    __BytesToHex__[randomBytes[3]],\n    '-',\n    __BytesToHex__[randomBytes[4]],\n    __BytesToHex__[randomBytes[5]],\n    '-',\n    __BytesToHex__[randomBytes[6]],\n    __BytesToHex__[randomBytes[7]],\n    '-',\n    __BytesToHex__[randomBytes[8]],\n    __BytesToHex__[randomBytes[9]],\n    '-',\n    __BytesToHex__[randomBytes[10]],\n    __BytesToHex__[randomBytes[11]],\n    __BytesToHex__[randomBytes[12]],\n    __BytesToHex__[randomBytes[13]],\n    __BytesToHex__[randomBytes[14]],\n    __BytesToHex__[randomBytes[15]],\n  ].join('');\n}\n\n/**\n * Returns T/F indicating if the supplied object is a generator or async generator\n * @param {*} obj\n * @return {boolean}\n */\nexport function isGenerator(obj) {\n  if (!obj) return false;\n  const tag = obj[Symbol.toStringTag];\n  if (tag === 'AsyncGenerator' || tag === 'Generator') return true;\n  if (isFunction(obj.next) && isFunction(obj.throw) && isFunction(obj.return)) {\n    return true;\n  }\n  if (!obj.constructor) return false;\n  const ctag = obj.constructor[Symbol.toStringTag];\n  return ctag === 'GeneratorFunction' || ctag === 'AsyncGeneratorFunction';\n}\n\n/**\n * Returns T/F indicating if the supplied object is a Promise or Promise like\n * @param {*} obj\n * @return {boolean}\n */\nexport function isPromise(obj) {\n  if (!obj) return false;\n  return (\n    obj instanceof Promise ||\n    (typeof obj === 'object' &&\n      isFunction(obj.then) &&\n      isFunction(obj.catch)) ||\n    obj[Symbol.toStringTag] === 'Promise'\n  );\n}\n\n/**\n * Returns T/F indicating if the supplied arument is a function\n * @param {*} obj\n * @return {boolean}\n */\nexport function isFunction(obj) {\n  return typeof obj === 'function';\n}\n\n/**\n * Like map for arrays but over async-iterators\n * @param {AsyncIterableIterator<*>} iterator - The iterator\n * to have a mapping function applied over\n * @param {function(arg: *): *} mapper - The mapping function\n * @return {AsyncIterableIterator<*>}\n */\nexport async function* mapAsyncIterator(iterator, mapper) {\n  for await (const item of iterator) {\n    const nextValue = mapper(item);\n    if (isGenerator(nextValue)) {\n      for await (const next of noExceptGeneratorWrap(nextValue)) {\n        yield next;\n      }\n    } else yield nextValue;\n  }\n}\n\n/**\n * Wraps the supplied generator in a try catch and re-yields its values generator.\n * If the wrapped generator throws an exception the wrapping generator ends.\n * @param {AsyncIterableIterator<*>|IterableIterator<*>} generator - The generator to be wrapped\n * @param {boolean} [returnLast] - Should the last value of the supplied generator be returned\n * @return {AsyncIterableIterator<*>}\n */\nexport async function* noExceptGeneratorWrap(generator, returnLast) {\n  try {\n    let next;\n    let nv;\n    while (true) {\n      next = generator.next();\n      if (isPromise(next)) nv = await next;\n      else nv = next;\n      if (nv.done) {\n        if (nv.value) {\n          if (returnLast) return nv.value;\n          else yield nv.value;\n        }\n        break;\n      } else {\n        yield nv.value;\n      }\n    }\n  } catch (e) {}\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/lib/general.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 244,
    "kind": "function",
    "name": "getViaPath",
    "memberof": "lib/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/general.js~getViaPath",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{getViaPath}",
    "description": "Retrieves the property of an object, or item in array at index, based\non the supplied path.",
    "examples": [
      "  const obj = { a: { b: { c: [1, 2, 3] } } }\n  const two = getViaPath(obj, 'a', 'b', 'c', 1); // two == 2"
    ],
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "An object"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pathItems",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 245,
    "kind": "function",
    "name": "autoFetchFromDoc",
    "memberof": "lib/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/general.js~autoFetchFromDoc",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{autoFetchFromDoc}",
    "description": "Initiates an pywb/webrecorder auto-fetch of content",
    "lineNumber": 24,
    "params": [],
    "return": null
  },
  {
    "__docId__": 246,
    "kind": "function",
    "name": "sendAutoFetchWorkerURLs",
    "memberof": "lib/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/general.js~sendAutoFetchWorkerURLs",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{sendAutoFetchWorkerURLs}",
    "description": "Sends the supplied array of URLs to the backing pywb/webrecorder auto-fetch worker if it exists",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "urls",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 247,
    "kind": "function",
    "name": "noop",
    "memberof": "lib/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/general.js~noop",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{noop}",
    "description": "This function is a no op",
    "lineNumber": 43,
    "params": [],
    "return": null
  },
  {
    "__docId__": 248,
    "kind": "function",
    "name": "autobind",
    "memberof": "lib/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/general.js~autobind",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{autobind}",
    "description": "Automatically binds the non-inherited functions of the supplied\nclass to itself.",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "clazz",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 249,
    "kind": "function",
    "name": "objectHasProps",
    "memberof": "lib/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/general.js~objectHasProps",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{objectHasProps}",
    "description": "Returns T/F if the supplied object has all of the supplied properties.\nThe existence check is `obj[prop] != null`",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "The object to be tested"
      },
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "props",
        "description": "The property names"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 250,
    "kind": "function",
    "name": "globalWithPropsExist",
    "memberof": "lib/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/general.js~globalWithPropsExist",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{globalWithPropsExist}",
    "description": "Returns T/F if an global property (on window) exists and has\nall properties. The existence check is `obj[prop] != null`",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "global",
        "description": "The name of the global"
      },
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "props",
        "description": "The property names"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 251,
    "kind": "function",
    "name": "extractProps",
    "memberof": "lib/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/general.js~extractProps",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{extractProps}",
    "description": "Returns a new object with the properties of the object\non the new object",
    "lineNumber": 101,
    "params": [
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "The object to extract properties from"
      },
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "props",
        "description": "The property names to be extracted"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The new object if the original object was not null"
    }
  },
  {
    "__docId__": 252,
    "kind": "function",
    "name": "compose",
    "memberof": "lib/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/general.js~compose",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{compose}",
    "description": "Composes multiple functions from right to left into a single function.\nThe rightmost function can take multiple arguments with the remaining\nfunctions taking only a single argument, the return value of the previous\ninvocation.",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "...function(...args: *): *"
        ],
        "spread": true,
        "optional": false,
        "name": "funcs",
        "description": "The functions to compose."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function(...args: *): *"
      ],
      "spread": false,
      "description": "A function obtained by composing the functions\nfrom right to left. For example, compose(f, g, h) is identical to doing\n(...args) => f(g(h(...args)))."
    }
  },
  {
    "__docId__": 253,
    "kind": "function",
    "name": "composeAsync",
    "memberof": "lib/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/general.js~composeAsync",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{composeAsync}",
    "description": "Composes multiple async or Promise returning functions from right to\nleft into a single function. The rightmost function can take multiple arguments\nwith the remaining functions taking only a single argument, the return value\nof the previous invocation.",
    "lineNumber": 142,
    "params": [
      {
        "nullable": null,
        "types": [
          "...function(...args: *): Promise<*>"
        ],
        "spread": true,
        "optional": false,
        "name": "funcs",
        "description": "The functions to compose."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function(...args: *): Promise<*>"
      ],
      "spread": false,
      "description": "A function obtained by composing the functions\nfrom right to left. For example, composeAsync(f, g, h) is identical to doing\n(...args) => h(...args).then(result => g(result).then(result => f(result))."
    }
  },
  {
    "__docId__": 254,
    "kind": "function",
    "name": "composeIterators",
    "memberof": "lib/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/general.js~composeIterators",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{composeIterators}",
    "description": "Composes multiple Iterator returning functions from right to\nleft into a single function. The rightmost function can take multiple arguments\nwith the remaining functions taking only a single argument, the iterator returned\nby the previous invocation. The composition of iterators can thought of\nas chaining multiple iterators together, that is to say feeding the yielded results\nof each iterator from right to left. This can be useful for chaining cascading\nordered actions.",
    "examples": [
      "  function* iter1(iter) {\n    console.log('start iter1');\n    for (const value of iter) {\n      yield `iter1 got \"${value}\" from the previous iter`;\n    }\n    yield 'end iter1';\n  }\n\n  function* iter2(iter) {\n    console.log('start iter2');\n    for (const value of iter) {\n      yield `iter2 got \"${value}\" from the previous iter`;\n    }\n    yield 'end iter2';\n  }\n\n  function* iter3(...args) {\n    console.log('start iter3');\n    let i = args.length;\n    while (i--) {\n      yield args[i];\n    }\n   yield 'end iter3';\n }\n\n const finalIter = composeIterators(iter1, iter2, iter3)(1, 2, 3, 4, 5);\n\n for (const it of finalIter) {\n   console.log(it);\n}\n\n // The output is as follows\n // logs \"start iter\" from iter1\n // logs \"start iter2\" from iter2\n // logs \"start iter3\" from iter3\n // logs 'iter1 got \"iter2 got \"5\" from the previous iter\" from the previous iter' from the for of finalIter\n // logs 'iter1 got \"iter2 got \"4\" from the previous iter\" from the previous iter' from the for of finalIter\n // logs 'iter1 got \"iter2 got \"3\" from the previous iter\" from the previous iter' from the for of finalIter\n // logs 'iter1 got \"iter2 got \"2\" from the previous iter\" from the previous iter' from the for of finalIter\n // logs 'iter1 got \"iter2 got \"1\" from the previous iter\" from the previous iter' from the for of finalIter\n // logs 'iter1 got \"iter2 got \"end iter3\" from the previous iter\" from the previous iter' from the for of finalIter\n // logs 'iter1 got \"end iter2\" from the previous iter' from the for of finalIter\n // logs 'end iter1' from the for of finalIter"
    ],
    "lineNumber": 213,
    "params": [
      {
        "nullable": null,
        "types": [
          "...function(...args:*): Iterator<*>"
        ],
        "spread": true,
        "optional": false,
        "name": "funcs",
        "description": "The Iterator returning functions to be composed (chained)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function(...args:*): Iterator<*>"
      ],
      "spread": false,
      "description": "A function obtained by composing the functions\nfrom right to left. See the documentations example for details"
    }
  },
  {
    "__docId__": 255,
    "kind": "function",
    "name": "composeAsyncIterators",
    "memberof": "lib/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/general.js~composeAsyncIterators",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{composeAsyncIterators}",
    "description": "Composes multiple AsyncIterator returning functions from right to\nleft into a single function. The rightmost function can take multiple arguments\nwith the remaining functions taking only a single argument, the iterator returned\nby the previous invocation. The composition of AsyncIterator can thought of\nas chaining multiple AsyncIterator together, that is to say feeding the yielded results\nof each iterator from right to left. This can be useful for chaining cascading asynchronous\nordered actions.",
    "examples": [
      "  async function* iter1(iter) {\n    console.log('start iter1');\n    for await (const value of iter) {\n      yield `iter1 got \"${value}\" from the previous iter`;\n    }\n    yield 'end iter1';\n  }\n\n  async function* iter2(iter) {\n    console.log('start iter2');\n    for await (const value of iter) {\n      yield `iter2 got \"${value}\" from the previous iter`;\n    }\n    yield 'end iter2';\n  }\n\n  async function* iter3(...args) {\n    console.log('start iter3');\n    let i = args.length;\n    while (i--) {\n      yield args[i];\n    }\n   yield 'end iter3';\n }\n\n const finalAIter = composeAsyncIterators(iter1, iter2, iter3)(1, 2, 3, 4, 5);\n\n (async () => {\n   for await (const it of finalAIter) {\n     console.log(it);\n   }\n })();\n\n // The output is as follows\n // logs \"start iter\" from iter1\n // logs \"start iter2\" from iter2\n // logs \"start iter3\" from iter3\n // logs 'iter1 got \"iter2 got \"5\" from the previous iter\" from the previous iter' from the for await of finalAiter\n // logs 'iter1 got \"iter2 got \"4\" from the previous iter\" from the previous iter' from the for await of finalAiter\n // logs 'iter1 got \"iter2 got \"3\" from the previous iter\" from the previous iter' from the for await of finalAiter\n // logs 'iter1 got \"iter2 got \"2\" from the previous iter\" from the previous iter' from the for await of finalAiter\n // logs 'iter1 got \"iter2 got \"1\" from the previous iter\" from the previous iter' from the for await of finalAiter\n // logs 'iter1 got \"iter2 got \"end iter3\" from the previous iter\" from the previous iter' from the for await of finalAiter\n // logs 'iter1 got \"end iter2\" from the previous iter' from the for await of finalAiter\n // logs 'end iter1' from the for await of finalAiter"
    ],
    "lineNumber": 291,
    "params": [
      {
        "nullable": null,
        "types": [
          "...function(...args:*): AsyncIterator<*>"
        ],
        "spread": true,
        "optional": false,
        "name": "funcs",
        "description": "The AsyncIterator returning functions to be composed (chained)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function(...args:*): AsyncIterator<*>"
      ],
      "spread": false,
      "description": "A function obtained by composing the functions\nfrom right to left. See the documentations example for details"
    }
  },
  {
    "__docId__": 256,
    "kind": "function",
    "name": "promiseResolveReject",
    "memberof": "lib/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/general.js~promiseResolveReject",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{promiseResolveReject}",
    "description": "Creates a Promise that is resolvable externally returning an object\nthat exposes the promise itself and the resolve and reject functions\npassed as arguments to the executor function",
    "lineNumber": 316,
    "return": {
      "nullable": null,
      "types": [
        "{resolve: function, reject: function, promise: Promise<*>}"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 257,
    "kind": "function",
    "name": "objectInstanceOf",
    "memberof": "lib/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/general.js~objectInstanceOf",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{objectInstanceOf}",
    "description": "Returns T/F indicating if the supplied object is an instance of some class.\nIf the object to be tested is falsy false is returned otherwise the results\nof the instanceof check.",
    "lineNumber": 333,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "The object to be tested"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "shouldBeInstanceOfThis",
        "description": "The class the obj should be an instance of"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 258,
    "kind": "function",
    "name": "partial",
    "memberof": "lib/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/general.js~partial",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{partial}",
    "description": "Creates and returns a partially applied function with args being applied left to right",
    "lineNumber": 349,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "The function to partially apply arguments to"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "a1",
        "description": "1st arg"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "a2",
        "description": "2nd arg"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "a3",
        "description": "3rd arg"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "a4",
        "description": "4th arg"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "a5",
        "description": "5th arg"
      },
      {
        "nullable": null,
        "types": [
          "...*"
        ],
        "spread": true,
        "optional": true,
        "name": "aN",
        "description": "The remaining arguments to be partially applied"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function(...args: *): *"
      ],
      "spread": false,
      "description": "Returns the new partially applied function"
    }
  },
  {
    "__docId__": 259,
    "kind": "function",
    "name": "partialRight",
    "memberof": "lib/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/general.js~partialRight",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{partialRight}",
    "description": "Creates and returns a partially applied function with args being applied right to left",
    "lineNumber": 372,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "The function to partially apply arguments to"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "a1",
        "description": "1st nth arg"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "a2",
        "description": "2nd nth arg"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "a3",
        "description": "3rd nth arg"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "a4",
        "description": "4th nth arg"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "a5",
        "description": "5th nth arg"
      },
      {
        "nullable": null,
        "types": [
          "...*"
        ],
        "spread": true,
        "optional": true,
        "name": "aN",
        "description": "The remaining arguments to be partially applied"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function(...args: *): *"
      ],
      "spread": false,
      "description": "Returns the new partially applied function"
    }
  },
  {
    "__docId__": 260,
    "kind": "function",
    "name": "uuidv4",
    "memberof": "lib/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/general.js~uuidv4",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{uuidv4}",
    "description": "Creates and returns a valid uuid v4",
    "lineNumber": 390,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 261,
    "kind": "function",
    "name": "isGenerator",
    "memberof": "lib/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/general.js~isGenerator",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{isGenerator}",
    "description": "Returns T/F indicating if the supplied object is a generator or async generator",
    "lineNumber": 429,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 262,
    "kind": "function",
    "name": "isPromise",
    "memberof": "lib/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/general.js~isPromise",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{isPromise}",
    "description": "Returns T/F indicating if the supplied object is a Promise or Promise like",
    "lineNumber": 446,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 263,
    "kind": "function",
    "name": "isFunction",
    "memberof": "lib/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/general.js~isFunction",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{isFunction}",
    "description": "Returns T/F indicating if the supplied arument is a function",
    "lineNumber": 462,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 264,
    "kind": "function",
    "name": "mapAsyncIterator",
    "memberof": "lib/general.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "lib/general.js~mapAsyncIterator",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{mapAsyncIterator}",
    "description": "Like map for arrays but over async-iterators",
    "lineNumber": 473,
    "params": [
      {
        "nullable": null,
        "types": [
          "AsyncIterableIterator<*>"
        ],
        "spread": false,
        "optional": false,
        "name": "iterator",
        "description": "The iterator\nto have a mapping function applied over"
      },
      {
        "nullable": null,
        "types": [
          "function(arg: *): *"
        ],
        "spread": false,
        "optional": false,
        "name": "mapper",
        "description": "The mapping function"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterableIterator<*>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 265,
    "kind": "function",
    "name": "noExceptGeneratorWrap",
    "memberof": "lib/general.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "lib/general.js~noExceptGeneratorWrap",
    "access": "public",
    "export": true,
    "importPath": "lib/general.js",
    "importStyle": "{noExceptGeneratorWrap}",
    "description": "Wraps the supplied generator in a try catch and re-yields its values generator.\nIf the wrapped generator throws an exception the wrapping generator ends.",
    "lineNumber": 491,
    "params": [
      {
        "nullable": null,
        "types": [
          "AsyncIterableIterator<*>|IterableIterator<*>"
        ],
        "spread": false,
        "optional": false,
        "name": "generator",
        "description": "The generator to be wrapped"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "returnLast",
        "description": "Should the last value of the supplied generator be returned"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterableIterator<*>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 266,
    "kind": "file",
    "name": "lib/index.js",
    "content": "export { BehaviorRunner, initRunnableBehavior } from './behaviorRunner';\nexport {\n  createState,\n  stateWithMsgNoWait,\n  stateWithMsgWait,\n  stateWithMsgWaitFromAwaitable,\n  stateWithMsgWaitFromFn,\n} from './behaviorState';\nexport {\n  browserHistoryGoBack,\n  browserLocation,\n  locationContains,\n  locationEquals,\n  waitForHistoryManipToChangeLocation,\n} from './browser';\nexport {\n  click,\n  clickAndWaitFor,\n  clickAndWaitForHistoryChange,\n  clickInContext,\n  clickInContextWithDelay,\n  clickWithDelay,\n  scrollAllIntoViewAndClick,\n  scrollAllIntoViewAndClickWithDelay,\n  scrollIntoViewAndClick,\n  scrollIntoViewAndClickWithDelay,\n  selectAllAndClick,\n  selectAllAndClickWithDelay,\n  selectClickAndWaitFor,\n  selectElemAndClick,\n  selectElemAndClickWithDelay,\n  selectElemFromAndClick,\n  selectElemFromAndClickWithDelay,\n  selectFromAndClickNTimes,\n  selectFromAndClickNTimesWithDelay,\n  selectFromAndClickUntilNullWithDelay,\n  selectScrollIntoViewAndClickSelectedWhileConnected,\n  selectScrollIntoViewAndClickWithDelayWhileSelectedConnected,\n} from './clicks';\nexport {\n  delay,\n  DelayAmount1Second,\n  DelayAmount2Seconds,\n  DelayAmount3Seconds,\n  DelayAmount4Seconds,\n  DelayAmount5Seconds,\n  domCompletePromise,\n  resolveWhenBehaviorUnPaused,\n  secondsToDelayAmount,\n  setIntervalP,\n  setTimeoutP,\n  waitForAdditionalElemChildren,\n  waitForAdditionalElemChildrenMO,\n  waitForAndSelectElement,\n  waitForPredicate,\n  waitForSelector,\n  waitUntilElementIsRemovedFromDom,\n} from './delays';\nexport {\n  addBehaviorStyle,\n  addClass,\n  anySelectorExists,\n  attr,\n  attrEq,\n  canAccessIf,\n  chainFistChildElemOf,\n  chainLastChildElemOf,\n  chainNthChildElementOf,\n  chainNthChildNodeOf,\n  chainQs,\n  childElementIterator,\n  childNodeIterator,\n  docBaseURIEndsWith,\n  docBaseURIEquals,\n  documentScrollPosition,\n  elemDataValue,\n  elemDataValueEqs,\n  elementsNameEquals,\n  elementTextContains,\n  elementTextEndsWith,\n  elementTextEqs,\n  elementTextStartsWith,\n  elementTextStartsWithAndEndsWith,\n  elemHasChildren,\n  elemHasSibling,\n  elemHasZeroBoundingRect,\n  elemInnerText,\n  elemInnerTextEqs,\n  elemInnerTextEqsInsensitive,\n  elemInnerTextEqsOneOf,\n  elemInnerTextMatchesRegex,\n  elemMatchesSelector,\n  elemOffsetTopZero,\n  elemTextContent,\n  filteredQs,\n  findDirectChildElement,\n  findTag,\n  firstChildElementOf,\n  firstChildElementOfSelector,\n  firstChildElemOfParent,\n  getElementClientPageCenter,\n  getElementClientPagePosition,\n  getElementPositionWidthHeight,\n  getElemSibling,\n  getElemSiblingAndRemoveElem,\n  getElemsParentsSibling,\n  getNthParentElement,\n  hasAnyClass,\n  hasClass,\n  hasClasses,\n  id,\n  idExists,\n  innerTextOfSelected,\n  isClasslessElem,\n  isElemVisible,\n  lastChildElementOf,\n  lastChildElementOfSelector,\n  markElemAsVisited,\n  maybePolyfillXPG,\n  maybeRemoveElem,\n  maybeRemoveElemById,\n  nodesNameEquals,\n  nthChildElementOf,\n  nthChildNodeOf,\n  nthPreviousSibling,\n  numElemChildren,\n  qs,\n  qsa,\n  qsaOneOf,\n  qsOneOf,\n  removeClass,\n  repeatedXpathQueryIterator,\n  repeatedXpathQueryIteratorAsync,\n  selectedNextElementSibling,\n  selectorExists,\n  splitElemInnerText,\n  splitElemTextContents,\n  xpathOneOf,\n  xpathSnapShot,\n  xpathSnapShotArray,\n} from './dom';\nexport {\n  createMouseEvent,\n  fireEventOn,\n  fireMouseEventsOnElement,\n  waitForEventTargetToFireEvent,\n} from './events';\nexport {\n  autobind,\n  autoFetchFromDoc,\n  compose,\n  composeAsync,\n  composeAsyncIterators,\n  composeIterators,\n  extractProps,\n  getViaPath,\n  globalWithPropsExist,\n  isFunction,\n  isGenerator,\n  isPromise,\n  mapAsyncIterator,\n  noExceptGeneratorWrap,\n  noop,\n  objectHasProps,\n  objectInstanceOf,\n  partial,\n  partialRight,\n  promiseResolveReject,\n  sendAutoFetchWorkerURLs,\n  uuidv4,\n} from './general';\nexport {\n  findAllMediaElementsAndPlay,\n  noExceptPlayMediaElement,\n  selectAndPlay,\n  selectIdAndPlay,\n  uaThinksMediaElementCanPlayAllTheWay,\n} from './media';\nexport { MutationStream } from './mutations';\nexport {\n  addOutlink,\n  addOutLinks,\n  collectOutlinksFrom,\n  collectOutlinksFromDoc,\n} from './outlinkCollector';\nexport { buildCustomPostStepFn, doneOrWait } from './postStepFNs';\nexport {\n  findChildWithKey,\n  findReduxStore,\n  getInternalRootOnElem,\n  getReactRootContainer,\n  getReactRootHostElem,\n  reactInstanceFromDOMElem,\n  reactInstancesFromElements,\n} from './reactUtils';\nexport {\n  canScrollDownMore,\n  canScrollUpMore,\n  createScrollAmount,\n  createScroller,\n  scrollDownByElemHeight,\n  scrollDownByElemHeightWithDelay,\n  scrollIntoView,\n  scrollIntoViewAndWaitFor,\n  scrollIntoViewWithDelay,\n  scrollToElemOffset,\n  scrollToElemOffsetWithDelay,\n  scrollWindowBy,\n  scrollWindowByWithDelay,\n  scrollWindowDownBy,\n  scrollWindowDownByWithDelay,\n  smoothScrollWindowBy,\n  smoothScrollWindowDownBy,\n} from './scrolls';\nexport {\n  camelCase,\n  camelCaseToDashDelim,\n  camelCaseToUnderscoreDelim,\n  capitalize,\n  collapseWhitespace,\n  isAlpha,\n  isAlphaNumeric,\n  isEmptyString,\n  isLower,\n  isNumeric,\n  isUpper,\n  stringBetween,\n  substringFromIndexOf,\n  substringFromLastIndexOf,\n  titleCase,\n  toBoolean,\n  toFloat,\n  toInt,\n} from './strings';\nexport {\n  disconnectingWalk,\n  traverseChildrenOf,\n  traverseChildrenOfCustom,\n  traverseChildrenOfLoaderParent,\n  traverseChildrenOfLoaderParentGenFn,\n  traverseChildrenOfLoaderParentRemovingPrevious,\n  traverseChildrenOfRemovingPrevious,\n  walkChildrenOfCustom,\n  WalkEndedReasons,\n} from './traversals';\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/lib/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 267,
    "kind": "file",
    "name": "lib/media.js",
    "content": "import { id, qs, qsa } from './dom';\nimport { uuidv4 } from './general';\n\n/**\n * Calls the play method of the element returned by the querySelector\n * @param {string} selector - The query selector to select a media element\n * @param {Document|Element} [cntx] - Optional element/Document to use\n * to perform the querySelector call from\n * @return {Promise<boolean>} - Returns false if an exception occurred or true if playing was successful\n */\nexport function selectAndPlay(selector, cntx) {\n  const elem = qs(selector, cntx);\n  return noExceptPlayMediaElement(elem);\n}\n\n/**\n * Calls the play method of the element returned by calling document.getElementById\n * @param {string} eid - The id of the media element\n * @param {Document} [cntx] - Optional document object to use\n * @return {Promise<boolean>} - Returns false if an exception occurred or true if playing was successful\n */\nexport function selectIdAndPlay(eid, cntx) {\n  const elem = id(eid, cntx);\n  return noExceptPlayMediaElement(elem);\n}\n\n/**\n * Calls the play function of the supplied element catching the exception thrown\n * if any was thrown. Returns true indicating call to play was successful otherwise false\n * @param {HTMLMediaElement} mediaElement\n * @param {boolean} [playThrough]\n * @return {Promise<boolean>} - Returns false if an exception occurred or true if playing was successful\n */\nexport async function noExceptPlayMediaElement(mediaElement, playThrough) {\n  if (mediaElement == null || typeof mediaElement.play !== 'function') {\n    return false;\n  }\n  try {\n    if (playThrough) {\n      const plp = uaThinksMediaElementCanPlayAllTheWay(mediaElement);\n      await mediaElement.play();\n      await plp;\n    } else {\n      await mediaElement.play();\n    }\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Returns a promise that resolves once the canplaythrough or error event\n * is fired from the supplied media element\n * @param {HTMLMediaElement} mediaElement\n * @return {Promise<void>}\n */\nexport function uaThinksMediaElementCanPlayAllTheWay(mediaElement) {\n  return new Promise(resolve => {\n    let to;\n    const listener = () => {\n      if (to != null) {\n        clearTimeout(to);\n        to = null;\n      }\n      mediaElement.removeEventListener('canplaythrough', listener);\n      mediaElement.removeEventListener('error', listener);\n      resolve();\n    };\n    mediaElement.addEventListener('canplaythrough', listener);\n    mediaElement.addEventListener('error', listener);\n    to = setTimeout(listener, 60000);\n  });\n}\n\n/**\n * @type {string}\n * @private\n */\nconst __MediaElementSelector__ = 'audio, video';\n/** @ignore  */\nlet __Played__;\n\n/**\n * Calls the play function on all audio and video elements found in the document.\n * If context is supplied, the selection of audio and video elements is done from\n * the supplied context.\n * @param {Document|Element} [cntx] - Optional element to use rather\n * than the current JS context's document object\n * @return {Promise<boolean>}\n */\nexport async function findAllMediaElementsAndPlay(cntx) {\n  if (__Played__ == null) __Played__ = Symbol(uuidv4());\n  const mediaElems = qsa(__MediaElementSelector__, cntx);\n  if (mediaElems.length === 0) return false;\n  const proms = [];\n  let shouldWait = false;\n  for (var i = 0; i < mediaElems.length; i++) {\n    if (!mediaElems[i][__Played__]) {\n      proms.push(noExceptPlayMediaElement(mediaElems[i]));\n      Object.defineProperty(mediaElems[i], __Played__, {\n        value: true,\n        enumerable: false,\n      });\n      mediaElems[i][__Played__] = true;\n      shouldWait = true;\n    }\n  }\n  await Promise.all(proms);\n  return shouldWait;\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/lib/media.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 268,
    "kind": "function",
    "name": "selectAndPlay",
    "memberof": "lib/media.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/media.js~selectAndPlay",
    "access": "public",
    "export": true,
    "importPath": "lib/media.js",
    "importStyle": "{selectAndPlay}",
    "description": "Calls the play method of the element returned by the querySelector",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "The query selector to select a media element"
      },
      {
        "nullable": null,
        "types": [
          "Document",
          "Element"
        ],
        "spread": false,
        "optional": true,
        "name": "cntx",
        "description": "Optional element/Document to use\nto perform the querySelector call from"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": "Returns false if an exception occurred or true if playing was successful"
    }
  },
  {
    "__docId__": 269,
    "kind": "function",
    "name": "selectIdAndPlay",
    "memberof": "lib/media.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/media.js~selectIdAndPlay",
    "access": "public",
    "export": true,
    "importPath": "lib/media.js",
    "importStyle": "{selectIdAndPlay}",
    "description": "Calls the play method of the element returned by calling document.getElementById",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eid",
        "description": "The id of the media element"
      },
      {
        "nullable": null,
        "types": [
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "cntx",
        "description": "Optional document object to use"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": "Returns false if an exception occurred or true if playing was successful"
    }
  },
  {
    "__docId__": 270,
    "kind": "function",
    "name": "noExceptPlayMediaElement",
    "memberof": "lib/media.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/media.js~noExceptPlayMediaElement",
    "access": "public",
    "export": true,
    "importPath": "lib/media.js",
    "importStyle": "{noExceptPlayMediaElement}",
    "description": "Calls the play function of the supplied element catching the exception thrown\nif any was thrown. Returns true indicating call to play was successful otherwise false",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLMediaElement"
        ],
        "spread": false,
        "optional": false,
        "name": "mediaElement",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "playThrough",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": "Returns false if an exception occurred or true if playing was successful"
    }
  },
  {
    "__docId__": 271,
    "kind": "function",
    "name": "uaThinksMediaElementCanPlayAllTheWay",
    "memberof": "lib/media.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/media.js~uaThinksMediaElementCanPlayAllTheWay",
    "access": "public",
    "export": true,
    "importPath": "lib/media.js",
    "importStyle": "{uaThinksMediaElementCanPlayAllTheWay}",
    "description": "Returns a promise that resolves once the canplaythrough or error event\nis fired from the supplied media element",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLMediaElement"
        ],
        "spread": false,
        "optional": false,
        "name": "mediaElement",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 272,
    "kind": "variable",
    "name": "__MediaElementSelector__",
    "memberof": "lib/media.js",
    "static": true,
    "longname": "lib/media.js~__MediaElementSelector__",
    "access": "private",
    "export": false,
    "importPath": "lib/media.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 80,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 273,
    "kind": "function",
    "name": "findAllMediaElementsAndPlay",
    "memberof": "lib/media.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "lib/media.js~findAllMediaElementsAndPlay",
    "access": "public",
    "export": true,
    "importPath": "lib/media.js",
    "importStyle": "{findAllMediaElementsAndPlay}",
    "description": "Calls the play function on all audio and video elements found in the document.\nIf context is supplied, the selection of audio and video elements is done from\nthe supplied context.",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "Document",
          "Element"
        ],
        "spread": false,
        "optional": true,
        "name": "cntx",
        "description": "Optional element to use rather\nthan the current JS context's document object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 274,
    "kind": "file",
    "name": "lib/mutations.js",
    "content": "/**\n * Observe dom mutation using a MutationObserver as a stream (AsyncIterator)\n */\nexport class MutationStream {\n  /**\n   * Construct a new MutationStream\n   */\n  constructor() {\n    /**\n     * @type {MutationObserver}\n     */\n    this.mo = new MutationObserver((ml, ob) => {\n      if (this._resolve) {\n        this._resolve(ml);\n      }\n    });\n\n    /**\n     * @type {?function(arg: *): *}\n     * @private\n     */\n    this._resolve = null;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this._loopStream = false;\n  }\n\n  /**\n   * Start observing an element for mutations\n   * @param {Node} elem - The element to be observed for mutations\n   * @param {Object} config - Configuration object accepted by mutation observers\n   */\n  observe(elem, config) {\n    this.mo.observe(elem, config);\n    this._loopStream = true;\n  }\n\n  /**\n   * Start observing an element for mutations and receive an async iterator\n   * yielding the observed mutations\n   * @param {Node} elem - The element to be observed for mutations\n   * @param {Object} config - Configuration object accepted by mutation observers\n   * @return {AsyncIterableIterator<MutationRecord[]>}\n   */\n  observeStream(elem, config) {\n    this.observe(elem, config);\n    return this.streamItr();\n  }\n\n  /**\n   * Creates a conditional mutation stream. If the startPredicate\n   * does not return true then the the observer discontents ending the stream.\n   * Otherwise the stream continues to emit mutations until the observer is\n   * disconnected or the stopPredicate returns true. The stopPredicate is polled\n   * at 1.5 second intervals when the observer is waiting for the next mutation.\n   * @param {Node} elem - The element to be observed for mutations\n   * @param {Object} config - Configuration object accepted by mutation observers\n   * @param {function(): boolean} startPredicate - Predicate function right before\n   * mutations are yielded to determine if the stream should end immediately or not\n   * @param {function(): boolean} stopPredicate - Predicate function polled\n   * while waiting for mutations to occur that returns false to indicate\n   * the stream should end.\n   * @return {AsyncIterator<MutationRecord[]>}\n   */\n  predicatedStream(elem, config, startPredicate, stopPredicate) {\n    this.observe(elem, config);\n    return this.predicateStreamItr(startPredicate, stopPredicate);\n  }\n\n  /**\n   * Disconnects the mutation observer and ends the stream\n   */\n  disconnect() {\n    this.mo.disconnect();\n    this._loopStream = false;\n    if (this._resolve) {\n      this._resolve(null);\n    }\n    this._resolve = null;\n  }\n\n  /**\n   * Returns a promise that resolves with the next observed mutation\n   * @return {Promise<?MutationRecord[]>}\n   * @private\n   */\n  _getNext() {\n    return new Promise(resolve => {\n      this._resolve = resolve;\n    });\n  }\n\n  /**\n   * Returns an stream (async iterator) that yields\n   * the observed mutations. Must have called {@link observe} before\n   * calling this method, otherwise no mutations will be yielded\n   * @return {AsyncIterator<MutationRecord[]>}\n   */\n  async *streamItr() {\n    let next;\n    while (this._loopStream) {\n      next = await this._getNext();\n      if (next == null) {\n        break;\n      }\n      yield next;\n    }\n    this.disconnect();\n  }\n\n  /**\n   * Returns an mutation stream that ends if the startPredicate returns false\n   * otherwise keeps the stream alive until disconnect or the stopPredicate, polled\n   * at 1.5 second intervals when waiting for next mutation, returns false.\n   * Automatically disconnects at the end.\n   * @param {function(): boolean} startPredicate - Predicate function right before\n   * mutations are yielded to determine if the stream should end immediately or not\n   * @param {function(): boolean} stopPredicate - Predicate function polled\n   * while waiting for mutations to occur that returns false to indicate\n   * the stream should end.\n   * @return {AsyncIterator<?MutationRecord[]>}\n   */\n  async *predicateStreamItr(startPredicate, stopPredicate) {\n    if (!startPredicate()) {\n      return this.disconnect();\n    }\n    let checkTo;\n    let next;\n    while (this._loopStream) {\n      next = await Promise.race([\n        this._getNext(),\n        new Promise(resolve => {\n          checkTo = setInterval(() => {\n            if (stopPredicate()) {\n              checkTo = null;\n              clearInterval(checkTo);\n              return resolve(null);\n            }\n          }, 1500);\n        }),\n      ]);\n      if (checkTo) {\n        clearInterval(checkTo);\n        checkTo = null;\n      }\n      if (next == null) break;\n      yield next;\n    }\n    this.disconnect();\n  }\n\n  /**\n   * @return {AsyncIterator<?MutationRecord[]>}\n   */\n  [Symbol.asyncIterator]() {\n    return this.streamItr();\n  }\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/lib/mutations.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 275,
    "kind": "class",
    "name": "MutationStream",
    "memberof": "lib/mutations.js",
    "static": true,
    "longname": "lib/mutations.js~MutationStream",
    "access": "public",
    "export": true,
    "importPath": "lib/mutations.js",
    "importStyle": "{MutationStream}",
    "description": "Observe dom mutation using a MutationObserver as a stream (AsyncIterator)",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 276,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "lib/mutations.js~MutationStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/mutations.js~MutationStream#constructor",
    "access": "public",
    "description": "Construct a new MutationStream",
    "lineNumber": 8
  },
  {
    "__docId__": 277,
    "kind": "member",
    "name": "mo",
    "memberof": "lib/mutations.js~MutationStream",
    "static": false,
    "longname": "lib/mutations.js~MutationStream#mo",
    "access": "public",
    "description": "",
    "lineNumber": 12,
    "type": {
      "nullable": null,
      "types": [
        "MutationObserver"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 278,
    "kind": "member",
    "name": "_resolve",
    "memberof": "lib/mutations.js~MutationStream",
    "static": false,
    "longname": "lib/mutations.js~MutationStream#_resolve",
    "access": "private",
    "description": "",
    "lineNumber": 22,
    "type": {
      "nullable": true,
      "types": [
        "function(arg: *): *"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 279,
    "kind": "member",
    "name": "_loopStream",
    "memberof": "lib/mutations.js~MutationStream",
    "static": false,
    "longname": "lib/mutations.js~MutationStream#_loopStream",
    "access": "private",
    "description": "",
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 280,
    "kind": "method",
    "name": "observe",
    "memberof": "lib/mutations.js~MutationStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/mutations.js~MutationStream#observe",
    "access": "public",
    "description": "Start observing an element for mutations",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be observed for mutations"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Configuration object accepted by mutation observers"
      }
    ],
    "return": null
  },
  {
    "__docId__": 282,
    "kind": "method",
    "name": "observeStream",
    "memberof": "lib/mutations.js~MutationStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/mutations.js~MutationStream#observeStream",
    "access": "public",
    "description": "Start observing an element for mutations and receive an async iterator\nyielding the observed mutations",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be observed for mutations"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Configuration object accepted by mutation observers"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterableIterator<MutationRecord[]>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 283,
    "kind": "method",
    "name": "predicatedStream",
    "memberof": "lib/mutations.js~MutationStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/mutations.js~MutationStream#predicatedStream",
    "access": "public",
    "description": "Creates a conditional mutation stream. If the startPredicate\ndoes not return true then the the observer discontents ending the stream.\nOtherwise the stream continues to emit mutations until the observer is\ndisconnected or the stopPredicate returns true. The stopPredicate is polled\nat 1.5 second intervals when the observer is waiting for the next mutation.",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be observed for mutations"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Configuration object accepted by mutation observers"
      },
      {
        "nullable": null,
        "types": [
          "function(): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "startPredicate",
        "description": "Predicate function right before\nmutations are yielded to determine if the stream should end immediately or not"
      },
      {
        "nullable": null,
        "types": [
          "function(): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "stopPredicate",
        "description": "Predicate function polled\nwhile waiting for mutations to occur that returns false to indicate\nthe stream should end."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterator<MutationRecord[]>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 284,
    "kind": "method",
    "name": "disconnect",
    "memberof": "lib/mutations.js~MutationStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/mutations.js~MutationStream#disconnect",
    "access": "public",
    "description": "Disconnects the mutation observer and ends the stream",
    "lineNumber": 76,
    "params": [],
    "return": null
  },
  {
    "__docId__": 287,
    "kind": "method",
    "name": "_getNext",
    "memberof": "lib/mutations.js~MutationStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/mutations.js~MutationStream#_getNext",
    "access": "private",
    "description": "Returns a promise that resolves with the next observed mutation",
    "lineNumber": 90,
    "return": {
      "nullable": null,
      "types": [
        "Promise<?MutationRecord[]>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 289,
    "kind": "method",
    "name": "streamItr",
    "memberof": "lib/mutations.js~MutationStream",
    "generator": true,
    "async": true,
    "static": false,
    "longname": "lib/mutations.js~MutationStream#streamItr",
    "access": "public",
    "description": "Returns an stream (async iterator) that yields\nthe observed mutations. Must have called {@link observe} before\ncalling this method, otherwise no mutations will be yielded",
    "lineNumber": 102,
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterator<MutationRecord[]>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 290,
    "kind": "method",
    "name": "predicateStreamItr",
    "memberof": "lib/mutations.js~MutationStream",
    "generator": true,
    "async": true,
    "static": false,
    "longname": "lib/mutations.js~MutationStream#predicateStreamItr",
    "access": "public",
    "description": "Returns an mutation stream that ends if the startPredicate returns false\notherwise keeps the stream alive until disconnect or the stopPredicate, polled\nat 1.5 second intervals when waiting for next mutation, returns false.\nAutomatically disconnects at the end.",
    "lineNumber": 126,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "startPredicate",
        "description": "Predicate function right before\nmutations are yielded to determine if the stream should end immediately or not"
      },
      {
        "nullable": null,
        "types": [
          "function(): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "stopPredicate",
        "description": "Predicate function polled\nwhile waiting for mutations to occur that returns false to indicate\nthe stream should end."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterator<?MutationRecord[]>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 291,
    "kind": "method",
    "name": "[Symbol.asyncIterator]",
    "memberof": "lib/mutations.js~MutationStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "lib/mutations.js~MutationStream#[Symbol.asyncIterator]",
    "access": "public",
    "description": "",
    "lineNumber": 158,
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterator<?MutationRecord[]>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 292,
    "kind": "file",
    "name": "lib/outlinkCollector.js",
    "content": "/** @ignore */\nlet __outlinksSet__;\n/** @ignore */\nconst ignoredSchemes = [\n  'about:',\n  'data:',\n  'mailto:',\n  'javascript:',\n  'js:',\n  '{',\n  '*',\n  'ftp:',\n  'tel:',\n];\n/** @ignore */\nconst goodSchemes = { 'http:': true, 'https:': true };\n/** @ignore */\nconst outlinkSelector = 'a[href], area[href]';\n/** @ignore */\nlet outLinkURLParser;\n/** @ignore */\nlet didInit = false;\n\n/**\n * @ignore\n */\nfunction initOutlinkCollection() {\n  didInit = true;\n  outLinkURLParser = new URL('about:blank');\n  if (window.$wbOutlinkSet$ == null) {\n    __outlinksSet__ = new Set();\n    Object.defineProperty(window, '$wbOutlinkSet$', {\n      value: __outlinksSet__,\n      enumerable: false,\n    });\n  } else {\n    window.$wbOutlinkSet$.clear();\n    __outlinksSet__ = window.$wbOutlinkSet$;\n  }\n\n  if (typeof window.$wbOutlinks$ === 'undefined') {\n    Object.defineProperty(window, '$wbOutlinks$', {\n      get() {\n        const outlinks = Array.from(__outlinksSet__);\n        __outlinksSet__.clear();\n        return outlinks;\n      },\n      set() {},\n      enumerable: false,\n    });\n  }\n}\n\n/**\n * @ignore\n */\nfunction shouldIgnoreLink(test) {\n  for (let i = 0; i < ignoredSchemes.length; ++i) {\n    if (test.startsWith(ignoredSchemes[i])) {\n      return true;\n    }\n  }\n  let parsed = true;\n  try {\n    outLinkURLParser.href = test;\n  } catch (error) {\n    parsed = false;\n  }\n  return !(parsed && goodSchemes[outLinkURLParser.protocol]);\n}\n\n/**\n * Add the array/nodelist of A or Anchor tags href properties the collected outlinks\n * @param {Array<HTMLAnchorElement|HTMLAreaElement>|NodeList<HTMLAnchorElement|HTMLAreaElement>} toAdd - The elements with\n * href properties that are to be added to the collected outlinks\n */\nexport function addOutLinks(toAdd) {\n  if (window.$WBNOOUTLINKS) {\n    return;\n  }\n  if (!didInit) initOutlinkCollection();\n  let href;\n  for (var i = 0; i < toAdd.length; i++) {\n    href = toAdd[i].href.trim();\n    if (href && !__outlinksSet__.has(href) && !shouldIgnoreLink(href)) {\n      __outlinksSet__.add(href);\n    }\n  }\n}\n\n/**\n * Collects the outlinks from the document\n */\nexport function collectOutlinksFromDoc() {\n  if (window.$WBNOOUTLINKS) {\n    return;\n  }\n  if (!didInit) initOutlinkCollection();\n  addOutLinks(document.querySelectorAll(outlinkSelector));\n}\n\n/**\n * Collects outlinks form the supplied element\n * @param {Element|Document} queryFrom - The element to collect outlinks\n * from\n */\nexport function collectOutlinksFrom(queryFrom) {\n  if (window.$WBNOOUTLINKS) {\n    return;\n  }\n  if (!didInit) initOutlinkCollection();\n  addOutLinks(queryFrom.querySelectorAll(outlinkSelector));\n}\n\n/**\n * Add the URL or href value of the supplied argument\n * @param {HTMLAnchorElement|HTMLAreaElement|string} elemOrString - The\n * element with href property or string to add to the collected outlinks\n */\nexport function addOutlink(elemOrString) {\n  if (window.$WBNOOUTLINKS) {\n    return;\n  }\n  if (!didInit) initOutlinkCollection();\n  const href = (elemOrString.href || elemOrString).trim();\n  if (href && !__outlinksSet__.has(href) && !shouldIgnoreLink(href)) {\n    __outlinksSet__.add(href);\n  }\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/lib/outlinkCollector.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 293,
    "kind": "variable",
    "name": "ignoredSchemes",
    "memberof": "lib/outlinkCollector.js",
    "static": true,
    "longname": "lib/outlinkCollector.js~ignoredSchemes",
    "access": "public",
    "export": false,
    "importPath": "lib/outlinkCollector.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "ignore": true,
    "type": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 294,
    "kind": "variable",
    "name": "goodSchemes",
    "memberof": "lib/outlinkCollector.js",
    "static": true,
    "longname": "lib/outlinkCollector.js~goodSchemes",
    "access": "public",
    "export": false,
    "importPath": "lib/outlinkCollector.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "ignore": true,
    "type": {
      "types": [
        "{\"http:\": boolean, \"https:\": boolean}"
      ]
    }
  },
  {
    "__docId__": 295,
    "kind": "variable",
    "name": "outlinkSelector",
    "memberof": "lib/outlinkCollector.js",
    "static": true,
    "longname": "lib/outlinkCollector.js~outlinkSelector",
    "access": "public",
    "export": false,
    "importPath": "lib/outlinkCollector.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "ignore": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 296,
    "kind": "variable",
    "name": "didInit",
    "memberof": "lib/outlinkCollector.js",
    "static": true,
    "longname": "lib/outlinkCollector.js~didInit",
    "access": "public",
    "export": false,
    "importPath": "lib/outlinkCollector.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "ignore": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 297,
    "kind": "function",
    "name": "initOutlinkCollection",
    "memberof": "lib/outlinkCollector.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/outlinkCollector.js~initOutlinkCollection",
    "access": "public",
    "export": false,
    "importPath": "lib/outlinkCollector.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 27,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 298,
    "kind": "function",
    "name": "shouldIgnoreLink",
    "memberof": "lib/outlinkCollector.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/outlinkCollector.js~shouldIgnoreLink",
    "access": "public",
    "export": false,
    "importPath": "lib/outlinkCollector.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 57,
    "ignore": true,
    "params": [
      {
        "name": "test",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 299,
    "kind": "function",
    "name": "addOutLinks",
    "memberof": "lib/outlinkCollector.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/outlinkCollector.js~addOutLinks",
    "access": "public",
    "export": true,
    "importPath": "lib/outlinkCollector.js",
    "importStyle": "{addOutLinks}",
    "description": "Add the array/nodelist of A or Anchor tags href properties the collected outlinks",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<HTMLAnchorElement|HTMLAreaElement>|NodeList<HTMLAnchorElement|HTMLAreaElement>"
        ],
        "spread": false,
        "optional": false,
        "name": "toAdd",
        "description": "The elements with\nhref properties that are to be added to the collected outlinks"
      }
    ],
    "return": null
  },
  {
    "__docId__": 300,
    "kind": "function",
    "name": "collectOutlinksFromDoc",
    "memberof": "lib/outlinkCollector.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/outlinkCollector.js~collectOutlinksFromDoc",
    "access": "public",
    "export": true,
    "importPath": "lib/outlinkCollector.js",
    "importStyle": "{collectOutlinksFromDoc}",
    "description": "Collects the outlinks from the document",
    "lineNumber": 94,
    "params": [],
    "return": null
  },
  {
    "__docId__": 301,
    "kind": "function",
    "name": "collectOutlinksFrom",
    "memberof": "lib/outlinkCollector.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/outlinkCollector.js~collectOutlinksFrom",
    "access": "public",
    "export": true,
    "importPath": "lib/outlinkCollector.js",
    "importStyle": "{collectOutlinksFrom}",
    "description": "Collects outlinks form the supplied element",
    "lineNumber": 107,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "Document"
        ],
        "spread": false,
        "optional": false,
        "name": "queryFrom",
        "description": "The element to collect outlinks\nfrom"
      }
    ],
    "return": null
  },
  {
    "__docId__": 302,
    "kind": "function",
    "name": "addOutlink",
    "memberof": "lib/outlinkCollector.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/outlinkCollector.js~addOutlink",
    "access": "public",
    "export": true,
    "importPath": "lib/outlinkCollector.js",
    "importStyle": "{addOutlink}",
    "description": "Add the URL or href value of the supplied argument",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLAnchorElement",
          "HTMLAreaElement",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "elemOrString",
        "description": "The\nelement with href property or string to add to the collected outlinks"
      }
    ],
    "return": null
  },
  {
    "__docId__": 303,
    "kind": "file",
    "name": "lib/postStepFNs.js",
    "content": "/**\n * The default post step function used for all behaviors that do not provide one.\n * @param {RawBehaviorStepResults} rawResults\n * @return {BehaviorStepResults}\n */\nexport function doneOrWait(rawResults) {\n  const result = {\n    done: rawResults.done,\n    wait: false,\n    msg: 'No message',\n    state: null,\n  };\n  if (typeof rawResults.value === 'object') {\n    result.wait = !!rawResults.value.wait;\n    result.msg = rawResults.value.msg || result.msg;\n    result.state = rawResults.value.state || result.state;\n  } else {\n    result.wait = !!rawResults.value;\n  }\n  return result;\n}\n\n/**\n * Creates and returns a function wrapping the provided post step function\n * will call the supplied function and return the expected output.\n * @param {function(rawResults: RawBehaviorStepResults): void} customFN\n * @return {function(state: RawBehaviorStepResults): BehaviorStepResults}\n */\nexport function buildCustomPostStepFn(customFN) {\n  return function wrappedPostStep(state) {\n    customFN(state);\n    return doneOrWait(state);\n  };\n}\n\n/**\n * @typedef {Object} BehaviorStepResults\n * @property {boolean} done - Has the behavior finished performing its actions\n * @property {boolean} wait - Should a wait for network idle be performed if possible by the runner\n * @property {string} msg - A message from the behavior representing a description of the action just performed\n * @property {*} state - Any additional information about the full state of the behavior\n */\n\n/**\n * @typedef {Object} RawBehaviorStepResults\n * @property {boolean} done - Is the generator finished\n * @property {?BehaviorState} value - The value yielded by the behavior\n */\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/lib/postStepFNs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 304,
    "kind": "function",
    "name": "doneOrWait",
    "memberof": "lib/postStepFNs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/postStepFNs.js~doneOrWait",
    "access": "public",
    "export": true,
    "importPath": "lib/postStepFNs.js",
    "importStyle": "{doneOrWait}",
    "description": "The default post step function used for all behaviors that do not provide one.",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "RawBehaviorStepResults"
        ],
        "spread": false,
        "optional": false,
        "name": "rawResults",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BehaviorStepResults"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 305,
    "kind": "function",
    "name": "buildCustomPostStepFn",
    "memberof": "lib/postStepFNs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/postStepFNs.js~buildCustomPostStepFn",
    "access": "public",
    "export": true,
    "importPath": "lib/postStepFNs.js",
    "importStyle": "{buildCustomPostStepFn}",
    "description": "Creates and returns a function wrapping the provided post step function\nwill call the supplied function and return the expected output.",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(rawResults: RawBehaviorStepResults): void"
        ],
        "spread": false,
        "optional": false,
        "name": "customFN",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function(state: RawBehaviorStepResults): BehaviorStepResults"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 306,
    "kind": "typedef",
    "name": "BehaviorStepResults",
    "memberof": "lib/postStepFNs.js",
    "static": true,
    "longname": "lib/postStepFNs.js~BehaviorStepResults",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "done",
        "description": "Has the behavior finished performing its actions"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "wait",
        "description": "Should a wait for network idle be performed if possible by the runner"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": "A message from the behavior representing a description of the action just performed"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "Any additional information about the full state of the behavior"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "BehaviorStepResults"
    }
  },
  {
    "__docId__": 307,
    "kind": "typedef",
    "name": "RawBehaviorStepResults",
    "memberof": "lib/postStepFNs.js",
    "static": true,
    "longname": "lib/postStepFNs.js~RawBehaviorStepResults",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "done",
        "description": "Is the generator finished"
      },
      {
        "nullable": true,
        "types": [
          "BehaviorState"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value yielded by the behavior"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "RawBehaviorStepResults"
    }
  },
  {
    "__docId__": 308,
    "kind": "file",
    "name": "lib/reactUtils.js",
    "content": "/** @ignore */\nconst __ReactProps = {\n  rootContainer: '_reactRootContainer',\n  internalRoot: '_internalRoot',\n  onDomNode: '__reactInternalInstance',\n  rootHostElemId: 'react-root',\n  mProps: 'memoizedProps',\n};\n\n/**\n * Returns the root host element of an react application (id = react-root)\n * @param {string} [alternativeId] - An alternative id to use rather than the default\n * @return {?HTMLElement}\n */\nexport function getReactRootHostElem(alternativeId) {\n  return document.getElementById(\n    alternativeId != null ? alternativeId : __ReactProps.rootHostElemId\n  );\n}\n\n/**\n * Returns the internal root object added by react on the supplied element.\n * Property `_internalRoot`\n * @param {HTMLElement|Element|Node} elem\n * @return {Object}\n */\nexport function getInternalRootOnElem(elem) {\n  return elem[__ReactProps.internalRoot];\n}\n\n/**\n * Returns the root container object added by react\n * @param {HTMLElement|Element|Node} elem\n * @return {?Object}\n */\nexport function getReactRootContainer(elem) {\n  if (!elem) return null;\n  const hostContainer = elem[__ReactProps.rootContainer];\n  if (hostContainer) {\n    return hostContainer[__ReactProps.internalRoot];\n  }\n  return null;\n}\n\n/**\n * Returns the react instance object that lives on the live element\n * @param {HTMLElement|Element|Node} elem - The element to have its\n * react instance extracted from\n * @return {?Object}\n */\nexport function reactInstanceFromDOMElem(elem) {\n  const keys = Object.keys(elem);\n  let len = keys.length;\n  let internalKey;\n  for (var i = 0; i < len; ++i) {\n    if (keys[i].startsWith(__ReactProps.onDomNode)) {\n      internalKey = keys[i];\n      break;\n    }\n  }\n  if (!internalKey) return null;\n  return elem[internalKey];\n}\n\n/**\n * Converts the supplied array of elements into an array of objects\n * each with property node (the live dom element) and reactInstance (the live\n * react component). An optional selection function can be supplied that\n * receives the rendered components key and returns T/F to indicate if the\n * component and element is to be selected\n * @param {Array<Node|HTMLElement|Element>} elems - The array of elements to\n * get their react instances\n * @param {function(key: string): boolean} [selectingFn] - Optional selection\n * function that takes a components key and returns T/F indicating if the\n * component is selected\n * @return {Array<{node: HTMLElement|Element|Node, reactInstance: Object}>}\n */\nexport function reactInstancesFromElements(elems, selectingFn) {\n  const renderedNodes = [];\n  const length = elems.length;\n  let node;\n  let reactInstance;\n  for (var i = 0; i < length; ++i) {\n    node = elems[i];\n    reactInstance = reactInstanceFromDOMElem(node);\n    if (selectingFn && selectingFn(reactInstance.key)) {\n      renderedNodes.push({ node, reactInstance });\n    } else {\n      renderedNodes.push({ node, reactInstance });\n    }\n  }\n  return renderedNodes;\n}\n\n/**\n * Walks the children of a react component to\n * find the one that has the supplied key\n * @param {Object} reactInstance - The react instance who's children are\n * to be descended looking for the one with key\n * @param {string} key - The key of the child to retrieve\n * @return {?Object} - The found child if found\n */\nexport function findChildWithKey(reactInstance, key) {\n  let child = reactInstance.child;\n  while (child) {\n    if (child.key && child.key === key) {\n      return child;\n    }\n    child = child.child;\n  }\n  return null;\n}\n\n/**\n * Attempts the find the redux store from the supplied component\n * @param {Object} startingComponent\n * @return {?Object}\n */\nexport function findReduxStore(startingComponent) {\n  if (!startingComponent) return null;\n  let component;\n  const q = [startingComponent];\n  while (q.length) {\n    component = q.shift();\n    if (component.memoizedProps && component.memoizedProps.store) {\n      return component.memoizedProps.store;\n    }\n    if (component.child) {\n      q.push(component.child);\n    }\n    if (component.sibling) {\n      q.push(component.sibling);\n    }\n  }\n  return null;\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/lib/reactUtils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 309,
    "kind": "variable",
    "name": "__ReactProps",
    "memberof": "lib/reactUtils.js",
    "static": true,
    "longname": "lib/reactUtils.js~__ReactProps",
    "access": "private",
    "export": false,
    "importPath": "lib/reactUtils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "ignore": true,
    "type": {
      "types": [
        "{\"rootContainer\": string, \"internalRoot\": string, \"onDomNode\": string, \"rootHostElemId\": string, \"mProps\": string}"
      ]
    }
  },
  {
    "__docId__": 310,
    "kind": "function",
    "name": "getReactRootHostElem",
    "memberof": "lib/reactUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/reactUtils.js~getReactRootHostElem",
    "access": "public",
    "export": true,
    "importPath": "lib/reactUtils.js",
    "importStyle": "{getReactRootHostElem}",
    "description": "Returns the root host element of an react application (id = react-root)",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "alternativeId",
        "description": "An alternative id to use rather than the default"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 311,
    "kind": "function",
    "name": "getInternalRootOnElem",
    "memberof": "lib/reactUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/reactUtils.js~getInternalRootOnElem",
    "access": "public",
    "export": true,
    "importPath": "lib/reactUtils.js",
    "importStyle": "{getInternalRootOnElem}",
    "description": "Returns the internal root object added by react on the supplied element.\nProperty `_internalRoot`",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Element",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 312,
    "kind": "function",
    "name": "getReactRootContainer",
    "memberof": "lib/reactUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/reactUtils.js~getReactRootContainer",
    "access": "public",
    "export": true,
    "importPath": "lib/reactUtils.js",
    "importStyle": "{getReactRootContainer}",
    "description": "Returns the root container object added by react",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Element",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 313,
    "kind": "function",
    "name": "reactInstanceFromDOMElem",
    "memberof": "lib/reactUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/reactUtils.js~reactInstanceFromDOMElem",
    "access": "public",
    "export": true,
    "importPath": "lib/reactUtils.js",
    "importStyle": "{reactInstanceFromDOMElem}",
    "description": "Returns the react instance object that lives on the live element",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Element",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to have its\nreact instance extracted from"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 314,
    "kind": "function",
    "name": "reactInstancesFromElements",
    "memberof": "lib/reactUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/reactUtils.js~reactInstancesFromElements",
    "access": "public",
    "export": true,
    "importPath": "lib/reactUtils.js",
    "importStyle": "{reactInstancesFromElements}",
    "description": "Converts the supplied array of elements into an array of objects\neach with property node (the live dom element) and reactInstance (the live\nreact component). An optional selection function can be supplied that\nreceives the rendered components key and returns T/F to indicate if the\ncomponent and element is to be selected",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Node|HTMLElement|Element>"
        ],
        "spread": false,
        "optional": false,
        "name": "elems",
        "description": "The array of elements to\nget their react instances"
      },
      {
        "nullable": null,
        "types": [
          "function(key: string): boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "selectingFn",
        "description": "Optional selection\nfunction that takes a components key and returns T/F indicating if the\ncomponent is selected"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<{node: HTMLElement|Element|Node, reactInstance: Object}>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 315,
    "kind": "function",
    "name": "findChildWithKey",
    "memberof": "lib/reactUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/reactUtils.js~findChildWithKey",
    "access": "public",
    "export": true,
    "importPath": "lib/reactUtils.js",
    "importStyle": "{findChildWithKey}",
    "description": "Walks the children of a react component to\nfind the one that has the supplied key",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "reactInstance",
        "description": "The react instance who's children are\nto be descended looking for the one with key"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The key of the child to retrieve"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The found child if found"
    }
  },
  {
    "__docId__": 316,
    "kind": "function",
    "name": "findReduxStore",
    "memberof": "lib/reactUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/reactUtils.js~findReduxStore",
    "access": "public",
    "export": true,
    "importPath": "lib/reactUtils.js",
    "importStyle": "{findReduxStore}",
    "description": "Attempts the find the redux store from the supplied component",
    "lineNumber": 119,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "startingComponent",
        "description": ""
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 317,
    "kind": "file",
    "name": "lib/scrolls.js",
    "content": "import { delay, waitForPredicate } from './delays';\n\n/** @ignore */\nlet isBadFF;\n\n/**\n * Scrolls the supplied element into view.\n *\n * Scroll behavior:\n *  - behavior: smooth\n *  - block: center\n *  - inline: center\n * @param {Element} elem - The element to be scrolled into view\n * @param {Object} [opts] - Optional scroll behavior to be\n * used rather than the default\n * @return {void}\n */\nexport function scrollIntoView(elem, opts) {\n  if (elem == null) return;\n  if (isBadFF == null) {\n    isBadFF = /Firefox\\/57(?:\\.[0-9]+)?/i.test(window.navigator.userAgent);\n  }\n  const defaults = isBadFF\n    ? { behavior: 'smooth', inline: 'center' }\n    : {\n        behavior: 'smooth',\n        block: 'center',\n        inline: 'center',\n      };\n  elem.scrollIntoView(\n    opts && typeof opts === 'object' ? Object.assign(defaults, opts) : defaults\n  );\n}\n\n/**\n * Scrolls the supplied element into view, afterwards waits for the specified delay time\n *\n * Scroll behavior:\n *  - behavior: smooth\n *  - block: center\n *  - inline: center\n * @param {Element|HTMLElement|Node} elem - The element to be scrolled into view with delay\n * @param {number} [delayTime = 1000] - How long is the delay\n * @return {Promise<void>}\n */\nexport function scrollIntoViewWithDelay(elem, delayTime) {\n  scrollIntoView(elem);\n  return delay(delayTime || 1000);\n}\n\n/**\n * Scrolls the supplied element into view and then waits for the supplied predicate function to return true\n *\n * Scroll behavior:\n *  - behavior: smooth\n *  - block: center\n *  - inline: center\n * @param {Element|HTMLElement|Node} elem - The element to be scrolled into view with delay\n * @param {function(): boolean} predicate - Function returning T/F to indicate when the\n * condition waited for has been satisfied\n * @param {{wait: ?WaitForOptions, scrollBehavior: ?Object}} [options] - Options controlling\n * the scroll behavior and how the wait will happen\n * @return {Promise<{predicate: boolean, maxExceeded: boolean}>}\n */\nexport function scrollIntoViewAndWaitFor(elem, predicate, options) {\n  scrollIntoView(elem, options && options.scrollBehavior);\n  return waitForPredicate(predicate, options && options.wait);\n}\n\n/**\n * Scrolls the window by the supplied elements offsetTop. If the elements\n * offsetTop is zero then {@link scrollIntoView} is used\n * @param {Element|HTMLElement|Node} elem - The element who's offsetTop will be used to scroll by\n * @param {string} [behavior] - Options controlling the behavior of window.scrollTo\n * defaults to auto\n * @return {void}\n */\nexport function scrollToElemOffset(elem, behavior) {\n  if (elem.offsetTop === 0) {\n    return scrollIntoView(elem);\n  }\n  window.scrollTo({\n    behavior: behavior || 'auto',\n    left: 0,\n    top: elem.offsetTop,\n  });\n}\n\n/**\n * Scrolls the window by the supplied elements offsetTop. If the elements\n * offsetTop is zero then {@link scrollIntoView} is used\n * @param {Element|HTMLElement|Node} elem - The element who's offsetTop will be used to scroll by\n * @param {number} [delayTime = 1000] - How long is the delay\n * @return {Promise<void>}\n */\nexport function scrollToElemOffsetWithDelay(elem, delayTime) {\n  scrollToElemOffset(elem);\n  return delay(delayTime || 1000);\n}\n\n/**\n * Scrolls down by the elements height\n * @param {Element|HTMLElement|Node} elem - The element who's height\n * to scroll down by\n * @return {void}\n */\nexport function scrollDownByElemHeight(elem) {\n  if (!elem) return;\n  const rect = elem.getBoundingClientRect();\n  scrollWindowBy(0, rect.height + elem.offsetHeight);\n}\n\n/**\n * Scrolls down by supplied elements height and then waits for\n * the supplied delay time.\n * @param {Element|HTMLElement|Node} elem - The element to be\n * @param {number} [delayTime = 1000] - How long is the delay\n * @return {Promise<void>}\n */\nexport function scrollDownByElemHeightWithDelay(elem, delayTime) {\n  scrollDownByElemHeight(elem);\n  return delay(delayTime || 1000);\n}\n\n/**\n * Determines if we can scroll down any more\n * @return {boolean} - T/F indicating if we can scroll down some more\n */\nexport function canScrollDownMore() {\n  return (\n    window.scrollY + window.innerHeight <\n    Math.max(\n      document.body.scrollHeight,\n      document.body.offsetHeight,\n      document.body.clientHeight,\n      document.documentElement.scrollHeight,\n      document.documentElement.offsetHeight,\n      document.documentElement.clientHeight\n    )\n  );\n}\n\n/**\n * Determines if we can scroll up any more\n * @return {boolean} - T/F indicating if we can scroll up some more\n */\nexport function canScrollUpMore() {\n  return window.scrollY !== 0;\n}\n\n/**\n * Scrolls the window by the supplied x and y amount\n * @param {number} x - Amount to scroll in the x direction\n * @param {number} y - Amount to scroll in the y direction\n */\nexport function scrollWindowBy(x, y) {\n  window.scrollBy(x, y);\n}\n\n/**\n * Scrolls the window by the supplied x and y amount smoothly\n * @param {number} x - Amount to scroll in the x direction\n * @param {number} y - Amount to scroll in the y direction\n */\nexport function smoothScrollWindowBy(x, y) {\n  window.scrollBy({ left: x, top: y, behavior: 'smooth' });\n}\n\n/**\n * Scrolls the window down by the supplied amount\n * @param {number} amount - Amount to scroll the down by\n */\nexport function scrollWindowDownBy(amount) {\n  scrollWindowBy(0, amount);\n}\n\n/**\n * Scrolls the window down by the supplied amount smoothly\n * @param {number} amount - Amount to scroll the down by\n */\nexport function smoothScrollWindowDownBy(amount) {\n  smoothScrollWindowBy(0, amount);\n}\n\n/**\n * Scrolls the window by the supplied x and y amount\n * @param {number} x - Amount to scroll in the x direction\n * @param {number} y - Amount to scroll in the y direction\n * @param {number} [delayTime = 1500]\n * @return {Promise<void>}\n */\nexport function scrollWindowByWithDelay(x, y, delayTime) {\n  scrollWindowBy(x, y);\n  return delay(delayTime || 1500);\n}\n\n/**\n * Scrolls the window down by the supplied amount\n * @param {number} amount - Amount to scroll the down by\n * @param {number} [delayTime = 1500]\n * @return {Promise<void>}\n */\nexport function scrollWindowDownByWithDelay(amount, delayTime) {\n  scrollWindowBy(0, amount);\n  return delay(delayTime || 1500);\n}\n\n/**\n * Creates and returns an object that calculates the scroll amount, up/down or left/right,\n * based on dividing the scroll width/height by the supplied desired times to completely\n * scroll the page, defaults to 10.\n *\n * The calculation also takes into account the fact that the height or width of\n * the document may change and reacts to those changes such that the returned scroll\n * amount is always proportional to the documents current maximum scroll height or width\n *\n * @param {number} [desiredTimesToScroll = 10] - How many scrolls until the maximum scroll\n * position is reached\n * @return {{timesToScroll: number, scrollUpDownAmount: number, scrollLeftRightAmount: number}}\n */\nexport function createScrollAmount(desiredTimesToScroll) {\n  let docsBoundingCRect = document.documentElement.getBoundingClientRect();\n  const getMaxUpDown = () =>\n    Math.max(\n      document.scrollingElement.scrollHeight,\n      document.documentElement.scrollHeight,\n      docsBoundingCRect.bottom\n    );\n  const getMaxLeftRight = () =>\n    Math.max(\n      document.scrollingElement.scrollWidth,\n      document.documentElement.scrollWidth,\n      docsBoundingCRect.right\n    );\n  let lastUpDownMax = getMaxUpDown();\n  let lastLeftRightMax = getMaxLeftRight();\n  return {\n    timesToScroll: desiredTimesToScroll || 10,\n    get scrollUpDownAmount() {\n      let currentMax = getMaxUpDown();\n      if (currentMax !== lastUpDownMax) {\n        docsBoundingCRect = document.documentElement.getBoundingClientRect();\n        currentMax = getMaxUpDown();\n        lastUpDownMax = currentMax;\n      }\n      return currentMax / this.timesToScroll;\n    },\n    get scrollLeftRightAmount() {\n      let currentMax = getMaxLeftRight();\n      if (currentMax !== lastLeftRightMax) {\n        docsBoundingCRect = document.documentElement.getBoundingClientRect();\n        currentMax = getMaxLeftRight();\n        lastLeftRightMax = currentMax;\n      }\n      return currentMax / this.timesToScroll;\n    },\n  };\n}\n\n/**\n * @typedef {Object} Scroller\n * @property {number} timesToScroll - the desired number of times to be scrolled\n * @property {number} scrollUpDownAmount - The current amount to be scrolled up or down\n * @property {number} scrollLeftRightAmount - The current amount to be scrolled left or right\n * @property {function(): void} scrollRight - Scroll the page right\n * @property {function(): void} scrollLeft - Scroll the page left\n * @property {function(): void} scrollUp - Scroll the page up\n * @property {function(): void} scrollDown - Scroll the page down\n * @property {function(): boolean} canScrollDownMore - Can the page be scrolled some more down\n * @property {function(): boolean} canScrollUpMore - Can the page be scrolled some more up\n */\n\n/**\n * Creates and returns an object for scrolling the page up/down and left/right.\n * The number of times a respective scroll has occurred is also tracked.\n *\n * For additional details see the documentation of {@link createScrollAmount}\n * as the amount of scroll applied is determined the object it returns.\n *\n * @param {number} [timesToScroll = 10] - How many scrolls until the maximum scroll\n * position is reached\n * @return {Scroller}\n */\nexport function createScroller(timesToScroll) {\n  const scrollAmount = createScrollAmount(timesToScroll || 10);\n  return Object.assign(\n    {\n      canScrollDownMore,\n      canScrollUpMore,\n      scrollDown() {\n        scrollWindowBy(0, this.scrollUpDownAmount);\n      },\n      scrollUp() {\n        scrollWindowBy(0, -this.scrollUpDownAmount);\n      },\n      scrollLeft() {\n        scrollWindowBy(-this.scrollLeftRightAmount, 0);\n      },\n      scrollRight() {\n        scrollWindowBy(this.scrollLeftRightAmount, 0);\n      },\n    },\n    scrollAmount\n  );\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/lib/scrolls.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 318,
    "kind": "function",
    "name": "scrollIntoView",
    "memberof": "lib/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/scrolls.js~scrollIntoView",
    "access": "public",
    "export": true,
    "importPath": "lib/scrolls.js",
    "importStyle": "{scrollIntoView}",
    "description": "Scrolls the supplied element into view.\n\nScroll behavior:\n - behavior: smooth\n - block: center\n - inline: center",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be scrolled into view"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": "Optional scroll behavior to be\nused rather than the default"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 319,
    "kind": "function",
    "name": "scrollIntoViewWithDelay",
    "memberof": "lib/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/scrolls.js~scrollIntoViewWithDelay",
    "access": "public",
    "export": true,
    "importPath": "lib/scrolls.js",
    "importStyle": "{scrollIntoViewWithDelay}",
    "description": "Scrolls the supplied element into view, afterwards waits for the specified delay time\n\nScroll behavior:\n - behavior: smooth\n - block: center\n - inline: center",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "HTMLElement",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be scrolled into view with delay"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "delayTime",
        "description": "How long is the delay"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 320,
    "kind": "function",
    "name": "scrollIntoViewAndWaitFor",
    "memberof": "lib/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/scrolls.js~scrollIntoViewAndWaitFor",
    "access": "public",
    "export": true,
    "importPath": "lib/scrolls.js",
    "importStyle": "{scrollIntoViewAndWaitFor}",
    "description": "Scrolls the supplied element into view and then waits for the supplied predicate function to return true\n\nScroll behavior:\n - behavior: smooth\n - block: center\n - inline: center",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "HTMLElement",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be scrolled into view with delay"
      },
      {
        "nullable": null,
        "types": [
          "function(): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "predicate",
        "description": "Function returning T/F to indicate when the\ncondition waited for has been satisfied"
      },
      {
        "nullable": null,
        "types": [
          "{wait: ?WaitForOptions, scrollBehavior: ?Object}"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Options controlling\nthe scroll behavior and how the wait will happen"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<{predicate: boolean, maxExceeded: boolean}>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 321,
    "kind": "function",
    "name": "scrollToElemOffset",
    "memberof": "lib/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/scrolls.js~scrollToElemOffset",
    "access": "public",
    "export": true,
    "importPath": "lib/scrolls.js",
    "importStyle": "{scrollToElemOffset}",
    "description": "Scrolls the window by the supplied elements offsetTop. If the elements\noffsetTop is zero then {@link scrollIntoView} is used",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "HTMLElement",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element who's offsetTop will be used to scroll by"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "behavior",
        "description": "Options controlling the behavior of window.scrollTo\ndefaults to auto"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 322,
    "kind": "function",
    "name": "scrollToElemOffsetWithDelay",
    "memberof": "lib/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/scrolls.js~scrollToElemOffsetWithDelay",
    "access": "public",
    "export": true,
    "importPath": "lib/scrolls.js",
    "importStyle": "{scrollToElemOffsetWithDelay}",
    "description": "Scrolls the window by the supplied elements offsetTop. If the elements\noffsetTop is zero then {@link scrollIntoView} is used",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "HTMLElement",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element who's offsetTop will be used to scroll by"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "delayTime",
        "description": "How long is the delay"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 323,
    "kind": "function",
    "name": "scrollDownByElemHeight",
    "memberof": "lib/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/scrolls.js~scrollDownByElemHeight",
    "access": "public",
    "export": true,
    "importPath": "lib/scrolls.js",
    "importStyle": "{scrollDownByElemHeight}",
    "description": "Scrolls down by the elements height",
    "lineNumber": 107,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "HTMLElement",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element who's height\nto scroll down by"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 324,
    "kind": "function",
    "name": "scrollDownByElemHeightWithDelay",
    "memberof": "lib/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/scrolls.js~scrollDownByElemHeightWithDelay",
    "access": "public",
    "export": true,
    "importPath": "lib/scrolls.js",
    "importStyle": "{scrollDownByElemHeightWithDelay}",
    "description": "Scrolls down by supplied elements height and then waits for\nthe supplied delay time.",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "HTMLElement",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "delayTime",
        "description": "How long is the delay"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 325,
    "kind": "function",
    "name": "canScrollDownMore",
    "memberof": "lib/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/scrolls.js~canScrollDownMore",
    "access": "public",
    "export": true,
    "importPath": "lib/scrolls.js",
    "importStyle": "{canScrollDownMore}",
    "description": "Determines if we can scroll down any more",
    "lineNumber": 129,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "T/F indicating if we can scroll down some more"
    },
    "params": []
  },
  {
    "__docId__": 326,
    "kind": "function",
    "name": "canScrollUpMore",
    "memberof": "lib/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/scrolls.js~canScrollUpMore",
    "access": "public",
    "export": true,
    "importPath": "lib/scrolls.js",
    "importStyle": "{canScrollUpMore}",
    "description": "Determines if we can scroll up any more",
    "lineNumber": 147,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "T/F indicating if we can scroll up some more"
    },
    "params": []
  },
  {
    "__docId__": 327,
    "kind": "function",
    "name": "scrollWindowBy",
    "memberof": "lib/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/scrolls.js~scrollWindowBy",
    "access": "public",
    "export": true,
    "importPath": "lib/scrolls.js",
    "importStyle": "{scrollWindowBy}",
    "description": "Scrolls the window by the supplied x and y amount",
    "lineNumber": 156,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Amount to scroll in the x direction"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Amount to scroll in the y direction"
      }
    ],
    "return": null
  },
  {
    "__docId__": 328,
    "kind": "function",
    "name": "smoothScrollWindowBy",
    "memberof": "lib/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/scrolls.js~smoothScrollWindowBy",
    "access": "public",
    "export": true,
    "importPath": "lib/scrolls.js",
    "importStyle": "{smoothScrollWindowBy}",
    "description": "Scrolls the window by the supplied x and y amount smoothly",
    "lineNumber": 165,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Amount to scroll in the x direction"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Amount to scroll in the y direction"
      }
    ],
    "return": null
  },
  {
    "__docId__": 329,
    "kind": "function",
    "name": "scrollWindowDownBy",
    "memberof": "lib/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/scrolls.js~scrollWindowDownBy",
    "access": "public",
    "export": true,
    "importPath": "lib/scrolls.js",
    "importStyle": "{scrollWindowDownBy}",
    "description": "Scrolls the window down by the supplied amount",
    "lineNumber": 173,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "Amount to scroll the down by"
      }
    ],
    "return": null
  },
  {
    "__docId__": 330,
    "kind": "function",
    "name": "smoothScrollWindowDownBy",
    "memberof": "lib/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/scrolls.js~smoothScrollWindowDownBy",
    "access": "public",
    "export": true,
    "importPath": "lib/scrolls.js",
    "importStyle": "{smoothScrollWindowDownBy}",
    "description": "Scrolls the window down by the supplied amount smoothly",
    "lineNumber": 181,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "Amount to scroll the down by"
      }
    ],
    "return": null
  },
  {
    "__docId__": 331,
    "kind": "function",
    "name": "scrollWindowByWithDelay",
    "memberof": "lib/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/scrolls.js~scrollWindowByWithDelay",
    "access": "public",
    "export": true,
    "importPath": "lib/scrolls.js",
    "importStyle": "{scrollWindowByWithDelay}",
    "description": "Scrolls the window by the supplied x and y amount",
    "lineNumber": 192,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Amount to scroll in the x direction"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Amount to scroll in the y direction"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1500",
        "defaultRaw": 1500,
        "name": "delayTime",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 332,
    "kind": "function",
    "name": "scrollWindowDownByWithDelay",
    "memberof": "lib/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/scrolls.js~scrollWindowDownByWithDelay",
    "access": "public",
    "export": true,
    "importPath": "lib/scrolls.js",
    "importStyle": "{scrollWindowDownByWithDelay}",
    "description": "Scrolls the window down by the supplied amount",
    "lineNumber": 203,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "Amount to scroll the down by"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1500",
        "defaultRaw": 1500,
        "name": "delayTime",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 333,
    "kind": "function",
    "name": "createScrollAmount",
    "memberof": "lib/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/scrolls.js~createScrollAmount",
    "access": "public",
    "export": true,
    "importPath": "lib/scrolls.js",
    "importStyle": "{createScrollAmount}",
    "description": "Creates and returns an object that calculates the scroll amount, up/down or left/right,\nbased on dividing the scroll width/height by the supplied desired times to completely\nscroll the page, defaults to 10.\n\nThe calculation also takes into account the fact that the height or width of\nthe document may change and reacts to those changes such that the returned scroll\namount is always proportional to the documents current maximum scroll height or width",
    "lineNumber": 221,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 10",
        "defaultRaw": 10,
        "name": "desiredTimesToScroll",
        "description": "How many scrolls until the maximum scroll\nposition is reached"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{timesToScroll: number, scrollUpDownAmount: number, scrollLeftRightAmount: number}"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 334,
    "kind": "typedef",
    "name": "Scroller",
    "memberof": "lib/scrolls.js",
    "static": true,
    "longname": "lib/scrolls.js~Scroller",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "timesToScroll",
        "description": "the desired number of times to be scrolled"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "scrollUpDownAmount",
        "description": "The current amount to be scrolled up or down"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "scrollLeftRightAmount",
        "description": "The current amount to be scrolled left or right"
      },
      {
        "nullable": null,
        "types": [
          "function(): void"
        ],
        "spread": false,
        "optional": false,
        "name": "scrollRight",
        "description": "Scroll the page right"
      },
      {
        "nullable": null,
        "types": [
          "function(): void"
        ],
        "spread": false,
        "optional": false,
        "name": "scrollLeft",
        "description": "Scroll the page left"
      },
      {
        "nullable": null,
        "types": [
          "function(): void"
        ],
        "spread": false,
        "optional": false,
        "name": "scrollUp",
        "description": "Scroll the page up"
      },
      {
        "nullable": null,
        "types": [
          "function(): void"
        ],
        "spread": false,
        "optional": false,
        "name": "scrollDown",
        "description": "Scroll the page down"
      },
      {
        "nullable": null,
        "types": [
          "function(): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "canScrollDownMore",
        "description": "Can the page be scrolled some more down"
      },
      {
        "nullable": null,
        "types": [
          "function(): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "canScrollUpMore",
        "description": "Can the page be scrolled some more up"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Scroller"
    }
  },
  {
    "__docId__": 335,
    "kind": "function",
    "name": "createScroller",
    "memberof": "lib/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/scrolls.js~createScroller",
    "access": "public",
    "export": true,
    "importPath": "lib/scrolls.js",
    "importStyle": "{createScroller}",
    "description": "Creates and returns an object for scrolling the page up/down and left/right.\nThe number of times a respective scroll has occurred is also tracked.\n\nFor additional details see the documentation of {@link createScrollAmount}\nas the amount of scroll applied is determined the object it returns.",
    "lineNumber": 284,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 10",
        "defaultRaw": 10,
        "name": "timesToScroll",
        "description": "How many scrolls until the maximum scroll\nposition is reached"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Scroller"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 336,
    "kind": "file",
    "name": "lib/strings.js",
    "content": "/** @ignore */\nconst __camelCaseRe = /(-|_|\\s)+(.)?/g;\n/** @ignore */\nconst __camelCaseReplacer = (match, sep, c) => (c ? c.toUpperCase() : '');\n\n/**\n * Attempts to convert the supplied string into camel case\n * @param {string} str\n * @return {string}\n */\nexport function camelCase(str) {\n  return str.replace(__camelCaseRe, __camelCaseReplacer);\n}\n\n/**\n * Attempts to capitalize the supplied string\n * @param {string} str\n * @return {string}\n */\nexport function capitalize(str) {\n  return str.substr(0, 1).toUpperCase() + str.substring(1).toLowerCase();\n}\n\n/** @ignore */\nconst __ccToDashDelimRe1 = /[_\\s]+/g;\n/** @ignore */\nconst __ccToDashDelimRe2 = /([A-Z])/g;\n/** @ignore */\nconst __ccToDashDelimRe3 = /-+/g;\n\n/**\n * Attempts to convert the supplied camel case string into dash delimited string\n * @param {?string} str\n * @return {?string}\n */\nexport function camelCaseToDashDelim(str) {\n  if (str) {\n    return str\n      .trim()\n      .replace(__ccToDashDelimRe1, '-')\n      .replace(__ccToDashDelimRe2, '-$1')\n      .replace(__ccToDashDelimRe3, '-')\n      .toLowerCase();\n  }\n  return str;\n}\n\n/** @ignore */\nconst __ccToUnderDelimRe1 = /([a-z\\d])([A-Z]+)/g;\n/** @ignore */\nconst __ccToUnderDelimRe2 = /([A-Z\\d]+)([A-Z][a-z])/g;\n/** @ignore */\nconst __ccToUnderDelimRe3 = /[-\\s]+/g;\n\n/**\n * Attempts to convert the supplied camel case string into an underscore delimited string\n * @param {?string} str\n * @return {?string}\n */\nexport function camelCaseToUnderscoreDelim(str) {\n  if (str) {\n    str\n      .trim()\n      .replace(__ccToUnderDelimRe1, '$1_$2')\n      .replace(__ccToUnderDelimRe2, '$1_$2')\n      .replace(__ccToUnderDelimRe3, '_')\n      .toLowerCase();\n  }\n  return str;\n}\n\n/** @ignore */\nconst __titleCaseRe = /(^[a-z]| [a-z]|-[a-z]|_[a-z])/g;\n/** @ignore */\nconst __titleCaseReplacer = value => value.toUpperCase();\n\n/**\n * Attempts to convert the supplied string into title case\n * @param {?string} str\n * @return {?string}\n */\nexport function titleCase(str) {\n  if (str) {\n    return str.replace(__titleCaseRe, __titleCaseReplacer);\n  }\n  return str;\n}\n\n/** @ignore */\nconst __collapseWhitespaceRe1 = /[\\s\\xa0]+/g;\n/** @ignore */\nconst __collapseWhitespaceRe2 = /^\\s+|\\s+$/g;\n\n/**\n * Attempts to collapse all extra white space into a single white space character\n * @param {string} str\n * @return {string}\n */\nexport function collapseWhitespace(str) {\n  return str\n    .replace(__collapseWhitespaceRe1, ' ')\n    .replace(__collapseWhitespaceRe2, '');\n}\n\n/**\n * Returns the string between the left and right string\n * @param {string} str\n * @param {string} left\n * @param {string} right\n * @return {string}\n */\nexport function stringBetween(str, left, right) {\n  const startPos = str.indexOf(left);\n  const endPos = str.indexOf(right, startPos + left.length);\n  if (endPos === -1 && right != null) {\n    return '';\n  } else if (endPos === -1 && right == null) {\n    return str.substring(startPos + left.length);\n  }\n  return str.slice(startPos + left.length, endPos);\n}\n\n/** @ignore */\nconst __isAlphaRe = /[^a-z\\xDF-\\xFF]|^$/;\n\n/**\n * Returns T/F indicating if the supplied string is only alpha characters\n * @param {?string} str\n * @return {boolean}\n */\nexport function isAlpha(str) {\n  if (str) {\n    return !__isAlphaRe.test(str.toLowerCase());\n  }\n  return false;\n}\n\n/** @ignore */\nconst __isAlphaNumericRe = /[^0-9a-z\\xDF-\\xFF]/;\n\n/**\n * Returns T/F indicating if the supplied string is only alpha numeric characters\n * @param {?string} str\n * @return {boolean}\n */\nexport function isAlphaNumeric(str) {\n  if (str) {\n    return !__isAlphaNumericRe.test(str.toLowerCase());\n  }\n  return false;\n}\n\n/** @ignore */\nconst __isEmptyRe = /^[\\s\\xa0]*$/;\n\n/**\n * Returns T/F indicating if the supplied string is truly an empty string\n * @param {?string} str\n * @return {boolean}\n */\nexport function isEmptyString(str) {\n  return str == null ? true : __isEmptyRe.test(str);\n}\n\n/**\n * Returns T/F indicating if the supplied string is only lowercase alpha characters\n * @param {string} str\n * @return {boolean}\n */\nexport function isLower(str) {\n  return isAlpha(str) && str.toLowerCase() === str;\n}\n\n/** @ignore */\nconst __isNumericRe = /[^0-9]/;\n\n/**\n * Returns T/F indicating if the supplied string only contains numeric characters\n * @param {?string} str\n * @return {boolean}\n */\nexport function isNumeric(str) {\n  return str != null ? !__isNumericRe.test(str) : false;\n}\n\n/**\n * Returns T/F indicating if the supplied string is only uppercase alpha characters\n * @param {?string} str\n * @return {boolean}\n */\nexport function isUpper(str) {\n  return isAlpha(str) && str.toUpperCase() === str;\n}\n\n/**\n * Attempts to convert the supplied string to boolean (true, yes, on, 1)\n * @param {string|boolean|number} str\n * @return {boolean}\n */\nexport function toBoolean(str) {\n  if (typeof str === 'string') {\n    const s = str.toLowerCase();\n    return s === 'true' || s === 'yes' || s === 'on' || s === '1';\n  }\n  return str === true || str === 1;\n}\n\n/**\n * Attempts to convert the supplied string to a float\n * @param {string} str\n * @param {number} [precision]\n * @return {number}\n */\nexport function toFloat(str, precision) {\n  const num = parseFloat(str);\n  if (precision) {\n    return parseFloat(num.toFixed(precision));\n  }\n  return num;\n}\n\n/**\n * Attempts to convert the supplied string to a integer\n * @param {string} str\n * @param {number} [base = 10]\n * @return {number}\n */\nexport function toInt(str, base = 10) {\n  return parseInt(str, base);\n}\n\n/**\n * Returns the substring from the last index of the supplied needle\n * @param {string} str\n * @param {string} needle - The substring to be searched for\n * @param {SubstringArgs} [opts]\n * @return {string}\n */\nexport function substringFromLastIndexOf(\n  str,\n  needle,\n  { searchFrom, include } = {}\n) {\n  const idx = str.lastIndexOf(needle, searchFrom);\n  return str.substring(idx + (include ? 0 : needle.length));\n}\n\n/**\n * Returns the substring from the index of the supplied needle\n * @param {string} str\n * @param {string} needle - The substring to be searched for\n * @param {SubstringArgs} [opts]\n * @return {string}\n */\nexport function substringFromIndexOf(\n  str,\n  needle,\n  { searchFrom, include } = {}\n) {\n  const idx = str.indexOf(needle, searchFrom);\n  return str.substring(idx + (include ? 0 : needle.length));\n}\n\n/**\n * @typedef {Object} SubstringArgs\n * @property {number} [searchFrom] - Index to search from for the supplied substring\n * @property {boolean} [include] - Should the supplied substring be included in the returned substring\n **/\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/lib/strings.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 337,
    "kind": "variable",
    "name": "__camelCaseRe",
    "memberof": "lib/strings.js",
    "static": true,
    "longname": "lib/strings.js~__camelCaseRe",
    "access": "private",
    "export": false,
    "importPath": "lib/strings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "ignore": true,
    "type": {
      "types": [
        "undefined"
      ]
    }
  },
  {
    "__docId__": 338,
    "kind": "function",
    "name": "__camelCaseReplacer",
    "memberof": "lib/strings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/strings.js~__camelCaseReplacer",
    "access": "private",
    "export": false,
    "importPath": "lib/strings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "ignore": true,
    "params": [
      {
        "name": "match",
        "types": [
          "*"
        ]
      },
      {
        "name": "sep",
        "types": [
          "*"
        ]
      },
      {
        "name": "c",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 339,
    "kind": "function",
    "name": "camelCase",
    "memberof": "lib/strings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/strings.js~camelCase",
    "access": "public",
    "export": true,
    "importPath": "lib/strings.js",
    "importStyle": "{camelCase}",
    "description": "Attempts to convert the supplied string into camel case",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 340,
    "kind": "function",
    "name": "capitalize",
    "memberof": "lib/strings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/strings.js~capitalize",
    "access": "public",
    "export": true,
    "importPath": "lib/strings.js",
    "importStyle": "{capitalize}",
    "description": "Attempts to capitalize the supplied string",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 341,
    "kind": "variable",
    "name": "__ccToDashDelimRe1",
    "memberof": "lib/strings.js",
    "static": true,
    "longname": "lib/strings.js~__ccToDashDelimRe1",
    "access": "private",
    "export": false,
    "importPath": "lib/strings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "ignore": true,
    "type": {
      "types": [
        "undefined"
      ]
    }
  },
  {
    "__docId__": 342,
    "kind": "variable",
    "name": "__ccToDashDelimRe2",
    "memberof": "lib/strings.js",
    "static": true,
    "longname": "lib/strings.js~__ccToDashDelimRe2",
    "access": "private",
    "export": false,
    "importPath": "lib/strings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "ignore": true,
    "type": {
      "types": [
        "undefined"
      ]
    }
  },
  {
    "__docId__": 343,
    "kind": "variable",
    "name": "__ccToDashDelimRe3",
    "memberof": "lib/strings.js",
    "static": true,
    "longname": "lib/strings.js~__ccToDashDelimRe3",
    "access": "private",
    "export": false,
    "importPath": "lib/strings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "ignore": true,
    "type": {
      "types": [
        "undefined"
      ]
    }
  },
  {
    "__docId__": 344,
    "kind": "function",
    "name": "camelCaseToDashDelim",
    "memberof": "lib/strings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/strings.js~camelCaseToDashDelim",
    "access": "public",
    "export": true,
    "importPath": "lib/strings.js",
    "importStyle": "{camelCaseToDashDelim}",
    "description": "Attempts to convert the supplied camel case string into dash delimited string",
    "lineNumber": 36,
    "params": [
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 345,
    "kind": "variable",
    "name": "__ccToUnderDelimRe1",
    "memberof": "lib/strings.js",
    "static": true,
    "longname": "lib/strings.js~__ccToUnderDelimRe1",
    "access": "private",
    "export": false,
    "importPath": "lib/strings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 49,
    "ignore": true,
    "type": {
      "types": [
        "undefined"
      ]
    }
  },
  {
    "__docId__": 346,
    "kind": "variable",
    "name": "__ccToUnderDelimRe2",
    "memberof": "lib/strings.js",
    "static": true,
    "longname": "lib/strings.js~__ccToUnderDelimRe2",
    "access": "private",
    "export": false,
    "importPath": "lib/strings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 51,
    "ignore": true,
    "type": {
      "types": [
        "undefined"
      ]
    }
  },
  {
    "__docId__": 347,
    "kind": "variable",
    "name": "__ccToUnderDelimRe3",
    "memberof": "lib/strings.js",
    "static": true,
    "longname": "lib/strings.js~__ccToUnderDelimRe3",
    "access": "private",
    "export": false,
    "importPath": "lib/strings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 53,
    "ignore": true,
    "type": {
      "types": [
        "undefined"
      ]
    }
  },
  {
    "__docId__": 348,
    "kind": "function",
    "name": "camelCaseToUnderscoreDelim",
    "memberof": "lib/strings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/strings.js~camelCaseToUnderscoreDelim",
    "access": "public",
    "export": true,
    "importPath": "lib/strings.js",
    "importStyle": "{camelCaseToUnderscoreDelim}",
    "description": "Attempts to convert the supplied camel case string into an underscore delimited string",
    "lineNumber": 60,
    "params": [
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 349,
    "kind": "variable",
    "name": "__titleCaseRe",
    "memberof": "lib/strings.js",
    "static": true,
    "longname": "lib/strings.js~__titleCaseRe",
    "access": "private",
    "export": false,
    "importPath": "lib/strings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 73,
    "ignore": true,
    "type": {
      "types": [
        "undefined"
      ]
    }
  },
  {
    "__docId__": 350,
    "kind": "function",
    "name": "__titleCaseReplacer",
    "memberof": "lib/strings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/strings.js~__titleCaseReplacer",
    "access": "private",
    "export": false,
    "importPath": "lib/strings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 75,
    "ignore": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 351,
    "kind": "function",
    "name": "titleCase",
    "memberof": "lib/strings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/strings.js~titleCase",
    "access": "public",
    "export": true,
    "importPath": "lib/strings.js",
    "importStyle": "{titleCase}",
    "description": "Attempts to convert the supplied string into title case",
    "lineNumber": 82,
    "params": [
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 352,
    "kind": "variable",
    "name": "__collapseWhitespaceRe1",
    "memberof": "lib/strings.js",
    "static": true,
    "longname": "lib/strings.js~__collapseWhitespaceRe1",
    "access": "private",
    "export": false,
    "importPath": "lib/strings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 90,
    "ignore": true,
    "type": {
      "types": [
        "undefined"
      ]
    }
  },
  {
    "__docId__": 353,
    "kind": "variable",
    "name": "__collapseWhitespaceRe2",
    "memberof": "lib/strings.js",
    "static": true,
    "longname": "lib/strings.js~__collapseWhitespaceRe2",
    "access": "private",
    "export": false,
    "importPath": "lib/strings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 92,
    "ignore": true,
    "type": {
      "types": [
        "undefined"
      ]
    }
  },
  {
    "__docId__": 354,
    "kind": "function",
    "name": "collapseWhitespace",
    "memberof": "lib/strings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/strings.js~collapseWhitespace",
    "access": "public",
    "export": true,
    "importPath": "lib/strings.js",
    "importStyle": "{collapseWhitespace}",
    "description": "Attempts to collapse all extra white space into a single white space character",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 355,
    "kind": "function",
    "name": "stringBetween",
    "memberof": "lib/strings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/strings.js~stringBetween",
    "access": "public",
    "export": true,
    "importPath": "lib/strings.js",
    "importStyle": "{stringBetween}",
    "description": "Returns the string between the left and right string",
    "lineNumber": 112,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "left",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "right",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 356,
    "kind": "variable",
    "name": "__isAlphaRe",
    "memberof": "lib/strings.js",
    "static": true,
    "longname": "lib/strings.js~__isAlphaRe",
    "access": "private",
    "export": false,
    "importPath": "lib/strings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 124,
    "ignore": true,
    "type": {
      "types": [
        "undefined"
      ]
    }
  },
  {
    "__docId__": 357,
    "kind": "function",
    "name": "isAlpha",
    "memberof": "lib/strings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/strings.js~isAlpha",
    "access": "public",
    "export": true,
    "importPath": "lib/strings.js",
    "importStyle": "{isAlpha}",
    "description": "Returns T/F indicating if the supplied string is only alpha characters",
    "lineNumber": 131,
    "params": [
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 358,
    "kind": "variable",
    "name": "__isAlphaNumericRe",
    "memberof": "lib/strings.js",
    "static": true,
    "longname": "lib/strings.js~__isAlphaNumericRe",
    "access": "private",
    "export": false,
    "importPath": "lib/strings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 139,
    "ignore": true,
    "type": {
      "types": [
        "undefined"
      ]
    }
  },
  {
    "__docId__": 359,
    "kind": "function",
    "name": "isAlphaNumeric",
    "memberof": "lib/strings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/strings.js~isAlphaNumeric",
    "access": "public",
    "export": true,
    "importPath": "lib/strings.js",
    "importStyle": "{isAlphaNumeric}",
    "description": "Returns T/F indicating if the supplied string is only alpha numeric characters",
    "lineNumber": 146,
    "params": [
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 360,
    "kind": "variable",
    "name": "__isEmptyRe",
    "memberof": "lib/strings.js",
    "static": true,
    "longname": "lib/strings.js~__isEmptyRe",
    "access": "private",
    "export": false,
    "importPath": "lib/strings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 154,
    "ignore": true,
    "type": {
      "types": [
        "undefined"
      ]
    }
  },
  {
    "__docId__": 361,
    "kind": "function",
    "name": "isEmptyString",
    "memberof": "lib/strings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/strings.js~isEmptyString",
    "access": "public",
    "export": true,
    "importPath": "lib/strings.js",
    "importStyle": "{isEmptyString}",
    "description": "Returns T/F indicating if the supplied string is truly an empty string",
    "lineNumber": 161,
    "params": [
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 362,
    "kind": "function",
    "name": "isLower",
    "memberof": "lib/strings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/strings.js~isLower",
    "access": "public",
    "export": true,
    "importPath": "lib/strings.js",
    "importStyle": "{isLower}",
    "description": "Returns T/F indicating if the supplied string is only lowercase alpha characters",
    "lineNumber": 170,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 363,
    "kind": "variable",
    "name": "__isNumericRe",
    "memberof": "lib/strings.js",
    "static": true,
    "longname": "lib/strings.js~__isNumericRe",
    "access": "private",
    "export": false,
    "importPath": "lib/strings.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 175,
    "ignore": true,
    "type": {
      "types": [
        "undefined"
      ]
    }
  },
  {
    "__docId__": 364,
    "kind": "function",
    "name": "isNumeric",
    "memberof": "lib/strings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/strings.js~isNumeric",
    "access": "public",
    "export": true,
    "importPath": "lib/strings.js",
    "importStyle": "{isNumeric}",
    "description": "Returns T/F indicating if the supplied string only contains numeric characters",
    "lineNumber": 182,
    "params": [
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 365,
    "kind": "function",
    "name": "isUpper",
    "memberof": "lib/strings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/strings.js~isUpper",
    "access": "public",
    "export": true,
    "importPath": "lib/strings.js",
    "importStyle": "{isUpper}",
    "description": "Returns T/F indicating if the supplied string is only uppercase alpha characters",
    "lineNumber": 191,
    "params": [
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 366,
    "kind": "function",
    "name": "toBoolean",
    "memberof": "lib/strings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/strings.js~toBoolean",
    "access": "public",
    "export": true,
    "importPath": "lib/strings.js",
    "importStyle": "{toBoolean}",
    "description": "Attempts to convert the supplied string to boolean (true, yes, on, 1)",
    "lineNumber": 200,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "boolean",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 367,
    "kind": "function",
    "name": "toFloat",
    "memberof": "lib/strings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/strings.js~toFloat",
    "access": "public",
    "export": true,
    "importPath": "lib/strings.js",
    "importStyle": "{toFloat}",
    "description": "Attempts to convert the supplied string to a float",
    "lineNumber": 214,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "precision",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 368,
    "kind": "function",
    "name": "toInt",
    "memberof": "lib/strings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/strings.js~toInt",
    "access": "public",
    "export": true,
    "importPath": "lib/strings.js",
    "importStyle": "{toInt}",
    "description": "Attempts to convert the supplied string to a integer",
    "lineNumber": 228,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 10",
        "defaultRaw": 10,
        "name": "base",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 369,
    "kind": "function",
    "name": "substringFromLastIndexOf",
    "memberof": "lib/strings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/strings.js~substringFromLastIndexOf",
    "access": "public",
    "export": true,
    "importPath": "lib/strings.js",
    "importStyle": "{substringFromLastIndexOf}",
    "description": "Returns the substring from the last index of the supplied needle",
    "lineNumber": 239,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "needle",
        "description": "The substring to be searched for"
      },
      {
        "nullable": null,
        "types": [
          "SubstringArgs"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 370,
    "kind": "function",
    "name": "substringFromIndexOf",
    "memberof": "lib/strings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/strings.js~substringFromIndexOf",
    "access": "public",
    "export": true,
    "importPath": "lib/strings.js",
    "importStyle": "{substringFromIndexOf}",
    "description": "Returns the substring from the index of the supplied needle",
    "lineNumber": 255,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "needle",
        "description": "The substring to be searched for"
      },
      {
        "nullable": null,
        "types": [
          "SubstringArgs"
        ],
        "spread": false,
        "optional": true,
        "name": "opts",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 371,
    "kind": "typedef",
    "name": "SubstringArgs",
    "memberof": "lib/strings.js",
    "static": true,
    "longname": "lib/strings.js~SubstringArgs",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "searchFrom",
        "description": "Index to search from for the supplied substring"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "include",
        "description": "Should the supplied substring be included in the returned substring"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "SubstringArgs"
    }
  },
  {
    "__docId__": 372,
    "kind": "file",
    "name": "lib/traversals.js",
    "content": "import { waitForAdditionalElemChildren } from './delays';\nimport { getElemSiblingAndRemoveElem, childElementIterator } from './dom';\nimport {\n  isGenerator,\n  isPromise,\n  isFunction,\n  noExceptGeneratorWrap,\n} from './general';\n\n/**\n * Applies a function to the children of the supplied parent element yielding the return value of the function.\n *\n * When a child of the parent element does not have a next element sibling a wait\n * for additional child elements to be added is done for a maximum of 15 seconds and\n * if the current child element still does not have a next element sibling the generator ends.\n *\n * @param {SomeElement} parentElement - The parent element who's children are to be traversed\n * @param {function(element: SomeElement, additionalArgs: *): *} fn - The function to be applied to each child element\n * @param {*} [additionalArgs] - Any additional arguments to be supplied to the function applied to each child element\n * @return {AsyncIterableIterator<*>}\n */\nexport async function* traverseChildrenOfLoaderParent(\n  parentElement,\n  fn,\n  additionalArgs\n) {\n  if (parentElement == null) return;\n  for await (const child of walkChildrenOfCustom({\n    parentElement,\n    loader: true,\n  })) {\n    const nextValue = fn(child, additionalArgs);\n    if (isGenerator(nextValue)) {\n      for await (const next of noExceptGeneratorWrap(nextValue)) {\n        yield next;\n      }\n    } else {\n      yield isPromise(nextValue) ? await nextValue : nextValue;\n    }\n  }\n}\n\n/**\n * Applies a function to the children of the supplied parent element yielding the return value of the function\n * and then removing the previously considered child element from the DOM.\n *\n * When a child of the parent element does not have a next element sibling a wait\n * for additional child elements to be added is done for a maximum of 15 seconds and\n * if the current child element still does not have a next element sibling the generator ends.\n *\n * @param {SomeElement} parentElement - The parent element who's children are to be traversed\n * @param {function(element: SomeElement, additionalArgs: *): *} fn - The function to be applied to each child element\n * @param {*} [additionalArgs] - Any additional arguments to be supplied to the function applied to each child element\n * @return {AsyncIterableIterator<*>}\n */\nexport async function* traverseChildrenOfLoaderParentRemovingPrevious(\n  parentElement,\n  fn,\n  additionalArgs\n) {\n  if (parentElement == null) return;\n  for await (const child of walkChildrenOfCustom({\n    parentElement,\n    loader: true,\n    nextChild(parent, currentChild) {\n      return getElemSiblingAndRemoveElem(currentChild);\n    },\n  })) {\n    const nextValue = fn(child, additionalArgs);\n    if (isGenerator(nextValue)) {\n      for await (const next of noExceptGeneratorWrap(nextValue)) {\n        yield next;\n      }\n    } else {\n      yield isPromise(nextValue) ? await nextValue : nextValue;\n    }\n  }\n}\n\n/**\n * Applies a function to the children of the supplied parent element yielding the return value of the function.\n *\n * When a child of the parent element does not have a next element sibling the generator ends.\n *\n * @param {SomeElement} parentElement - The parent element who's children are to be traversed\n * @param {function(element: SomeElement, additionalArgs: *): *} fn - The function to be applied to each child element\n * @param {*} [additionalArgs] - Any additional arguments to be supplied to the function applied to each child element\n * @return {AsyncIterableIterator<*>}\n */\nexport async function* traverseChildrenOf(parentElement, fn, additionalArgs) {\n  if (parentElement == null) return;\n  for (const child of childElementIterator(parentElement)) {\n    const nextValue = fn(child, additionalArgs);\n    if (isGenerator(nextValue)) {\n      for await (const next of noExceptGeneratorWrap(nextValue)) {\n        yield next;\n      }\n    } else {\n      yield isPromise(nextValue) ? await nextValue : nextValue;\n    }\n  }\n}\n\n/**\n * Applies a function to the children of the supplied parent element yielding the return value of the function\n * and then removing the previously considered child element from the DOM.\n *\n * When a child of the parent element does not have a next element sibling the generator ends.\n *\n * @param {SomeElement} parentElement - The parent element who's children are to be traversed\n * @param {function(element: SomeElement, additionalArgs: *): *} fn - The function to be applied to each child element\n * @param {*} [additionalArgs] - Any additional arguments to be supplied to the function applied to each child element\n * @return {AsyncIterableIterator<*>}\n */\nexport async function* traverseChildrenOfRemovingPrevious(\n  parentElement,\n  fn,\n  additionalArgs\n) {\n  if (parentElement == null) return;\n  for await (const child of walkChildrenOfCustom({\n    parentElement,\n    loader: false,\n    nextChild(parent, currentChild) {\n      return getElemSiblingAndRemoveElem(currentChild);\n    },\n  })) {\n    const nextValue = fn(child, additionalArgs);\n    if (isGenerator(nextValue)) {\n      for await (const next of noExceptGeneratorWrap(nextValue)) {\n        yield next;\n      }\n    } else {\n      yield isPromise(nextValue) ? await nextValue : nextValue;\n    }\n  }\n}\n\n/**\n * Applies a function to the children of the supplied parent element yielding the return value of the function.\n *\n * When a child of the parent element does not have a next element sibling, the supplied genFun is called and a wait\n * for additional child elements to be added is done for a maximum of 15 seconds.\n * After the wait ends and if the current child element still does not have a next element sibling the generator ends.\n *\n * @param {SomeElement} parentElement - The parent element who's children are to be traversed\n * @param {function(): BoolOrPromiseBool} genFn - Function used to generator more elements returning T/F indicating if\n * a wait should be done\n * @param {function(element: SomeElement, additionalArgs: *): *} fn - The function to be applied to each child element\n * @param {*} [additionalArgs] - Any additional arguments to be supplied to the function applied to each child element\n * @return {AsyncIterableIterator<*>}\n */\nexport async function* traverseChildrenOfLoaderParentGenFn(\n  parentElement,\n  fn,\n  genFn,\n  additionalArgs\n) {\n  if (parentElement == null) return;\n  for await (const child of walkChildrenOfCustom({\n    parentElement,\n    loader: true,\n    async shouldWait(parent, currentChild) {\n      if (currentChild.nextElementSibling != null) return false;\n      const fromGen = genFn();\n      return isPromise(fromGen) ? await fromGen : fromGen;\n    },\n  })) {\n    const nextValue = fn(child, additionalArgs);\n    if (isGenerator(nextValue)) {\n      for await (const next of noExceptGeneratorWrap(nextValue)) {\n        yield next;\n      }\n    } else {\n      yield isPromise(nextValue) ? await nextValue : nextValue;\n    }\n  }\n}\n\n/**\n * Walks the children of the supplied parent element yielding its children.\n *\n * If the loader option is true or shouldWait and or wait function(s) are supplied then the walk\n * behaves as if the loader was set to true.\n *\n * When operating in loader mode and a child of the parent element does not have a next element sibling, a wait\n * for additional child elements to be added is done, if no custom wait function was supplied the wait happens for a maximum of 15 seconds.\n * After the wait ends and if the current child element still does not have a next element sibling the generator ends.\n *\n * When not operating in loader mode and the current child element does not have a next element sibling the traversal ends.\n *\n * See the documentation for {@link WalkChildrenOfCustomOpts} for the customization options available\n * @param {WalkChildrenOfCustomOpts} opts - Options for configuring the walk\n * @return {AsyncIterableIterator<SomeElement>}\n */\nexport async function* walkChildrenOfCustom(opts) {\n  if (!opts) return;\n  const {\n    parentElement,\n    waitOptions,\n    selector,\n    filter,\n    nextChild = (parent, child) => child.nextElementSibling,\n  } = opts;\n  let isLoader = !!opts.loader;\n  if (!isLoader && (isFunction(opts.shouldWait) || isFunction(opts.wait))) {\n    isLoader = true;\n  }\n  let shouldWait;\n  let wait;\n  if (isLoader) {\n    shouldWait = isFunction(opts.shouldWait)\n      ? opts.shouldWait\n      : (parent, child) => child.nextElementSibling == null;\n    wait = isFunction(opts.wait)\n      ? opts.wait\n      : (parent, child) => waitForAdditionalElemChildren(parent, waitOptions);\n  }\n  let curChild = parentElement.firstElementChild;\n  let useChild;\n  let nextChildValue;\n  while (curChild != null) {\n    useChild = filter ? filter(curChild) : true;\n    if (isPromise(useChild) ? await useChild : useChild) {\n      yield selector ? selector(curChild) : curChild;\n    }\n    if (isLoader) {\n      const shouldWaitValue = shouldWait(parentElement, curChild);\n      if (\n        isPromise(shouldWaitValue) ? await shouldWaitValue : shouldWaitValue\n      ) {\n        await wait(parentElement, curChild);\n      }\n    }\n    nextChildValue = nextChild(parentElement, curChild);\n    curChild = isPromise(nextChildValue)\n      ? await nextChildValue\n      : nextChildValue;\n  }\n}\n\n/**\n * Traverses the children of the supplied element applying the supplied function to each child and yielding\n * the return value of the function.\n *\n * If the loader option is true or shouldWait and or wait function(s) are supplied then the walk\n * behaves as if the loader was set to true.\n *\n * When operating in loader mode and a child of the parent element does not have a next element sibling, a wait\n * for additional child elements to be added is done, if no custom wait function was supplied the wait happens for a maximum of 15 seconds.\n * After the wait ends and if the current child element still does not have a next element sibling the generator ends.\n *\n * When not operating in loader mode and the current child element does not have a next element sibling the traversal ends.\n *\n * See the documentation for {@link TraversalOpts} for the customization options available.\n * @param {TraversalOpts} opts - Options for configuring the traversal\n * @return {AsyncIterableIterator<*>}\n */\nexport async function* traverseChildrenOfCustom(opts) {\n  if (!opts) return;\n  if (isFunction(opts.preTraversal)) {\n    const preValue = opts.preTraversal();\n    if (isGenerator(preValue)) {\n      for await (const preNext of noExceptGeneratorWrap(preValue)) {\n        yield preNext;\n      }\n    } else if (isPromise(preValue)) {\n      await preValue;\n    }\n  }\n  let parentElement;\n  if (isFunction(opts.setup)) {\n    const parentElemOrPromise = opts.setup();\n    parentElement = isPromise(parentElemOrPromise)\n      ? await parentElemOrPromise\n      : parentElemOrPromise;\n  } else {\n    parentElement = opts.parentElement;\n  }\n  if (!parentElement) {\n    if (opts.setupFailure) {\n      const handlingFailure = isFunction(opts.setupFailure)\n        ? opts.setupFailure()\n        : opts.setupFailure;\n      if (isGenerator(handlingFailure)) {\n        for await (const failureNext of noExceptGeneratorWrap(\n          handlingFailure\n        )) {\n          yield failureNext;\n        }\n      } else {\n        yield handlingFailure;\n      }\n    }\n    if (isFunction(opts.postTraversal)) {\n      const postValue = opts.postTraversal(true);\n      if (isGenerator(postValue)) {\n        try {\n          let next;\n          let nv;\n          while (true) {\n            next = postValue.next();\n            nv = isPromise(next) ? await next : next;\n            if (nv.done) {\n              if (nv.value) {\n                return nv.value;\n              }\n              break;\n            } else {\n              yield nv.value;\n            }\n          }\n        } catch (e) {}\n      } else if (postValue) return postValue;\n    }\n    return;\n  }\n  for await (const child of walkChildrenOfCustom({\n    parentElement,\n    loader: opts.loader,\n    nextChild: opts.nextChild,\n    shouldWait: opts.shouldWait,\n    wait: opts.wait,\n    waitOptions: opts.waitOptions,\n    filter: opts.filter,\n    selector: opts.selector,\n  })) {\n    const nextValue = opts.handler(child, opts.additionalArgs);\n    if (isGenerator(nextValue)) {\n      for await (const next of noExceptGeneratorWrap(nextValue)) {\n        yield next;\n      }\n    } else if (nextValue) {\n      yield nextValue;\n    }\n  }\n  if (isFunction(opts.postTraversal)) {\n    const postValue = opts.postTraversal(false);\n    if (isGenerator(postValue)) {\n      try {\n        let next;\n        let nv;\n        while (true) {\n          next = postValue.next();\n          nv = isPromise(next) ? await next : next;\n          if (nv.done) {\n            if (nv.value) return nv.value;\n          } else {\n            yield nv.value;\n          }\n        }\n      } catch (e) {}\n    } else if (postValue) {\n      return postValue;\n    }\n  }\n}\n\n/**\n * Reasons why a walk has ended\n * @type {{failedToRefindParent: number, noMoreChildren: number, failedToRefindChild: number, failedToFindFirstParent: number, failedToFindFirstChild: number}}\n */\nexport const WalkEndedReasons = {\n  failedToFindFirstParent: 1,\n  failedToFindFirstChild: 2,\n  failedToRefindParent: 3,\n  failedToRefindChild: 4,\n  noMoreChildren: 0,\n};\n\n/**\n * Yields the child elements of the found parent element.\n * If the parent element becomes removed from the DOM after yielding the current child,\n * the parent element and current child are re-found.\n * @param {DisconnectingWalkState} walkState\n * @return {AsyncIterableIterator<*>}\n */\nexport async function* disconnectingWalk(walkState) {\n  let parentElem = walkState.findParentElement();\n  if (!parentElem) {\n    walkState.walkEndedReason = WalkEndedReasons.failedToFindFirstParent;\n    return;\n  }\n  let currentChild = parentElem.firstElementChild;\n  if (!currentChild) {\n    walkState.walkEndedReason = WalkEndedReasons.failedToFindFirstChild;\n    return;\n  }\n  while (currentChild != null) {\n    yield currentChild;\n    if (!parentElem.isConnected) {\n      parentElem = walkState.findParentElement();\n      if (!parentElem) {\n        walkState.walkEndedReason = WalkEndedReasons.failedToRefindParent;\n        break;\n      }\n      currentChild = walkState.refindCurrentChild(parentElem, currentChild);\n      if (!currentChild) {\n        walkState.walkEndedReason = WalkEndedReasons.failedToRefindChild;\n        break;\n      }\n    }\n    if (walkState.shouldWait(parentElem, currentChild)) {\n      await walkState.wait(parentElem, currentChild);\n    }\n    currentChild = walkState.nextChild(parentElem, currentChild);\n  }\n  walkState.walkEndedReason = WalkEndedReasons.noMoreChildren;\n}\n\n/**\n * @typedef {SomeElement|Promise<SomeElement>} ElemOrPromiseElem\n */\n\n/**\n * @typedef {boolean|Promise<boolean>} BoolOrPromiseBool\n */\n\n/**\n * @typedef {Object} WalkChildrenOfCustomOpts\n * @property {SomeElement} parentElement - The element who's children are to\n * be visited, if not supplied it is expected that a setup function is\n * @property {function(parent: SomeElement, child: SomeElement): ElemOrPromiseElem} [nextChild] - Function used to get the next child to be visited\n * @property {function(child: SomeElement): Element} [selector] - Function used to select a more specific element to be used\n * @property {function(child: SomeElement): BoolOrPromiseBool} [filter] - Function used to determine if a specific child is to be handled\n * @property {function(parent: SomeElement, child: SomeElement): BoolOrPromiseBool} [shouldWait] -\n * Function used to determine if a wait for additional children should be done\n * @property {function(parent: SomeElement, child: SomeElement): Promise<*>} [wait] - Function used\n * to perform the wait for additional children\n * @property {boolean} [loader = false] - Should the walk expect that the parent element\n * could have additional child elements added e.g. infinite loading.\n * If loader is falsy and either or both shouldWait and wait function(s) are supplied then the walk\n * behaves as if the loader was set to true\n * @property {WaitForOptions} [waitOptions] - Options controlling\n * the wait for more children {@link waitForAdditionalElemChildren} when no custom\n * wait function is supplied\n */\n\n/**\n * @typedef {Object} TraversalOpts\n * @property {function(element: SomeElement, additionalArgs: *): *} handler - The function to be called for each child\n * @property {?SomeElement} [parentElement] - The element who's children are to\n * be visited, if not supplied it is expected that a setup function is\n * @property {function(): ElemOrPromiseElem} [setup] - Function\n * used to receive the parent element who's children are to be traversed.\n * @property {function(): *} [setupFailure] - Function called if the supplied\n * setup function fails to return a parent element or the supplied parent\n * element is falsy\n * @property {function(parent: SomeElement, child: SomeElement): ElemOrPromiseElem} [nextChild] - Function used to get the\n * next child to be visited\n * @property {function(child: SomeElement): BoolOrPromiseBool} [filter] -\n * Function used to determine if a specific child is to be handled\n * or not, returning true indicates the child element is to be handled false otherwise\n * @property {function(child: SomeElement): Element} [selector] - Function\n * used to select a more specific element to be used\n * @property {function(parent: SomeElement, child: SomeElement): BoolOrPromiseBool} [shouldWait] -\n * Function used to determine if a wait for additional children should be done\n * @property {function(parent: SomeElement, child: SomeElement): Promise<*>} [wait] - Function used\n * to perform the wait for additional children\n * @property {function(): *} [preTraversal] - Function used to perform\n * some action before traversal begins. If this function returns an (async) generator\n * the values of the generator are yielded otherwise no value this function returns\n * is yielded\n * @property {function(setupFailure: boolean): *} [postTraversal] - Function called after the traversal\n * is complete with T/F indicating if the function is being called if setup failed or the traversal is complete.\n * The value of this function yield'd if it is truthy\n * @property {*} [additionalArgs] - Optional additional arguments to be supplied\n * to the handler function\n * @property {boolean} [loader = false] - Should the traversal expect that the parent element\n * could have additional child elements added e.g. infinite loading.\n * If loader is falsy and either or both shouldWait and wait function(s) are supplied then the walk\n * behaves as if the loader was set to true\n * @property {WaitForOptions} [waitOptions] - Options controlling\n * the wait for more children\n */\n\n/**\n * @typedef {Object} DisconnectingWalkState\n * @property {number} walkEndedReason - The {@link WalkEndedReasons} why the walk ended (set once the walk has ended)\n * @property {function(): SomeElement} findParentElement - function used to find the parent element\n * @property {function(parent: SomeElement, child: SomeElement): SomeElement} refindCurrentChild - function used to re-find the currnet child when the parent element has become disconnected\n * @property {function(parent: SomeElement, child: SomeElement): boolean} shouldWait - function used to determine if the wait function should be called\n * @property {function(parent: SomeElement, child: SomeElement): boolean} wait - function used to wait once `shouldWait` returns true\n * @property {function(parent: SomeElement, child: SomeElement): SomeElement} nextChild - function used to get the next child element\n */\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/lib/traversals.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 373,
    "kind": "function",
    "name": "traverseChildrenOfLoaderParent",
    "memberof": "lib/traversals.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "lib/traversals.js~traverseChildrenOfLoaderParent",
    "access": "public",
    "export": true,
    "importPath": "lib/traversals.js",
    "importStyle": "{traverseChildrenOfLoaderParent}",
    "description": "Applies a function to the children of the supplied parent element yielding the return value of the function.\n\nWhen a child of the parent element does not have a next element sibling a wait\nfor additional child elements to be added is done for a maximum of 15 seconds and\nif the current child element still does not have a next element sibling the generator ends.",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "parentElement",
        "description": "The parent element who's children are to be traversed"
      },
      {
        "nullable": null,
        "types": [
          "function(element: SomeElement, additionalArgs: *): *"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "The function to be applied to each child element"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "additionalArgs",
        "description": "Any additional arguments to be supplied to the function applied to each child element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterableIterator<*>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 374,
    "kind": "function",
    "name": "traverseChildrenOfLoaderParentRemovingPrevious",
    "memberof": "lib/traversals.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "lib/traversals.js~traverseChildrenOfLoaderParentRemovingPrevious",
    "access": "public",
    "export": true,
    "importPath": "lib/traversals.js",
    "importStyle": "{traverseChildrenOfLoaderParentRemovingPrevious}",
    "description": "Applies a function to the children of the supplied parent element yielding the return value of the function\nand then removing the previously considered child element from the DOM.\n\nWhen a child of the parent element does not have a next element sibling a wait\nfor additional child elements to be added is done for a maximum of 15 seconds and\nif the current child element still does not have a next element sibling the generator ends.",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "parentElement",
        "description": "The parent element who's children are to be traversed"
      },
      {
        "nullable": null,
        "types": [
          "function(element: SomeElement, additionalArgs: *): *"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "The function to be applied to each child element"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "additionalArgs",
        "description": "Any additional arguments to be supplied to the function applied to each child element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterableIterator<*>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 375,
    "kind": "function",
    "name": "traverseChildrenOf",
    "memberof": "lib/traversals.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "lib/traversals.js~traverseChildrenOf",
    "access": "public",
    "export": true,
    "importPath": "lib/traversals.js",
    "importStyle": "{traverseChildrenOf}",
    "description": "Applies a function to the children of the supplied parent element yielding the return value of the function.\n\nWhen a child of the parent element does not have a next element sibling the generator ends.",
    "lineNumber": 90,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "parentElement",
        "description": "The parent element who's children are to be traversed"
      },
      {
        "nullable": null,
        "types": [
          "function(element: SomeElement, additionalArgs: *): *"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "The function to be applied to each child element"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "additionalArgs",
        "description": "Any additional arguments to be supplied to the function applied to each child element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterableIterator<*>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 376,
    "kind": "function",
    "name": "traverseChildrenOfRemovingPrevious",
    "memberof": "lib/traversals.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "lib/traversals.js~traverseChildrenOfRemovingPrevious",
    "access": "public",
    "export": true,
    "importPath": "lib/traversals.js",
    "importStyle": "{traverseChildrenOfRemovingPrevious}",
    "description": "Applies a function to the children of the supplied parent element yielding the return value of the function\nand then removing the previously considered child element from the DOM.\n\nWhen a child of the parent element does not have a next element sibling the generator ends.",
    "lineNumber": 115,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "parentElement",
        "description": "The parent element who's children are to be traversed"
      },
      {
        "nullable": null,
        "types": [
          "function(element: SomeElement, additionalArgs: *): *"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "The function to be applied to each child element"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "additionalArgs",
        "description": "Any additional arguments to be supplied to the function applied to each child element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterableIterator<*>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 377,
    "kind": "function",
    "name": "traverseChildrenOfLoaderParentGenFn",
    "memberof": "lib/traversals.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "lib/traversals.js~traverseChildrenOfLoaderParentGenFn",
    "access": "public",
    "export": true,
    "importPath": "lib/traversals.js",
    "importStyle": "{traverseChildrenOfLoaderParentGenFn}",
    "description": "Applies a function to the children of the supplied parent element yielding the return value of the function.\n\nWhen a child of the parent element does not have a next element sibling, the supplied genFun is called and a wait\nfor additional child elements to be added is done for a maximum of 15 seconds.\nAfter the wait ends and if the current child element still does not have a next element sibling the generator ends.",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "parentElement",
        "description": "The parent element who's children are to be traversed"
      },
      {
        "nullable": null,
        "types": [
          "function(): BoolOrPromiseBool"
        ],
        "spread": false,
        "optional": false,
        "name": "genFn",
        "description": "Function used to generator more elements returning T/F indicating if\na wait should be done"
      },
      {
        "nullable": null,
        "types": [
          "function(element: SomeElement, additionalArgs: *): *"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "The function to be applied to each child element"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "additionalArgs",
        "description": "Any additional arguments to be supplied to the function applied to each child element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterableIterator<*>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 378,
    "kind": "function",
    "name": "walkChildrenOfCustom",
    "memberof": "lib/traversals.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "lib/traversals.js~walkChildrenOfCustom",
    "access": "public",
    "export": true,
    "importPath": "lib/traversals.js",
    "importStyle": "{walkChildrenOfCustom}",
    "description": "Walks the children of the supplied parent element yielding its children.\n\nIf the loader option is true or shouldWait and or wait function(s) are supplied then the walk\nbehaves as if the loader was set to true.\n\nWhen operating in loader mode and a child of the parent element does not have a next element sibling, a wait\nfor additional child elements to be added is done, if no custom wait function was supplied the wait happens for a maximum of 15 seconds.\nAfter the wait ends and if the current child element still does not have a next element sibling the generator ends.\n\nWhen not operating in loader mode and the current child element does not have a next element sibling the traversal ends.\n\nSee the documentation for {@link WalkChildrenOfCustomOpts} for the customization options available",
    "lineNumber": 196,
    "params": [
      {
        "nullable": null,
        "types": [
          "WalkChildrenOfCustomOpts"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": "Options for configuring the walk"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterableIterator<SomeElement>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 379,
    "kind": "function",
    "name": "traverseChildrenOfCustom",
    "memberof": "lib/traversals.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "lib/traversals.js~traverseChildrenOfCustom",
    "access": "public",
    "export": true,
    "importPath": "lib/traversals.js",
    "importStyle": "{traverseChildrenOfCustom}",
    "description": "Traverses the children of the supplied element applying the supplied function to each child and yielding\nthe return value of the function.\n\nIf the loader option is true or shouldWait and or wait function(s) are supplied then the walk\nbehaves as if the loader was set to true.\n\nWhen operating in loader mode and a child of the parent element does not have a next element sibling, a wait\nfor additional child elements to be added is done, if no custom wait function was supplied the wait happens for a maximum of 15 seconds.\nAfter the wait ends and if the current child element still does not have a next element sibling the generator ends.\n\nWhen not operating in loader mode and the current child element does not have a next element sibling the traversal ends.\n\nSee the documentation for {@link TraversalOpts} for the customization options available.",
    "lineNumber": 259,
    "params": [
      {
        "nullable": null,
        "types": [
          "TraversalOpts"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": "Options for configuring the traversal"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterableIterator<*>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 380,
    "kind": "variable",
    "name": "WalkEndedReasons",
    "memberof": "lib/traversals.js",
    "static": true,
    "longname": "lib/traversals.js~WalkEndedReasons",
    "access": "public",
    "export": true,
    "importPath": "lib/traversals.js",
    "importStyle": "{WalkEndedReasons}",
    "description": "Reasons why a walk has ended",
    "lineNumber": 363,
    "type": {
      "nullable": null,
      "types": [
        "{failedToRefindParent: number, noMoreChildren: number, failedToRefindChild: number, failedToFindFirstParent: number, failedToFindFirstChild: number}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 381,
    "kind": "function",
    "name": "disconnectingWalk",
    "memberof": "lib/traversals.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "lib/traversals.js~disconnectingWalk",
    "access": "public",
    "export": true,
    "importPath": "lib/traversals.js",
    "importStyle": "{disconnectingWalk}",
    "description": "Yields the child elements of the found parent element.\nIf the parent element becomes removed from the DOM after yielding the current child,\nthe parent element and current child are re-found.",
    "lineNumber": 378,
    "params": [
      {
        "nullable": null,
        "types": [
          "DisconnectingWalkState"
        ],
        "spread": false,
        "optional": false,
        "name": "walkState",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterableIterator<*>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 382,
    "kind": "typedef",
    "name": "ElemOrPromiseElem",
    "memberof": "lib/traversals.js",
    "static": true,
    "longname": "lib/traversals.js~ElemOrPromiseElem",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "SomeElement",
        "Promise<SomeElement>"
      ],
      "optional": false,
      "name": "ElemOrPromiseElem"
    }
  },
  {
    "__docId__": 383,
    "kind": "typedef",
    "name": "BoolOrPromiseBool",
    "memberof": "lib/traversals.js",
    "static": true,
    "longname": "lib/traversals.js~BoolOrPromiseBool",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "boolean",
        "Promise<boolean>"
      ],
      "optional": false,
      "name": "BoolOrPromiseBool"
    }
  },
  {
    "__docId__": 384,
    "kind": "typedef",
    "name": "WalkChildrenOfCustomOpts",
    "memberof": "lib/traversals.js",
    "static": true,
    "longname": "lib/traversals.js~WalkChildrenOfCustomOpts",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "parentElement",
        "description": "The element who's children are to\nbe visited, if not supplied it is expected that a setup function is"
      },
      {
        "nullable": null,
        "types": [
          "function(parent: SomeElement, child: SomeElement): ElemOrPromiseElem"
        ],
        "spread": false,
        "optional": true,
        "name": "nextChild",
        "description": "Function used to get the next child to be visited"
      },
      {
        "nullable": null,
        "types": [
          "function(child: SomeElement): Element"
        ],
        "spread": false,
        "optional": true,
        "name": "selector",
        "description": "Function used to select a more specific element to be used"
      },
      {
        "nullable": null,
        "types": [
          "function(child: SomeElement): BoolOrPromiseBool"
        ],
        "spread": false,
        "optional": true,
        "name": "filter",
        "description": "Function used to determine if a specific child is to be handled"
      },
      {
        "nullable": null,
        "types": [
          "function(parent: SomeElement, child: SomeElement): BoolOrPromiseBool"
        ],
        "spread": false,
        "optional": true,
        "name": "shouldWait",
        "description": "Function used to determine if a wait for additional children should be done"
      },
      {
        "nullable": null,
        "types": [
          "function(parent: SomeElement, child: SomeElement): Promise<*>"
        ],
        "spread": false,
        "optional": true,
        "name": "wait",
        "description": "Function used\nto perform the wait for additional children"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " false",
        "defaultRaw": false,
        "name": "loader",
        "description": "Should the walk expect that the parent element\ncould have additional child elements added e.g. infinite loading.\nIf loader is falsy and either or both shouldWait and wait function(s) are supplied then the walk\nbehaves as if the loader was set to true"
      },
      {
        "nullable": null,
        "types": [
          "WaitForOptions"
        ],
        "spread": false,
        "optional": true,
        "name": "waitOptions",
        "description": "Options controlling\nthe wait for more children {@link waitForAdditionalElemChildren} when no custom\nwait function is supplied"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "WalkChildrenOfCustomOpts"
    }
  },
  {
    "__docId__": 385,
    "kind": "typedef",
    "name": "TraversalOpts",
    "memberof": "lib/traversals.js",
    "static": true,
    "longname": "lib/traversals.js~TraversalOpts",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "function(element: SomeElement, additionalArgs: *): *"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "The function to be called for each child"
      },
      {
        "nullable": true,
        "types": [
          "SomeElement"
        ],
        "spread": false,
        "optional": true,
        "name": "parentElement",
        "description": "The element who's children are to\nbe visited, if not supplied it is expected that a setup function is"
      },
      {
        "nullable": null,
        "types": [
          "function(): ElemOrPromiseElem"
        ],
        "spread": false,
        "optional": true,
        "name": "setup",
        "description": "Function\nused to receive the parent element who's children are to be traversed."
      },
      {
        "nullable": null,
        "types": [
          "function(): *"
        ],
        "spread": false,
        "optional": true,
        "name": "setupFailure",
        "description": "Function called if the supplied\nsetup function fails to return a parent element or the supplied parent\nelement is falsy"
      },
      {
        "nullable": null,
        "types": [
          "function(parent: SomeElement, child: SomeElement): ElemOrPromiseElem"
        ],
        "spread": false,
        "optional": true,
        "name": "nextChild",
        "description": "Function used to get the\nnext child to be visited"
      },
      {
        "nullable": null,
        "types": [
          "function(child: SomeElement): BoolOrPromiseBool"
        ],
        "spread": false,
        "optional": true,
        "name": "filter",
        "description": "Function used to determine if a specific child is to be handled\nor not, returning true indicates the child element is to be handled false otherwise"
      },
      {
        "nullable": null,
        "types": [
          "function(child: SomeElement): Element"
        ],
        "spread": false,
        "optional": true,
        "name": "selector",
        "description": "Function\nused to select a more specific element to be used"
      },
      {
        "nullable": null,
        "types": [
          "function(parent: SomeElement, child: SomeElement): BoolOrPromiseBool"
        ],
        "spread": false,
        "optional": true,
        "name": "shouldWait",
        "description": "Function used to determine if a wait for additional children should be done"
      },
      {
        "nullable": null,
        "types": [
          "function(parent: SomeElement, child: SomeElement): Promise<*>"
        ],
        "spread": false,
        "optional": true,
        "name": "wait",
        "description": "Function used\nto perform the wait for additional children"
      },
      {
        "nullable": null,
        "types": [
          "function(): *"
        ],
        "spread": false,
        "optional": true,
        "name": "preTraversal",
        "description": "Function used to perform\nsome action before traversal begins. If this function returns an (async) generator\nthe values of the generator are yielded otherwise no value this function returns\nis yielded"
      },
      {
        "nullable": null,
        "types": [
          "function(setupFailure: boolean): *"
        ],
        "spread": false,
        "optional": true,
        "name": "postTraversal",
        "description": "Function called after the traversal\nis complete with T/F indicating if the function is being called if setup failed or the traversal is complete.\nThe value of this function yield'd if it is truthy"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": true,
        "name": "additionalArgs",
        "description": "Optional additional arguments to be supplied\nto the handler function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " false",
        "defaultRaw": false,
        "name": "loader",
        "description": "Should the traversal expect that the parent element\ncould have additional child elements added e.g. infinite loading.\nIf loader is falsy and either or both shouldWait and wait function(s) are supplied then the walk\nbehaves as if the loader was set to true"
      },
      {
        "nullable": null,
        "types": [
          "WaitForOptions"
        ],
        "spread": false,
        "optional": true,
        "name": "waitOptions",
        "description": "Options controlling\nthe wait for more children"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "TraversalOpts"
    }
  },
  {
    "__docId__": 386,
    "kind": "typedef",
    "name": "DisconnectingWalkState",
    "memberof": "lib/traversals.js",
    "static": true,
    "longname": "lib/traversals.js~DisconnectingWalkState",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "walkEndedReason",
        "description": "The {@link WalkEndedReasons} why the walk ended (set once the walk has ended)"
      },
      {
        "nullable": null,
        "types": [
          "function(): SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "findParentElement",
        "description": "function used to find the parent element"
      },
      {
        "nullable": null,
        "types": [
          "function(parent: SomeElement, child: SomeElement): SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "refindCurrentChild",
        "description": "function used to re-find the currnet child when the parent element has become disconnected"
      },
      {
        "nullable": null,
        "types": [
          "function(parent: SomeElement, child: SomeElement): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "shouldWait",
        "description": "function used to determine if the wait function should be called"
      },
      {
        "nullable": null,
        "types": [
          "function(parent: SomeElement, child: SomeElement): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "wait",
        "description": "function used to wait once `shouldWait` returns true"
      },
      {
        "nullable": null,
        "types": [
          "function(parent: SomeElement, child: SomeElement): SomeElement"
        ],
        "spread": false,
        "optional": false,
        "name": "nextChild",
        "description": "function used to get the next child element"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "DisconnectingWalkState"
    }
  },
  {
    "kind": "index",
    "content": "wr-behaviors\n=======================\n\n### Installation\nTo use this project you must first install its dependencies\n\n```bash\n$ yarn install\n# or \"npm install\"\n```\n\nIf you wish to use this project via Docker, see the **Docker** portion of the **Usage** section.\n\n### Usage\nwr-behaviors provides a cli to help you use this project.\n\nThe commands available to you are displayed below \n\n```bash\n$ ./bin/cli --help\n\nUsage: cli [options] [command]\n\nOptions:\n  -V, --version  output the version number\n  -h, --help     output usage information\n\nCommands:\n  api            Start the behavior api sever\n  behaviors      Build and or validate behaviors, or generate their metadata\n  help [cmd]     display help for [cmd]\n```\n\nThe cli provides two commands `api` and `behaviors` and each command has its own options.\n\n#### Behaviors command\nTo build the behaviors made available by wr-behaviors execute `./bin/cli behaviors -b`.\n\nThis will build the behaviors using the behavior config file located in the root of this project. \n\nThe built behaviors, along with a behavior metadata file (`behaviorMetadata.js`), can be found in the `dist` directory which will be created for you if it does not exist in the root of this project.\n\nThe full options that available for use with this command are show below.\n\n```bash\n$ ./bin/cli behaviors --help\n\nUsage: cli-behaviors [options]\n\nOptions:\n  -V, --version                    output the version number\n  -v, --validate [fileOrDir]       \n  -c, --config [configPath]        Path to the behavior config file (default: \"<path to wr-behaviors>/behavior-config.yml\")\n  -b, --build [fileOrDir]          Build a behaviors or all behaviors contained within a directory (default: true)\n  -w, --watch [behaviorFileOrDir]  Watch the files, and their imports, in the build directory for re-bundling on changes (placed in dist directory)\n  --metadata [dumpDir]             Generate behavior metadata, optionally supplying a path to directory where metadata is to be placed. Defaults to current working directory\n  -h, --help                       output usage information\n```\n\n#### API command\nTo run the behavior api server execute `./bin/cli api --build-behaviors`. \n\nThis will start the api server after all behaviors provided by wr-behaviors have been built. \n\nIf you have already built the behaviors using the `behaviors` command provided by the cli then you may omit the `--build-behaviors` flag. \n\nThe full options that available for use with this command are show below.\n \n```bash\n$ ./bin/cli api --help\n\nUsage: cli-api [options]\n\nOptions:\n  -V, --version                        output the version number\n  -p, --port [port]                    The port the api server is to bind to (default: 3030)\n  -h, --host [host]                    The host address the server is listen on (default: \"127.0.0.1\")\n  -b, --behaviorDir [behaviorDir]      The path to the directory containing the build behaviors (default: \"<path to wr-behaviors>/dist\")\n  -m, --behaviorMetadata [medataPath]  The path to the behavior metadata (default: \"<path to wr-behaviors>/dist/behaviorMetadata.js\")\n  --build-behaviors                    Should the api server build the behaviors for starting up\n  -h, --help                           output usage information\n```\n\nSome configuration of the api server can be done via the environment variables listed below\n- `BEHAVIOR_API_HOST`: the host the api server will use (e.g. 127.0.0.1)\n- `BEHAVIOR_API_PORT`: the port the api server will listen on (e.g. 3030)\n- `WR_BEHAVIOR_DIR`: path to the directory containing the built behaviors\n- `WR_BEHAVIOR_METADATA_PATH`: path to the behavior metadata file\n- `BUILD_BEHAVIORS`: should the api server build the behaviors before starting\n\n### Docker\nTo build the wr-behaviors docker image (`webrecorder/behaviors:latest`) execute `docker-compose build`.\n\nThe image created is suitable for building behaviors and running the behavior api server.\n\nThe default configuration of the image is to run the api server, however you can substitute the default command\nwith any of the cli commands listed previously.\n\nFor more information please consult the provided `Dockerfile` and `docker-compose.yml` files.\n",
    "longname": "/home/john/WebstormProjects/wr-behaviors/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"wr-behaviors\",\n  \"version\": \"1.0.0\",\n  \"main\": \"./lib/index.js\",\n  \"bin\": \"./bin/cli.js\",\n  \"license\": \"Apache-2.0\",\n  \"dependencies\": {\n    \"@babel/generator\": \"^7.5.5\",\n    \"@babel/highlight\": \"^7.5.0\",\n    \"@babel/parser\": \"^7.5.5\",\n    \"@babel/template\": \"^7.4.4\",\n    \"@babel/traverse\": \"^7.5.5\",\n    \"@babel/types\": \"^7.5.5\",\n    \"acorn\": \"^7.0.0\",\n    \"chalk\": \"^2.4.2\",\n    \"cheerio\": \"^1.0.0-rc.2\",\n    \"chokidar\": \"^3.0.2\",\n    \"commander\": \"^3.0.0\",\n    \"eventemitter3\": \"^4.0.0\",\n    \"fastify\": \"^2.7.1\",\n    \"fastify-graceful-shutdown\": \"^2.0.1\",\n    \"fastify-plugin\": \"^1.6.0\",\n    \"fastify-swagger\": \"^2.4.0\",\n    \"fastparallel\": \"^2.3.0\",\n    \"find-my-way\": \"^2.1.0\",\n    \"fs-extra\": \"^8.1.0\",\n    \"js-yaml\": \"^3.13.1\",\n    \"plur\": \"^3.1.1\",\n    \"prettier\": \"^1.18.2\",\n    \"pretty-time\": \"^1.1.0\",\n    \"qs\": \"^6.7.0\",\n    \"rollup\": \"^1.19.4\",\n    \"rollup-plugin-alias\": \"^1.5.2\",\n    \"rollup-plugin-cleanup\": \"^3.1.1\",\n    \"rollup-plugin-node-resolve\": \"^5.2.0\",\n    \"ts-morph\": \"^3.1.3\",\n    \"typescript\": \"^3.5.3\",\n    \"uuid\": \"^3.3.2\"\n  },\n  \"scripts\": {\n    \"build-dev\": \"rollup -c rollup.dev.config.js\",\n    \"build-deving\": \"rollup -c rollup.deving.config.js\",\n    \"build-deving-warch\": \"rollup --watch -c rollup.deving.config.js\",\n    \"build-docs\": \"esdoc\",\n    \"build-prod\": \"rollup -c rollup.prod.config.js\",\n    \"build-watch\": \"rollup --watch -c rollup.dev.config.js\",\n    \"generate-runnable-behaviors\": \"node bin/cli-build -b\",\n    \"generate-stdlib-debug\": \"node ./bin/cli-stdlib --debug-script\",\n    \"generate-stdlib-index\": \"node ./bin/cli-stdlib --gen-index\",\n    \"generate-test-helper-values\": \"node ./internal/generateTestHelperValues.js\",\n    \"publish-docs\": \"gh-pages -d docs\",\n    \"test\": \"ava --verbose\",\n    \"format\": \"prettier --write test/**/*.js lib/**/*.js internal/**/*.js api/**/*.js behaviors/**/*.js\",\n    \"updateBehaviorUpdatedDates\": \"node ./internal/updateBehaviorUpdatedTimes.js\"\n  },\n  \"devDependencies\": {\n    \"@types/cheerio\": \"^0.22.13\",\n    \"@types/fs-extra\": \"^8.0.0\",\n    \"ava\": \"^2.2.0\",\n    \"babel-eslint\": \"^10.0.2\",\n    \"chrome-remote-interface-extra\": \"git+https://github.com/N0taN3rd/chrome-remote-interface-extra.git#pv-1.17.0-post\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-external-webapi-plugin\": \"^1.0.0\",\n    \"esdoc-importpath-plugin\": \"^1.0.2\",\n    \"esdoc-node\": \"^1.0.4\",\n    \"esdoc-publish-html-plugin\": \"^1.1.2\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^6.1.0\",\n    \"eslint-config-prettier\": \"^6.0.0\",\n    \"eslint-plugin-prettier\": \"^3.1.0\",\n    \"gh-pages\": \"^2.1.1\",\n    \"is-ci\": \"^2.0.0\",\n    \"just-launch-chrome\": \"^1.0.0\",\n    \"request\": \"^2.88.0\",\n    \"request-promise-native\": \"^1.0.7\"\n  },\n  \"engines\": {\n    \"node\": \">=11\"\n  },\n  \"ava\": {\n    \"verbose\": true,\n    \"files\": [\n      \"test/*.js\"\n    ],\n    \"helpers\": [\n      \"test/helpers/**.js\"\n    ],\n    \"sources\": [\n      \"api/**/*\"\n    ]\n  },\n  \"resolutions\": {\n    \"*/**/graceful-fs\": \"^4.1.15\",\n    \"*/**/tslib\": \"^1.9.3\",\n    \"*/**/typescript\": \"^3.5.3\"\n  }\n}\n",
    "longname": "/home/john/WebstormProjects/wr-behaviors/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": true,
    "content": "# Behaviors\n\n## Quick Start\n\nRequirements: [Node.js](https://nodejs.org/en/)\n\nTo use this project you must first install its dependencies\n\n```bash\n$ yarn install\n# or \"npm install\"\n```\n\nOnce you have installed the dependencies you are ready to start using the project\n\n- [Overview on behaviors](./manual/behaviors.html)\n- [Provided cli commands](./manual/cli.html)\n- [Behavior standard library reference](./identifiers.html)\n\n**Via Docker**\n\nTo build the behaviors docker image (`webrecorder/behaviors:latest`) execute `docker-compose build`.\n\nThe image created is suitable for building behaviors and running the behavior [api server](https://webrecorder.github.io/behaviors/manual/cli.html#api-command).\n\nThe default configuration of the image is to run the api server, however you can substitute the default command\nwith any of the cli commands listed previously.\n\nFor more information please consult the provided `Dockerfile` and `docker-compose.yml` files.\n\n\n",
    "longname": "/home/john/WebstormProjects/wr-behaviors/manual/index.md",
    "name": "./manual/index.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/john/WebstormProjects/wr-behaviors/manual/behaviors.md",
    "name": "./manual/behaviors.md",
    "content": "# Behaviors\n\n## Format\n\nA behavior is simply a JavaScript file that exposes the means to perform its series of actions in a page and some information (metadata) about itself.\n\nWith this in mind, every behavior is expected to be [JavaScript module](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules) that\n\n- has a **default export** that is an [async generator function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of#Iterating_over_async_generators) or a function returning an [async iterator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/asyncIterator)\n- has named export **metadata** that is an object\n- has named export **isBehavior**\n\nAn example of the expected format behavior is shown below\n\n```js\n// means to perform the series of  actions\nexport default async function* myBehavior(cliAPI) { ... }\n\n// information about the behavior\nexport const metadata = { ... };\n\n// flag indicating this file is a behavior ready to be used\nexport const isBehavior = true;\n\n// optional function to be called after each step of the behavior\nexport function postStep(rawBehaviorStepResults) { ... }\n```\n\nIn the example above, the behavior exposes the means to perform its actions using the `export default` keywords.\n\nThe `export default` keywords indicate that whatever follows is the primary export of the module and what ever is default export of a behavior is used to run the behavior.\n\nAny additional information that the behavior wishes to be expose using the `export` keyword and is shown in the example above with the final two required named exports **metadata** and **isBehavior**.\n\nPlease note that **isBehavior** named export is used to indicate that this behavior is ready to be used.\n\nIf the **isBehavior** export is missing then the provided tools will not recognize the behavior as being ready and will not use the behavior.\n\nLikewise, if the behavior does not have a default export and does not export **metadata** and **isBehavior**, the tools will not consider the behavior as valid.\n\nThe optional export `postStep` is a function called after each action (step) of the behavior to convert the yielded results into the [expected format](../typedef/index.html#static-typedef-BehaviorStepResults).\n\nIt is recommended that you use the library function [lib.buildCustomPostStepFn](../function/index.html#static-function-buildCustomPostStepFn) if you want to perform some kind of action after each behavior step that is not directly tied to the running of the behavior.\n\n```js\nexport const postStep = lib.buildCustomPostStepFn(() => { ... });\n```\n\n## Metadata\n\nA behaviors exported metadata is used to\n\n- describe how it should be matched to the pages it is written for\n- provide an overview of what it does\n- have a more specific name associated with it when querying for it using the behavior api\n- embed any additional information about the behavior\n\nAnd every exported metadata object is expected to have the following properties\n\n- name (string): the name for your behavior to be used when querying the behavior API for it by name\n- description (string): a description for the behavior\n- match (object): how the behavior will be matched to the page(s) it is written for\n\nOf the expected metadata properties, the match object has two variations and is shown below in the context of two valid metadata exports.\n\n```js\n// variation 1\nexport const metadata = {\n  name: 'the name of your behavior',\n  match: {\n    regex: /an regular expression dictating the URL the behavior will run on/,\n  },\n  description: 'an description of what your behavior does',\n};\n```\n\nThe first variation, shown above, defines a single property `regex` that is an JavaScript [RegExp](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp).\n\nThe behavior using variation one is considered matched to an URL when the regular expression, defined in the `regex` property of `match`, matches the URL.\n\nThe second variation, shown below, has two properties `base` (RegExp) and `sub` (Array<RegExp>).\n\nThe `base` regular expression is used as a generic test and if it matches a URL the regular expressions in the `sub` array will be tested against the same URL.\n\nThe behavior is considered matched to a URL when the `base` regular expression matches the URL and one of the `sub` regular expressions also matches the URL.\n\n```js\n// variation 2\nexport const metadata = {\n  name: 'the name of your behavior',\n  match: {\n    regex: {\n      base: /an regular expressions dictating the base URL the behavior will run on/,\n      sub: [\n        /an array of regular expressions dictating more specific parts of the base URL the behavior will run on/,\n      ],\n    },\n  },\n  description: 'an description of what your behavior does',\n};\n```\n\n## Behavior Implementation Overview\n\nThe primary reasons that a behaviors **default export** is required to be an [async generator function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of#Iterating_over_async_generators) or a function returning an [async iterator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/asyncIterator) are\n\n- Async generators are a native JavaScript feature cross the major browser\n- They provide a simple way to run the behavior via in the browser and via [browsertrix](https://github.com/webrecorder/browsertrix)\n- Allow information about the behavior, its state, to be easily reported to behavior runners\n\nHowever we understand this requirement, namely behaviors as async generators, may be a new JavaScript idiom for some and for the remaining portion of this section give a high level overview on how to write a behavior under this requirement.\n\nNow consider the following example shown below which is a behavior living in the in the \"behaviors\" directory of this project for all pages of myAwesomeWebSite.com.\n\nPlease note that there is no code in the body of the `myBehavior` function, this is ok as all the remaining code examples should be assumed to be inside function where the comment \"behavior code\" is currently.\n\nAlso note that their exists a cli command for [new behavior creation](./cli.html#new-behavior-command) that will fill out much of the boiler plate shown in the code section below\n\n\n```js\nimport * as lib from '../lib';\n\nexport default async function* myBehavior(cliAPI) {\n  // behavior code\n}\n\nexport const metadata = {\n  name: 'myBehavior',\n  match: {\n    regex: /^(?:https?:\\/\\/(?:www\\.)?)?:myAwesomeWebSite.com.*$/,\n  },\n  description: 'It does really cool stuff',\n};\n\nexport const isBehavior = true;\n```\n\nAs you will have already noticed by looking over the documentation for the [behaviors standard library](../identifiers.html) that many of the functions returns [Promises](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\n\nNow without turning into a JavaScript tutorial the only thing you need to know about promises is that they can be awaited, that is to say you can await for their completion.\n\nThis comes in handy when you want to wait for the the documents state to become ready since the pages of myAwesomeWebSite.com take a long time to load and can be done as easily as shown in `step 1`\n\n```js\n// step 1\nawait lib.domCompletePromise();\n```\n\nNow we know that the browser has fully parsed the page and we can safely start operating on the page.\n\nBut first we should let ourselves know that we are good to go by reporting some state and is done by yielding a value as shown in `step 2`\n\n```js\n// step 1\nawait lib.domCompletePromise();\n// step 2\nconst state = { videosPlayed: 0 };\nyield lib.stateWithMsgNoWait('Document ready!', state);\n```\n\nThe function `lib.stateWithMsgNoWait` indicates to the behavior runner that the behavior has an updated to report and that it does not have to wait.\n\nIf the behavior was being run by [browsertrix](https://github.com/webrecorder/browsertrix) and the other function `lib.stateWithMsgWait` was used, browsertrix would have waited until the HTTP requests made by the page had died down (no request made for set period of time) but since we use the no wait variant we know no wait will be made.\n\nWhen you `yield` a value from the behavior you can consider the behavior paused until the runner initiates an the next action.\n\nIf a wait was indicated using the `lib.stateWithMsgWait` and the behavior is being run by browsertrix no more actions would be initiated until the pages network (amount of HTTP requests made) become idle (no more requests made for a set period of time).\n\nAdditionally, it should be noted that the second argument supplied to `lib.stateWithMsgNoWait` is optional but useful for reporting to yourself more detailed information about the state of your behavior.\n\nContinuing on with the creation of our behavior, let us assume that the page that the behavior is operating in has a list videos we want to play.\n\nWe can accomplish this as shown in `step 3`\n\n```js\n// step 1\nawait lib.domCompletePromise();\n// step 2\nconst state = { videosPlayed: 0 };\nyield lib.stateWithMsgNoWait('Document ready!', state);\n// step 3\nfor (const videoListItem of lib.childElementIterator(lib.id('videos'))) {\n  // videoListItem is a child of the element with id == 'videos'\n  // that has a video as child element\n  const videoWasPlayed = await lib.selectAndPlay('video', videoListItem);\n  if (videoWasPlayed) {\n    // increment our states counter for number of videos played\n    state.videosPlayed += 1;\n    // let ourselves know we played a video\n    yield lib.stateWithMsgNoWait('Played a video!', state);\n  } else {\n    yield lib.stateWithMsgNoWait('Failed to play a video using the standard DOM methods', state);\n  }\n}\nreturn lib.stateWithMsgNoWait('Done!', state);\n```\n\nIn step three we use the function `childElementIterator` that returns an iterator over the child elements of the supplied parent element and then for each child of the element with `id=\"videos\" we\n  * select the video element that is a descendant of the `videoListItem`s and play the video\n  * increment the number of videos played in our behaviors state\n  * let ourselves know that we played a video\n\n\nAlso seen in step 3 is the usage keyword `yield` in combination with `*` or `yield *`.\n\n`yield *` means that we are yielding another generator, that is to say all actions of the generator are to be treated as if we yielded them ourselves.\n\nIn short step 3 can be described as playing a video contained in every child of the element with id == video and once we have played all the videos on the page return a message with our final state from the behavior.\n\nThis completes the mini-tutorial on how to create behaviors.\n\nThe full behavior is shown below\n\n```js\nimport * as lib from '../lib';\n\nexport default async function* myBehavior(cliAPI) {\n  // behavior code\n  // step 1\n  await lib.domCompletePromise();\n  // step 2\n  const state = { videosPlayed: 0 };\n  yield lib.stateWithMsgNoWait('Document ready!', state);\n  // step 3\n  for (const videoListItem of lib.childElementIterator(lib.id('videos'))) {\n    // videoListItem is a child of the element with id == 'videos'\n    // that has a video as child element\n    const videoWasPlayed = await lib.selectAndPlay('video', videoListItem);\n    if (videoWasPlayed) {\n      // increment our states counter for number of videos played\n      state.videosPlayed += 1;\n      // let ourselves know we played a video\n      yield lib.stateWithMsgNoWait('Played a video!', state);\n    } else {\n      yield lib.stateWithMsgNoWait('Failed to play a video using the standard DOM methods', state);\n    }\n  }\n  return lib.stateWithMsgNoWait('Done!', state);\n}\n\nexport const metadata = {\n  name: 'myBehavior',\n  match: {\n    regex: /^(?:https?:\\/\\/(?:www\\.)?)?:myAwesomeWebSite.com.*$/,\n  },\n  description: 'It does really cool stuff',\n};\n\nexport const isBehavior = true;\n```\n\n## Development Workflow\n\n### Automated\n\nThe simplest way to both develop and run a behavior on the target page is to use the provided behavior runner cli and a run configuration file ([more details](./cli.html#runner-command)).\n\nTo help you get started a behavior run configuration file, `behavior-run-config.yml` found at the root of this project, has been provided for you.\n\nBy using the provided configuration file all that is required is to change two fields:\n\n- behavior: the path to your new behavior in the behavior directory of this project\n- url: the url of the page your behavior should be run in\n\nOnce you have changed those two you fields you can start the build and run process by either executing one of the following from the root directory of this project\n\n - `./bin/cli runner -c behavior-run-config.yml`\n - `./bin/cli-runner -c behavior-run-config.yml`\n\nThe command will launch a Chrome/Chromium browser installed on your computer, build the behavior, and then run it until completion.\n\nWhile the behavior is being run or the behavior has run to completion and a change has been detected to the behavior \nor any of the files it includes, it will be rebuilt and re-run automatically.\n\n### Manual\n\nTo build the behavior execute the following command `./bin/cli-behaviors -b ./behaviors/<path to your behavior>`.\nOnce the command exits the behavior ready to be run can be found at `./dist/<behavior name>.js` or you can copy the path displayed\nin the output of the build command.\n\nThe next step is to copy the contents of the generated file into the browser and run it.\n\nThe generated file contains JavaScript that will setup the behavior for running using an utility class exposed on `window` as `$WBBehaviorRunner$`.\n\nShown below are the ways provided for you to manually run the behavior by the utility class.\n\n```js\n/* automatic running, chose 1 method */\n(async () => {\n  for await (const state of $WBBehaviorRunner$.autoRunIter()) { \n    console.log(state); \n  }\n\n  /* or */ \n  await $WBBehaviorRunner$.autoRun({logging: true});\n  \n  /* or */ \n  await $WBBehaviorRunner$.autoRunWithDelay({logging: true});\n})();\n\n/* manually initiate each step of the behavior */\n(async () => {\n  while (true) {\n    const state  = await $WBBehaviorRunner$.step();\n    console.log(state);\n    if (state.done) break;\n  }\n})();\n```\n\nThe `autoRunIter` function accepts a single optional argument delayAmount (number), which is a time value in milliseconds that will be applied after each action (step) of the behavior.\n\nBoth the `autoRun` and `autoRunWithDelay` methods accept a single optional argument options (object) with one exception, `autoRunWithDelay` defaults to applying a one second delay after each action if no delay was specified.\n\nThe full configuration options for these two methods are displayed below \n  - delayAmount (number, defaults to 1000):  Time value in milliseconds representing how much time should be waited after initiating a behavior's step\n  - noOutlinks (boolean, defaults to true): Should the collection of outlinks be disabled when running the behavior\n  - logging (boolean, defaults to true): Should information the behavior sends be displayed\n\nIf you use one of the three way to \"automatically\" run the behavior and you wish to pause it while it is running set `window.$WBBehaviorPaused` to true and to un-pause it set `window.$WBBehaviorPaused` to false.\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/john/WebstormProjects/wr-behaviors/manual/build-system.md",
    "name": "./manual/build-system.md",
    "content": "# Build System \n\n## Overview\n\nThe behavior build process has three phases\n- Initialization \n- Collection\n- Building\n\n\n## Initialization\n\nInitialization has three steps\n1. Ultimate build configuration\n2. Building what resolution\n3. Ensuring the necessary build directory structure exists\n\n\n#### Ultimate build configuration\n\nThe ultimate build configuration is created in combination with user supplied cli options using the following steps\n\n 1. If a config was specified using `-c, --config` it is used \n 2. If the default config exists in the current working directory of the commands it used \n 3. Otherwise the path to the behavior file or dir (`-b, --build [fileOrDir]`) is used and the six config values are set to the project defaults \n\nWhen a config file is used each of the six values from the config file are resolved as follows \n- if the key exists and value is relative, make absolute by resolving it against the directory containing the config file\n- if the key exists and is absolute, use key value\n- if key does not exist use project default value\n  - build, dist: `<directory containing config>/<name>`\n  - lib, tsconfig: projects default value\n  - metadata: placed in current working directory \n  \n \nOnce the ultimate build configuration has been created, the build process proceeds to the next step.\n\n#### Building what resolution\n\nThe determination for what is being built is done using the value for the `-b, --build` cli option and that value can be one of two types\n- `boolean`: build all behaviors found in the value for the `behaviors` key from the supplied build config \n- `string`: path to a directory containing behaviors or a single behavior to be built\n\nWhen the value for build is `boolean`\n- If the directory supplied via the `behaviors` config key exists, the what is being built is that directory and the initialization process contains to the next step\n- Otherwise the directory supplied via the `behaviors` config key does not exist the build process is ended\n\nWhen the value for build is a `string` and an absolute path \n- If the path exists, the what is being built is that directory or file and the initialization process contains to the next step\n- Otherwise the path does not exist the build process is ended\n\nWhen the value for build is a `string` and an relative path, it is resolved in the following order\n1. the value as is resolved using node's relative path resolution algorithm. Note this value is used by other steps if previous ones fail and is denoted as `resolvedPath`\n2. the value as is joined with the supplied configs behavior dir or projects default behavior dir\n3. the value as is joined with the the current working directory\n4. `resolvedPath` joined with the supplied configs behavior dir or projects default behavior dir\n5. `resolvedPath` joined with the current working directory\n\nIf any of the absolute paths described above exist, the what is being built is the resolved path and the initialization process contains to the next step otherwise the build process is ended\n\n#### Ensuring the necessary build directory structure exists\n\nThe final step in the initialization process is to ensure that the `build` and `dist` directories exist.\n\nThese values may differ from the names used previously only when they are supplied by the user in a build config file.\n\nThe `build` directory is used to hold intermediate files used by the build system in order to setup the behavior for final building and usage by other tools such as our own running system.\n\nAny setup in order to facilitate running the behavior is done here.\n\nThe `dist` directory is where the built, bundled, behaviors are placed alongside their metadata if configured to do so.\n\n\n## Collection\n\nThe collection phase operates in one of two modes\n- `single behavior`: when the `what is being built` path resolves to file \n- `multi-behavior`: when the `what is being built` path resolves to a directory\n\nThe primary difference between modes is that `multi-behavior` mode considers every file contained in the directory and its descendant directories.\n\nBoth modes use the same means in determining if a file is indeed a behavior which is as follows\n- the file is an es module\n- has a `metadata` or `metaData` named export \n- has a `isBehavior` named export    \n\nOnce the behavior(s) have been collected a report is printed stating how many behaviors were found and if any of the files considered partially met the requirements for collection. \n\n**Note**: Both the collection and building phases share modes with the mode operating under set by the collection phase. \n\n## Building\n\nThe building phase can be described in the following steps:\n1. Extract behaviors metadata\n2. Create the behavior's intermediate file in the configured `build` directory\n3. Use build behavior using rollup, built behavior placed in configured `dist` directory\n4. Once all behaviors have been built generate behavior metadata.\n\n\nThe previous steps are applied to all behaviors returned by the collection phase\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/john/WebstormProjects/wr-behaviors/manual/cli.md",
    "name": "./manual/cli.md",
    "content": "# CLI\n\nA cli is provided to help you use this project.\n\nThe commands available to you are displayed below \n\n```\n$ ./bin/cli --help\n\nUsage: cli <command> [options]\n\nOptions:\n  -V, --version                        output the version number\n  -h, --help                           output usage information\n\nCommands:\n  api [options]                        Start the behavior api sever\n  behaviors [options]                  Build and or validate behaviors, or generate their metadata\n  newBehavior [options]                Create a new behavior\n  runner [options] <path-to-behavior>  Run and or build a behaviors\n  stdlib [options]                     Commands specific to working with the behavior's std library\n  help [cmd]                           display help for [cmd]\n```\n\nThe cli provides four commands `api`, `behaviors`, `runner`, and `stdlib` and each command has its own options.\n\n\n## API command\nThe api command allows you to start a server for serving your built behaviors.\n\nTo run the behavior api server execute `./bin/cli api --build-behaviors`. \n\nThis will start the api server after all behaviors provided by wr-behaviors have been built. \n\nIf you have already built the behaviors using the `behaviors` command provided by the cli then you may omit the `--build-behaviors` flag. \n\nOnce the server is started the following endpoints are available\n\n- `/behavior?<match how>`: endpoint for retrieving a behavior's code\n- `/info?<match how>`: endpoint for retrieving a behavior's metadata\n- `/info-list?<match how>`: endpoint for retrieving the metadata for all behavior's that match\n- `/info-all`: endpoint for retrieving the metadata for every behavior\n\n**match how**\n - `name=<name of the behavior>`\n - `url=<URL of page a behavior matches>`\n\nThe full options that available for use with this command are show below.\n \n```\n$ ./bin/cli api --help\n\nUsage: cli-api [options]\n\nOptions:\n  -V, --version                        output the version number\n  -p, --port [port]                    The port the api server is to bind to (default: 3030)\n  -h, --host [host]                    The host address the server is listen on (default: \"127.0.0.1\")\n  -b, --behaviorDir [behaviorDir]      The path to the directory containing the build behaviors (default: \"<cwd>/dist\")\n  -m, --behaviorMetadata [medataPath]  The path to the behavior metadata (default: \"<cwd>/dist/behaviorMetadata.js\")\n  --build-behaviors                    Should the api server build the behaviors for starting up\n  -w, --workers [numWorkers]           How many behavior lookup workers should be spawned (default: 2)\n  -h, --help                           output usage information\n```\n\nSome configuration of the api server can be done via the environment variables listed below\n- `BEHAVIOR_API_HOST`: the host the api server will use (e.g. 127.0.0.1)\n- `BEHAVIOR_API_PORT`: the port the api server will listen on (e.g. 3030)\n- `WR_BEHAVIOR_DIR`: path to the directory containing the built behaviors\n- `WR_BEHAVIOR_METADATA_PATH`: path to the behavior metadata file\n- `BUILD_BEHAVIORS`: should the api server build the behaviors before starting\n- `NUM_WORKERS`: how many lookup workers should be spawned\n\n## Build command\nTo build the behaviors made available by the project execute `./bin/cli behaviors -b`.\n\nThis will build the behaviors using the behavior config file located in the root of this project.\n\nThe built behaviors, along with a behavior metadata file (`behaviorMetadata.js`), can be found in the `dist` directory which will be created for you if it does not exist in the root of this project.\n\nThe full options that available for use with this command are show below.\n\n```\n$ ./bin/cli build --help\n\nUsage: cli-build [options]\n\nOptions:\n  -V, --version                    output the version number\n  -v, --validate [fileOrDir]       \n  -c, --config [configPath]        Path to the behavior config file (default: \"<cwd>/dist/behavior-config.yml\")\n  -b, --build [fileOrDir]          Build a behaviors or all behaviors contained within a directory (default: true)\n  -w, --watch [behaviorFileOrDir]  Watch the files, and their imports, in the build directory for re-bundling on changes (placed in dist directory)\n  --metadata [dumpDir]             Generate behavior metadata, optionally supplying a path to directory where metadata is to be placed. Defaults to current working directory\n  -h, --help                       output usage information\n```\n\nThe config file has six keys and should specified in the config as `key: value`\n- `behaviors`: path to the directory containing the un-built behaviors\n- `lib`: path to the directory containing the provided behavior library or own library\n- `build`: path to the directory where the intermediate files will be placed (for running using Webrecorders system)\n- `dist`: path to directory where the fully built behaviors\n- `tsconfig`: path to the typescript configuration file used to provide behavior inspection and validation\n- `metadata`: path to where the behaviors metadata will be placed (either full path to file or directory path)\n  \n**Note**: Values can be relative path values as long as they are relative to the directory containing the config file. \n\nA default is provided for you and can be found in the root of the project `<path to project>/behavior-config.yml` and is the config file this command looks for (in the current working directory) if one is supplied using the `-c, --config` option.\n\nWhen using the default config file this command can be used to build all behaviors using `./bin/cli behaviors -b`\notherwise, you will need specify your own config `./bin/cli behaviors -c <path to your config> -b`\n\nFor more details concerning the internals of the build process consult the documentation for the [build system](https://github.com/webrecorder/behaviors/wiki/Build-System).\n\n## New behavior command\nThe newBehavior command provides a simple way to create a new behavior by generating a new file in the behavior directory containing the required boiler plate. \n\nExecuting `./bin/cli newBehavior awesomeBehavior` will create a new behavior file `awesomeBehavior.js` located in the behavior directory.\n\nThe full options that are available are displayed below.\n\n```\n$ ./bin/cli newBehavior \nUsage: cli-newBehavior [options] <behavior file name>\n\nOptions:\n  -V, --version               output the version number\n  -d, --dir <directory name>  The new behavior will be created in the supplied directory name within the behaviors directory\n  -h, --help                  output usage information\n```\n\n## Runner command\n\nThe runner command allows you to automatically run a behavior on a specified URL using a Chrome/Chromium browser installed on your machine.\n\nThe full options that are available are displayed below.\n\n```\n$ ./bin/cli help runner\n\nUsage: cli-runner [options] [path-to-behavior]\n\nOptions:\n  -V, --version                                output the version number\n  --build-config [behavior build config path]  Path to the behavior config file (default: \"<cwd>/behavior-config.yml\")\n  -c, --config [run config path]               Path to a behavior's run config file\n  -r, --run                                    Builds and runs the behavior\n  -w, --watch                                  Watches the behavior for changes rebuilding and running the behavior on change\n  --run-built                                  Runs a previously built behavior\n  -s, --slowmo <amount>                        How much slow mo (delay) should be used between behavior steps\n  -t, --run-timeout <amount>                   Maximum amount of time a behavior will run\n  -e, --chromeEXE <chrome executable>          The chrome executable to be launched rather than attempting to discover / choose the best version of chrome installed\n  -u, --url <url>                              URL of the page to run the behavior on\n  -h, --help                                   output usage information\n```\n\nPlease note that in order to provide automatic running of behaviors, this command must be able to launch the Chrome/Chromium browser. In other words, an already running instance of Chrome/Chromium can not be used.\n\nThe simplest way to use this command is through the usage of a config file (yaml format) and can be supplied using the `-c` or `--config` flags like so `./bin/cli runner -c <path to run config.yaml>`.\n\nAn example run config is provided for you and can found in the root of this project (behavior-run-config.yml).  \n\nThe config file has seven keys and should specified in the config as `key: value`\n- `buildConfig` (required): path to the behavior build config\n- `behavior` (required): path to the behavior to be run\n- `url` (required): the URL the behavior will be run on\n- `mode` (optional): The available modes are\n    - `build-watch`: build and run the behavior, rebuilds and restarts the behavior on changes to the behavior\n    - `build`: build and run the behavior once (default mode)\n    - `built`: just run the previously built behavior\n- `chromeEXE` (optional): Chrome/Chromium executable path or command name to be used to launch (defaults to finding acceptable installed executable)\n- `timeout` (optional): time value in seconds indicating the maximum length of time the behavior will run\n- `slomo` (optional): time value in seconds indicating how long to wait before initiating the next action of the behavior\n\n## STDLIB command\n\nThe stdlib command exists as an utility for generating the provided behavior utility library's `index.js` file or to create a bundle of all provided library function for debugging.\n\nThe file name of the generated debug script is `libOnWindow.js` and is placed in root dir of the project.\n\nThe full options that are available are displayed below.\n\n```\n$ ./bin/cli help stdlib\n\nUsage: cli-stdlib [options]\n\nOptions:\n  -V, --version   output the version number\n  --gen-index     Generate the behavior's standard library's index file\n  --debug-script  Generate a script that exposes the entirety of the behavior's standard library on window\n  -h, --help      output usage information\n```\n\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/john/WebstormProjects/wr-behaviors/manual/premade-behaviors.md",
    "name": "./manual/premade-behaviors.md",
    "content": "# Pre-made Behaviors\n\n## Autoscroll\n\n### Applies to\n\nPages that do not have a predefined behavior for them\n\n### Behavior\nAutomatically scroll down the page and captures any embedded content. If more content loads, scrolling will continue until autopilot is stopped by user.\n\n### Specifics\n\nThe discovery of media is done by considering the rendered HTML of page at the current scroll position and the playing of the discovered media is done using [operations](https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/play) defined for HTML media elements. If the page requires a more specific action to be performed in order to play its media, the behavior may fail to play the media and in this case, a more specific behavior should be made in order to handle this condition.\n\n\n## Instagram\n\n### Gotchas\nInstagram changes their CSS class names frequently which can potentially cause the behaviors to not be able to view/play media content until they are updated.\n\nVideo posts require application logic to be played consistently.\nGifs are shown via the video element and actual videos are streamed. \n\n*Note data request politeness (1 img = 4 requests)*\n\n### Stories\nRequires the viewer to be logged in\n\nLogged in state detected if the “logged-in” CSS class is present or the login/sign-up element are not present \n\n### User (not own feed)\nUpdated: 2019-07-15T22:29:05\n\n#### Applies to\n- `https://(www.)instagram.com/[user name](/)`\n- `https://(www.)instagram.com/[user name](/?query-string)`\n- `https://(www.)instagram.com/[user name](/tagged)(/)`\n\n#### Behavior\n\n- View stories if able\n- View each post currently visible\n- If not stopping condition: wait for more rows indefinitely*\n\n#### Viewing stories\n\nAs previously mentioned, a logged in user. \nIf there are selected stories (profile picture is clickable) they are viewed first \nIf there are normal stories to be viewed they are viewed\n\n#### Viewing posts\n\nVideo post (gif, traditional video)\n- video is played and a wait for the user agent to determine if the video can play through all the way is done\n\nPhoto post\n - no “special” action other than view\n\nMultiple media post\n - each part of the multi-post is viewed \n - if video media is contained the video post action is performed before moving to the next part \n - otherwise photo post action is performed\n\nAll post types\n - all comments and replies to comments are loaded\n\n#### Stopping condition\nSince instagram is a react application we attempt to extract the “redux store” in order to determine the number of posts by the user and to listen for application state changes that indicate if there are additional “pages” (more posts) to be retrieved.\n\nIf extraction of the “redux store” fails or application internals have changed we fall back to a rudimentary post counting scheme.\nWhen not using store the wait for more post rows to be rendered is limited to 1 minute\n\nThe completion condition can be expressed as follows\nStore extraction has not failed: There are no more pages to be retrieved and the current row of posts does not have a next sibling\nStore extraction failed: The number of posts viewed is >= number of posts by the user and the current row of posts does not have a next sibling\n\n\n\n### Individual Post\n\n#### Applies to\n - `https://(www.)instagram.com/p/[post-id](/)`\n\nBehavior\nThe actions of this behavior are described in the Viewing posts section of the Instagram User behavior\n\n\n### Own Feed\n\n**Note**: Requires logged in viewer\n\nUnlike viewing of some other users posts the viewing of own feed posts is limited due to instagram not displaying the viewed post in a popup rather you are taken to post page\n\n#### Applies to\n- `https://(www.)instagram.com(/)`\n\n#### Behavior\n\nView stories if any are to be had\n\nFor each rendered post: \n  - perform actions described in the Viewing posts section of the Instagram User behavior with one exception, comments cannot be viewed\n If stopping condition not met wait for more posts to be loaded at maximum 45 seconds\n\n#### Stopping condition\n \nThe currently viewed post has no next sibling after 45 seconds\n\n## Twitter\n\n### Gotchas\nTweet embeds although sometimes viewable inline by clicking on them are shown using an iframe that the behavior does not have access to \n\nAudio video tweets are streamed and if the media is of significant length waiting for them to become fully loaded may take the entire length of the video or a significantly long period of time (5+ minutes)\n\n### Timeline\nApplies to\n - `https://(www.)twitter.com(/)`  -- Note this requires logged in\n - `https://(www.)twitter.com/[user-name](/)`\n\n#### Behavior\nIf the viewed page is marked as sensitive, reveal page\n\nFor each rendered tweet\n  - If tweet marked as sensitive reveal it\n  - If tweet has video play it\n\nOpen tweet\n - If tweet has replies or apart of thread view comments thread parts\n\nIf stopping condition is not met wait for more tweets to be loaded\n \n#### Stopping condition\nThe currently viewed tweet does not have a sibling and the pre-rendered stream end or stream failed are made visible\n\n\n### HashTags\n\n#### Applies to\n - `https://(www.)twitter.com/hashtag/[hash-tag](remaining-URL-parts)*`\n\n#### Behavior\nFor each rendered tweet\n - If tweet marked as sensitive reveal it\n - If tweet has video play it\n - Open tweet\n   - If tweet has replies or apart of thread view comments thread parts\n\nIf stopping condition is not met wait for more tweets to be loaded and repeat\n\n#### Stopping condition\nThe currently viewed tweet does not have a sibling and the pre-rendered stream end or stream failed are made visible\n\n\n## Youtube Video\n\n### Applies to\n - https://(www.)youtube.com/watch?v=[remaining-URL-parts]+  \n\n### Behavior\nLoads the videos additional information\n\nPlays the video\n\nClicks show more replies until all replies have been loaded (if there were replies)\n\n",
    "static": true,
    "access": "public"
  }
]