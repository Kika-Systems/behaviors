[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 49,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "src/.external-webapi.js",
    "static": true,
    "longname": "src/.external-webapi.js~CanvasRenderingContext2D",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 50,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "src/.external-webapi.js",
    "static": true,
    "longname": "src/.external-webapi.js~DocumentFragment",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 51,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "src/.external-webapi.js",
    "static": true,
    "longname": "src/.external-webapi.js~Element",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 52,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "src/.external-webapi.js",
    "static": true,
    "longname": "src/.external-webapi.js~Event",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 53,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "src/.external-webapi.js",
    "static": true,
    "longname": "src/.external-webapi.js~Node",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 54,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "src/.external-webapi.js",
    "static": true,
    "longname": "src/.external-webapi.js~NodeList",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 55,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "src/.external-webapi.js",
    "static": true,
    "longname": "src/.external-webapi.js~XMLHttpRequest",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 56,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "src/.external-webapi.js",
    "static": true,
    "longname": "src/.external-webapi.js~AudioContext",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "src/behavior-wrapper-plugin.js",
    "content": "const prettier = require('prettier');\n\nconst prettierOpts = { singleQuote: true, parser: 'babylon' };\n\nfunction makeWrapper(code) {\n  return prettier.format(\n    `(function runner(xpg, debug = false) { \n${code} \n})($x);`,\n    prettierOpts\n  );\n}\n\n/**\n * @param {{noWrapperFiles: Set<string>, defaultWrapperFN: function(code: string): string, customWrappers: Map<string, function(code: string): string>}} opts\n * @return {Object}\n */\nmodule.exports = function wrapperPlugin(opts) {\n  return {\n    intro: '(function runner(xpg, debug) { ',\n    outro: '})($x, false);',\n    name: 'wr-behavior-wrapper',\n    renderChunk(code, options, outputOpts) {\n      if (opts.noWrapperFiles.has(options.fileName)) {\n        return code;\n      }\n      if (opts.customWrappers.has(options.fileName)) {\n        return opts.customWrappers.get(options.fileName)(code);\n      }\n      return opts.defaultWrapperFN(code);\n    }\n  };\n};\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/behavior-wrapper-plugin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "prettier",
    "memberof": "src/behavior-wrapper-plugin.js",
    "static": true,
    "longname": "src/behavior-wrapper-plugin.js~prettier",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behavior-wrapper-plugin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "name": "prettierOpts",
    "memberof": "src/behavior-wrapper-plugin.js",
    "static": true,
    "longname": "src/behavior-wrapper-plugin.js~prettierOpts",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behavior-wrapper-plugin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"singleQuote\": boolean, \"parser\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 60,
    "kind": "function",
    "name": "makeWrapper",
    "memberof": "src/behavior-wrapper-plugin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/behavior-wrapper-plugin.js~makeWrapper",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behavior-wrapper-plugin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "code",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 61,
    "kind": "function",
    "name": "exports",
    "memberof": "src/behavior-wrapper-plugin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/behavior-wrapper-plugin.js~exports",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behavior-wrapper-plugin.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "{noWrapperFiles: Set<string>, defaultWrapperFN: function(code: string): string, customWrappers: Map<string, function(code: string): string>}"
        ],
        "spread": false,
        "optional": false,
        "name": "opts",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 62,
    "kind": "file",
    "name": "src/behaviors/autoscroll.js",
    "content": "import { domCompletePromise, setIntervalP } from '../utils/delays';\nimport { findAllMediaAndPlay } from '../utils/general';\nimport { collectOutlinksFrom } from '../utils/outlinkCollector';\n\n/*!return!*/ domCompletePromise().then(() => {\n  let scrollingTO = 2000;\n  let lastScrolled = Date.now();\n  let maxScroll = Math.max(\n    document.body.scrollHeight,\n    document.documentElement.scrollHeight\n  );\n  let scrollCount = 0;\n  return new Promise((resolve, reject) => {\n    let scrollerInterval = setIntervalP(() => {\n      let scrollPos = window.scrollY + window.innerHeight;\n      if (scrollCount < 50) {\n        maxScroll = Math.max(\n          document.body.scrollHeight,\n          document.documentElement.scrollHeight\n        );\n        scrollCount += 1;\n      }\n      if (scrollPos < maxScroll) {\n        window.scrollBy(0, 300);\n        lastScrolled = Date.now();\n      }\n      collectOutlinksFrom(document);\n      findAllMediaAndPlay();\n      if (!lastScrolled || Date.now() - lastScrolled > scrollingTO) {\n        if (scrollerInterval === undefined) {\n          return;\n        }\n        clearInterval(scrollerInterval);\n        scrollerInterval = undefined;\n        resolve();\n      } else if (scrollPos >= maxScroll) {\n        clearInterval(scrollerInterval);\n        scrollerInterval = undefined;\n        resolve();\n      }\n    }, 500);\n  });\n});\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/behaviors/autoscroll.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 63,
    "kind": "file",
    "name": "src/behaviors/collectOutlinks.js",
    "content": "(function outLinks() {\n  const ignore = [\n    'about:',\n    'data:',\n    'mailto:',\n    'javascript:',\n    'js:',\n    '{',\n    '*',\n    'ftp:',\n    'tel:'\n  ];\n  const good = { 'http:': true, 'https:': true };\n  const links = [];\n  const linksSeen = new Set();\n  const urlParer = new URL('about:blank');\n\n  function shouldIgnore(test) {\n    let ignored = false;\n    let i = ignore.length;\n    while (i--) {\n      if (test.startsWith(ignore[i])) {\n        ignored = true;\n        break;\n      }\n    }\n    if (!ignored) {\n      let parsed = true;\n      try {\n        urlParer.href = test;\n      } catch (error) {\n        parsed = false;\n      }\n      return !(parsed && good[urlParer.protocol]);\n    }\n    return ignored;\n  }\n\n  const found = document.querySelectorAll('a[href], area[href]');\n  let href;\n  let i = found.length;\n  while (i--) {\n    let href = found[i].href.trim();\n    if (href && !linksSeen.has(href) && !shouldIgnore(href)) {\n      linksSeen.add(href);\n      links.push(href);\n    }\n  }\n  return links;\n})();\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/behaviors/collectOutlinks.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 64,
    "kind": "file",
    "name": "src/behaviors/facebookNewsFeed.js",
    "content": "import {\n  maybePolyfillXPG,\n  markElemAsVisited,\n  maybeRemoveElemById\n} from '../utils/dom';\nimport { delay } from '../utils/delays';\nimport { scrollToElemOffsetWithDelay, canScrollMore } from '../utils/scrolls';\nimport { collectOutlinksFrom } from '../utils/outlinkCollector';\nimport initRunnableBehavior from '../shared/behaviorRunner';\n\n/**\n * @desc This xpath query is based on the fact that the first item in a FB news feed\n * is fixed and all other feed items are lazily loaded.  Each lazily loaded feed item\n * has `id=\"hyperfeed_story_id_5b90323a90ce80648983726\"` but we do not care about\n * the `_[a-z0-9]+` portion of it. Like how we handle twitter feeds, a visited it is\n * marked by adding `$wrvisited$` to its classList so we look for elements with ids\n * starting with `hyperfeed_story_id` and their classList does not contain `$wrvisited$`\n * @type {string}\n */\nconst feedItemSelector =\n  '//div[starts-with(@id,\"hyperfeed_story_id\") and not(contains(@class, \"wrvistited\"))]';\n\nconst scrollDelay = 1500;\n\nconst removeAnnoyingElemId = 'pagelet_growth_expanding_cta';\n\n/**\n * @desc See description for {@link getFeedItems}\n * @param {HTMLElement} elem - The current\n * @returns {boolean}\n */\nfunction newsFeedItemFilter(elem) {\n  return elem.offsetTop !== 0;\n}\n\n/**\n * @desc Views each entry in a FB news.\n * (S1) Build initial set of to be feed items\n * (S2) For each feed item visible at current scroll position:\n *      - mark as visited\n *      - scroll into view\n *      - yield feed item\n * (S3) Once all feed items at pager set have been visited:\n *      - wait for FB to load more feed items (if any more are to be had)\n *      - if FB has added more feed items add them to the to be visited set\n * (S4) If we have more feed items to visit and can scroll more:\n *      - GOTO S2\n * @param {function (string, HTMLElement?): Array<HTMLElement>} xpathG\n * @returns {AsyncIterator<HTMLElement>}\n */\nasync function* makeIterator(xpathG) {\n  const getFeedItems = query => xpathG(query).filter(newsFeedItemFilter);\n  let feedItems = getFeedItems(feedItemSelector);\n  let feedItem;\n  do {\n    while (feedItems.length > 0) {\n      feedItem = feedItems.shift();\n      await scrollToElemOffsetWithDelay(feedItem, scrollDelay);\n      markElemAsVisited(feedItem);\n      collectOutlinksFrom(feedItem);\n      yield feedItem;\n    }\n    feedItems = getFeedItems(feedItemSelector);\n    if (feedItems.length === 0) {\n      await delay();\n      feedItems = getFeedItems(feedItemSelector);\n    }\n  } while (feedItems.length > 0 && canScrollMore());\n}\n\nlet removedAnnoying = maybeRemoveElemById(removeAnnoyingElemId);\nconst actionIter = makeIterator(maybePolyfillXPG(x));\n\nfunction postStep(state) {\n  if (!removedAnnoying) {\n    removedAnnoying = maybeRemoveElemById(removeAnnoyingElemId);\n  }\n  return state.done;\n}\n\ninitRunnableBehavior(window, actionIter, postStep);\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/behaviors/facebookNewsFeed.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 65,
    "kind": "variable",
    "name": "feedItemSelector",
    "memberof": "src/behaviors/facebookNewsFeed.js",
    "static": true,
    "longname": "src/behaviors/facebookNewsFeed.js~feedItemSelector",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/facebookNewsFeed.js",
    "importStyle": null,
    "description": "This xpath query is based on the fact that the first item in a FB news feed\nis fixed and all other feed items are lazily loaded.  Each lazily loaded feed item\nhas `id=\"hyperfeed_story_id_5b90323a90ce80648983726\"` but we do not care about\nthe `_[a-z0-9]+` portion of it. Like how we handle twitter feeds, a visited it is\nmarked by adding `$wrvisited$` to its classList so we look for elements with ids\nstarting with `hyperfeed_story_id` and their classList does not contain `$wrvisited$`",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 66,
    "kind": "variable",
    "name": "scrollDelay",
    "memberof": "src/behaviors/facebookNewsFeed.js",
    "static": true,
    "longname": "src/behaviors/facebookNewsFeed.js~scrollDelay",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/facebookNewsFeed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 67,
    "kind": "variable",
    "name": "removeAnnoyingElemId",
    "memberof": "src/behaviors/facebookNewsFeed.js",
    "static": true,
    "longname": "src/behaviors/facebookNewsFeed.js~removeAnnoyingElemId",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/facebookNewsFeed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 68,
    "kind": "function",
    "name": "newsFeedItemFilter",
    "memberof": "src/behaviors/facebookNewsFeed.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/behaviors/facebookNewsFeed.js~newsFeedItemFilter",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/facebookNewsFeed.js",
    "importStyle": null,
    "description": "See description for {@link getFeedItems}",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The current"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 69,
    "kind": "function",
    "name": "makeIterator",
    "memberof": "src/behaviors/facebookNewsFeed.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "src/behaviors/facebookNewsFeed.js~makeIterator",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/facebookNewsFeed.js",
    "importStyle": null,
    "description": "Views each entry in a FB news.\n(S1) Build initial set of to be feed items\n(S2) For each feed item visible at current scroll position:\n     - mark as visited\n     - scroll into view\n     - yield feed item\n(S3) Once all feed items at pager set have been visited:\n     - wait for FB to load more feed items (if any more are to be had)\n     - if FB has added more feed items add them to the to be visited set\n(S4) If we have more feed items to visit and can scroll more:\n     - GOTO S2",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AsyncIterator<HTMLElement>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function (string, HTMLElement?): Array<HTMLElement>"
        ],
        "spread": false,
        "optional": false,
        "name": "xpathG",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterator<HTMLElement>"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 70,
    "kind": "variable",
    "name": "removedAnnoying",
    "memberof": "src/behaviors/facebookNewsFeed.js",
    "static": true,
    "longname": "src/behaviors/facebookNewsFeed.js~removedAnnoying",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/facebookNewsFeed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 71,
    "kind": "variable",
    "name": "actionIter",
    "memberof": "src/behaviors/facebookNewsFeed.js",
    "static": true,
    "longname": "src/behaviors/facebookNewsFeed.js~actionIter",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/facebookNewsFeed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "postStep",
    "memberof": "src/behaviors/facebookNewsFeed.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/behaviors/facebookNewsFeed.js~postStep",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/facebookNewsFeed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 73,
    "kind": "file",
    "name": "src/behaviors/facebookUserFeed.js",
    "content": "import {\n  addBehaviorStyle,\n  markElemAsVisited,\n  maybePolyfillXPG,\n  maybeRemoveElemById\n} from '../utils/dom';\nimport {\n  canScrollMore,\n  scrollDownByElemHeightWithDelay,\n  scrollIntoViewWithDelay\n} from '../utils/scrolls';\nimport { scrollIntoViewAndClickWithDelay } from '../utils/clicks';\nimport { collectOutlinksFrom } from '../utils/outlinkCollector';\nimport initRunnableBehavior from '../shared/behaviorRunner';\n\naddBehaviorStyle('.wr-debug-visited {border: 6px solid #3232F1;}');\n\nconst userTimelineSelector =\n  '//div[contains(@class, \"userContentWrapper\") and not(contains(@class, \"wrvistited\"))]';\n\nconst moreReplies = 'a[role=\"button\"].UFIPagerLink';\nconst repliesToRepliesA = 'a[role=\"button\"].UFICommentLink';\nconst repliesToRepliesSpan =\n  'span.UFIReplySocialSentenceLinkText.UFIReplySocialSentenceVerified';\n\nconst removeAnnoyingElemId = 'pagelet_growth_expanding_cta';\nconst delayTime = 1500;\nconst loadDelayTime = 3000;\n\nasync function* clickRepliesToReplies(tlItem) {\n  let rToR = tlItem.querySelectorAll(repliesToRepliesA);\n  let i = 0;\n  let length = rToR.length;\n  let rtr;\n  while (i < length) {\n    rtr = rToR[i];\n    if (debug) rtr.classList.add('wr-debug-visited');\n    await scrollIntoViewAndClickWithDelay(rtr, delayTime);\n    yield rtr;\n    i += 1;\n  }\n  rToR = tlItem.querySelectorAll(repliesToRepliesA);\n  if (rToR.length) {\n    i = 0;\n    length = rToR.length;\n    while (i < length) {\n      rtr = rToR[i];\n      if (debug) rtr.classList.add('wr-debug-visited');\n      await scrollIntoViewAndClickWithDelay(rtr, delayTime);\n      yield rToR;\n      i += 1;\n    }\n  }\n}\n\nasync function* makeIterator(xpathGenerator) {\n  let timelineItems = xpathGenerator(userTimelineSelector);\n  let tlItem;\n  let replies;\n  do {\n    while (timelineItems.length > 0) {\n      tlItem = timelineItems.shift();\n      if (debug) tlItem.classList.add('wr-debug-visited');\n      await scrollIntoViewWithDelay(tlItem, delayTime);\n      markElemAsVisited(tlItem);\n      collectOutlinksFrom(tlItem);\n      yield tlItem;\n      replies = tlItem.querySelector(moreReplies);\n      if (replies) {\n        if (debug) replies.classList.add('wr-debug-visited');\n        await scrollIntoViewAndClickWithDelay(replies, delayTime);\n        yield replies;\n      }\n      yield* clickRepliesToReplies(tlItem);\n    }\n    timelineItems = xpathGenerator(userTimelineSelector);\n    if (timelineItems.length === 0) {\n      await scrollDownByElemHeightWithDelay(tlItem, loadDelayTime);\n      timelineItems = xpathGenerator(userTimelineSelector);\n    }\n  } while (timelineItems.length > 0 && canScrollMore());\n}\n\nlet removedAnnoying = maybeRemoveElemById(removeAnnoyingElemId);\nconst actionIter = makeIterator(maybePolyfillXPG(x));\n\nfunction postStep(state) {\n  if (!removedAnnoying) {\n    removedAnnoying = maybeRemoveElemById(removeAnnoyingElemId);\n  }\n  return state.done;\n}\n\ninitRunnableBehavior(window, actionIter, postStep);\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/behaviors/facebookUserFeed.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 74,
    "kind": "variable",
    "name": "userTimelineSelector",
    "memberof": "src/behaviors/facebookUserFeed.js",
    "static": true,
    "longname": "src/behaviors/facebookUserFeed.js~userTimelineSelector",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/facebookUserFeed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 75,
    "kind": "variable",
    "name": "moreReplies",
    "memberof": "src/behaviors/facebookUserFeed.js",
    "static": true,
    "longname": "src/behaviors/facebookUserFeed.js~moreReplies",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/facebookUserFeed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 76,
    "kind": "variable",
    "name": "repliesToRepliesA",
    "memberof": "src/behaviors/facebookUserFeed.js",
    "static": true,
    "longname": "src/behaviors/facebookUserFeed.js~repliesToRepliesA",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/facebookUserFeed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 77,
    "kind": "variable",
    "name": "repliesToRepliesSpan",
    "memberof": "src/behaviors/facebookUserFeed.js",
    "static": true,
    "longname": "src/behaviors/facebookUserFeed.js~repliesToRepliesSpan",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/facebookUserFeed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 78,
    "kind": "variable",
    "name": "removeAnnoyingElemId",
    "memberof": "src/behaviors/facebookUserFeed.js",
    "static": true,
    "longname": "src/behaviors/facebookUserFeed.js~removeAnnoyingElemId",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/facebookUserFeed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 79,
    "kind": "variable",
    "name": "delayTime",
    "memberof": "src/behaviors/facebookUserFeed.js",
    "static": true,
    "longname": "src/behaviors/facebookUserFeed.js~delayTime",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/facebookUserFeed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "loadDelayTime",
    "memberof": "src/behaviors/facebookUserFeed.js",
    "static": true,
    "longname": "src/behaviors/facebookUserFeed.js~loadDelayTime",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/facebookUserFeed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 81,
    "kind": "function",
    "name": "clickRepliesToReplies",
    "memberof": "src/behaviors/facebookUserFeed.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "src/behaviors/facebookUserFeed.js~clickRepliesToReplies",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/facebookUserFeed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [
      {
        "name": "tlItem",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 82,
    "kind": "function",
    "name": "makeIterator",
    "memberof": "src/behaviors/facebookUserFeed.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "src/behaviors/facebookUserFeed.js~makeIterator",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/facebookUserFeed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "params": [
      {
        "name": "xpathGenerator",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "name": "removedAnnoying",
    "memberof": "src/behaviors/facebookUserFeed.js",
    "static": true,
    "longname": "src/behaviors/facebookUserFeed.js~removedAnnoying",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/facebookUserFeed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 84,
    "kind": "variable",
    "name": "actionIter",
    "memberof": "src/behaviors/facebookUserFeed.js",
    "static": true,
    "longname": "src/behaviors/facebookUserFeed.js~actionIter",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/facebookUserFeed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 85,
    "kind": "function",
    "name": "postStep",
    "memberof": "src/behaviors/facebookUserFeed.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/behaviors/facebookUserFeed.js~postStep",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/facebookUserFeed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 86,
    "kind": "file",
    "name": "src/behaviors/instagramUser.js",
    "content": "import {\n  waitForAdditionalElemChildren,\n  waitForAndSelectElement\n} from '../utils/delays';\nimport { scrollIntoViewWithDelay } from '../utils/scrolls';\nimport {\n  clickWithDelay,\n  selectElemAndClick,\n  selectElemFromAndClickWithDelay,\n  selectFromAndClickUntilNullWithDelay\n} from '../utils/clicks';\nimport { addBehaviorStyle, maybePolyfillXPG, qs } from '../utils/dom';\nimport { noExceptPlayMediaElement } from '../utils/media';\nimport { collectOutlinksFrom } from '../utils/outlinkCollector';\nimport {\n  locationEquals,\n  waitForHistoryManipToChangeLocation\n} from '../utils/browser';\nimport { selectors, videoPostSelectors, xpathQ } from '../shared/instagram';\nimport initRunnableBehavior from '../shared/behaviorRunner';\n\naddBehaviorStyle('.wr-debug-visited {border: 6px solid #3232F1;}');\n\nconst multiImageClickOpts = { safety: 30 * 1000, delayTime: 1000 };\n\n/**\n * @param {Element | Node | HTMLElement} post\n * @return {boolean}\n */\nfunction isVideoPost(post) {\n  let i = 0;\n  let len = videoPostSelectors.length;\n  for (; i < len; ++i) {\n    if (post.querySelector(videoPostSelectors[i]) != null) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {Element | Node | HTMLElement} post\n */\nfunction isMultiImagePost(post) {\n  return post.querySelector(selectors.multipleImages) != null;\n}\n\n/**\n * @desc Opens the selected post. The post element is a div that contains\n * a direct child that is an anchor tag. The anchor tag is the clickable\n * element not the div. Once the post has been determined to be opened,\n * returns the relevant elements of the open post.\n * @param {Element | Node} post\n * @return {Promise<{portal: Element, displayDiv: Element}>}\n */\nasync function openPost(post) {\n  // click the first child of the post div (a tag)\n  let maybeA = post.childNodes[0];\n  if (!(maybeA instanceof HTMLAnchorElement)) {\n    maybeA = qs('a', maybeA);\n  }\n  if (!maybeA) {\n    throw new Error('booo');\n  }\n  await clickWithDelay(maybeA);\n  // wait for the post portal to open and get a reference to that dom element\n  const portal = await waitForAndSelectElement(\n    document,\n    selectors.postPopupArticle\n  );\n  // get a reference to the post div in the portal\n  const displayDiv = portal.querySelector(selectors.multiImageDisplayDiv);\n  return { portal, displayDiv };\n}\n\n/**\n * @desc Closes the post\n * @param xpg\n * @return {Promise<void>}\n */\nasync function closePost(xpg) {\n  const close = xpg(xpathQ.postPopupClose)[0];\n  if (close) {\n    await clickWithDelay(close);\n  }\n}\n\n/**\n * @desc Executes the xpath query that selects the load more comments button\n * @param xpg\n * @return {Array<Element>}\n */\nfunction getMoreComments(xpg) {\n  // first check for load more otherwise return the results of querying\n  // for show all comments\n  const moreComments = xpg(xpathQ.loadMoreComments);\n  if (moreComments.length === 0) return xpg(xpathQ.showAllComments);\n  return moreComments;\n}\n\n/**\n * @desc The load more comments button, depending on the number of comments,\n * will contain two variations of text (see {@link xpathQ} for those two\n * variations). Calls {@link getMoreComments} and clicks the button returned\n * as the result of the xpath query until it returns an zero length array.\n * @param xpg\n * @return {Promise<void>}\n */\nasync function loadAllComments(xpg) {\n  let moreComments = getMoreComments(xpg);\n  while (moreComments.length) {\n    await clickWithDelay(moreComments[0], 1500);\n    moreComments = getMoreComments(xpg);\n  }\n}\n\n/**\n * @desc Handles the multi-image posts\n * @param {Element | Node | HTMLElement} post\n * @param xpg\n */\nasync function handleMultiImagePost(post, xpg) {\n  // open the post and get references to the DOM structure of the open post\n  const { portal } = await openPost(post);\n  // display each image by clicking the right chevron (next image)\n  await selectFromAndClickUntilNullWithDelay(\n    portal,\n    selectors.rightChevron,\n    multiImageClickOpts\n  );\n  // load all comments and close the post\n  await loadAllComments(xpg);\n  await closePost(xpg);\n}\n\n/**\n * @desc Handles posts that contain videos\n * @param {Element | Node | HTMLElement} post\n * @param xpg\n */\nasync function handleVideoPost(post, xpg) {\n  // open the post and get references to the DOM structure of the open post\n  const { displayDiv } = await openPost(post);\n  // select and play the video. The video is a mp4 that is already loaded\n  // need to only play it for the length of time we are visiting the post\n  // just in case\n  await selectElemFromAndClickWithDelay(displayDiv, 'a[role=\"button\"]');\n  // load all comments and close the post\n  await loadAllComments(xpg);\n  await closePost(xpg);\n}\n\n/**\n * @desc Handles posts that are not multi-image or videos\n * @param {Element | Node | HTMLElement} post\n * @param xpg\n */\nasync function handleCommentsOnly(post, xpg) {\n  // open the post and get references to the DOM structure of the open post\n  await openPost(post);\n  // load all comments and close the post\n  await loadAllComments(xpg);\n  await closePost(xpg);\n}\n\nasync function handlePost(post, xpg) {\n  collectOutlinksFrom(post);\n  // scroll it into view and check what type of post it is\n  await scrollIntoViewWithDelay(post);\n  if (isMultiImagePost(post)) {\n    await handleMultiImagePost(post, xpg);\n  } else if (isVideoPost(post)) {\n    await handleVideoPost(post, xpg);\n  } else {\n    await handleCommentsOnly(post, xpg);\n  }\n}\n\nasync function* viewStories() {\n  // get the original full URI of the browser\n  const originalLoc = window.location.href;\n  // click the first story\n  const firstStoryClicked = selectElemAndClick(selectors.openStories);\n  if (!firstStoryClicked) return; // no storied if\n  // history manipulation will change the browser URI so\n  // we must wait for that to happen\n  await waitForHistoryManipToChangeLocation(originalLoc);\n  let wasClicked;\n  let videoButton;\n  // stories are sorta on autoplay but we should speed things up\n  let toBeClicked = qs(selectors.nextStory);\n  // we will continue to speed up autoplay untill the next story\n  // button does not exist or we are done (window.location.href === originalLoc)\n  while (!locationEquals(originalLoc) && toBeClicked != null) {\n    wasClicked = await clickWithDelay(toBeClicked);\n    // if the next story part button was not clicked\n    // or autoplay is finished we are done\n    if (!wasClicked || locationEquals(originalLoc)) break;\n    videoButton = qs(selectors.storyVideo);\n    if (videoButton) {\n      // this part of a story is video content\n      let maybeVideo = qs('video');\n      // click the button if not already playing\n      if (maybeVideo && maybeVideo.paused) {\n        await clickWithDelay(videoButton);\n      }\n      // safety check due to autoplay\n      if (locationEquals(originalLoc)) break;\n      // force play the video if not already playing\n      if (maybeVideo && maybeVideo.paused) {\n        await noExceptPlayMediaElement(maybeVideo);\n      }\n      // safety check due to autoplay\n      if (locationEquals(originalLoc)) break;\n    }\n    yield;\n    toBeClicked = qs(selectors.nextStory);\n  }\n}\n\nasync function* instagramActionIter(xpg) {\n  // maybe view all stories\n  yield* viewStories();\n  const scrolDiv = qs(selectors.postTopMostContainer);\n  const reactGarbageDiv = scrolDiv.firstElementChild;\n  if (reactGarbageDiv == null) {\n    // we got nothing at this point, HALP!!!\n    return;\n  }\n  // this div is the parent element of the sliding window\n  // of posts\n  const postRowContainer = reactGarbageDiv.firstElementChild;\n  let posts;\n  let i = 0;\n  let numPosts;\n  // a row has three posts\n  let row = postRowContainer.firstElementChild;\n  // if we go too fast with viewing the currently loaded\n  // posts we will encounter a loading phase so we\n  // need to know how many are currently loaded\n  let numLoadedRows = postRowContainer.children.length;\n  while (row != null) {\n    if (debug) {\n      row.classList.add('wr-debug-visited');\n    }\n    await scrollIntoViewWithDelay(row);\n    yield;\n    posts = row.childNodes;\n    numPosts = posts.length;\n    // for each post in the row\n    for (i = 0; i < numPosts; ++i) {\n      // handle the post\n      await handlePost(posts[i], xpg);\n      yield;\n    }\n    numLoadedRows = postRowContainer.children.length;\n    // if we are in a loading phase the current row\n    // has no element sibling so we are going to wait\n    // for it to be loaded, checking for #children updates\n    // 7 times\n    if (row.nextElementSibling == null) {\n      await waitForAdditionalElemChildren(postRowContainer, numLoadedRows);\n    }\n    row = row.nextElementSibling;\n  }\n}\n\ninitRunnableBehavior(window, instagramActionIter(maybePolyfillXPG(xpg)));\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/behaviors/instagramUser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 87,
    "kind": "variable",
    "name": "multiImageClickOpts",
    "memberof": "src/behaviors/instagramUser.js",
    "static": true,
    "longname": "src/behaviors/instagramUser.js~multiImageClickOpts",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/instagramUser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "{\"safety\": *, \"delayTime\": number}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "isVideoPost",
    "memberof": "src/behaviors/instagramUser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/behaviors/instagramUser.js~isVideoPost",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/instagramUser.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element ",
          " Node ",
          " HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "post",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 89,
    "kind": "function",
    "name": "isMultiImagePost",
    "memberof": "src/behaviors/instagramUser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/behaviors/instagramUser.js~isMultiImagePost",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/instagramUser.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element ",
          " Node ",
          " HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "post",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "openPost",
    "memberof": "src/behaviors/instagramUser.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/behaviors/instagramUser.js~openPost",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/instagramUser.js",
    "importStyle": null,
    "description": "Opens the selected post. The post element is a div that contains\na direct child that is an anchor tag. The anchor tag is the clickable\nelement not the div. Once the post has been determined to be opened,\nreturns the relevant elements of the open post.",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element ",
          " Node"
        ],
        "spread": false,
        "optional": false,
        "name": "post",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<{portal: Element, displayDiv: Element}>"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "function",
    "name": "closePost",
    "memberof": "src/behaviors/instagramUser.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/behaviors/instagramUser.js~closePost",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/instagramUser.js",
    "importStyle": null,
    "description": "Closes the post",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "xpg",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 92,
    "kind": "function",
    "name": "getMoreComments",
    "memberof": "src/behaviors/instagramUser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/behaviors/instagramUser.js~getMoreComments",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/instagramUser.js",
    "importStyle": null,
    "description": "Executes the xpath query that selects the load more comments button",
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "xpg",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<Element>"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 93,
    "kind": "function",
    "name": "loadAllComments",
    "memberof": "src/behaviors/instagramUser.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/behaviors/instagramUser.js~loadAllComments",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/instagramUser.js",
    "importStyle": null,
    "description": "The load more comments button, depending on the number of comments,\nwill contain two variations of text (see {@link xpathQ} for those two\nvariations). Calls {@link getMoreComments} and clicks the button returned\nas the result of the xpath query until it returns an zero length array.",
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "xpg",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "handleMultiImagePost",
    "memberof": "src/behaviors/instagramUser.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/behaviors/instagramUser.js~handleMultiImagePost",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/instagramUser.js",
    "importStyle": null,
    "description": "Handles the multi-image posts",
    "lineNumber": 122,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element ",
          " Node ",
          " HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "post",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "xpg",
        "description": ""
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 95,
    "kind": "function",
    "name": "handleVideoPost",
    "memberof": "src/behaviors/instagramUser.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/behaviors/instagramUser.js~handleVideoPost",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/instagramUser.js",
    "importStyle": null,
    "description": "Handles posts that contain videos",
    "lineNumber": 141,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element ",
          " Node ",
          " HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "post",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "xpg",
        "description": ""
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 96,
    "kind": "function",
    "name": "handleCommentsOnly",
    "memberof": "src/behaviors/instagramUser.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/behaviors/instagramUser.js~handleCommentsOnly",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/instagramUser.js",
    "importStyle": null,
    "description": "Handles posts that are not multi-image or videos",
    "lineNumber": 158,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element ",
          " Node ",
          " HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "post",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "xpg",
        "description": ""
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 97,
    "kind": "function",
    "name": "handlePost",
    "memberof": "src/behaviors/instagramUser.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/behaviors/instagramUser.js~handlePost",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/instagramUser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 166,
    "undocument": true,
    "params": [
      {
        "name": "post",
        "types": [
          "*"
        ]
      },
      {
        "name": "xpg",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 98,
    "kind": "function",
    "name": "viewStories",
    "memberof": "src/behaviors/instagramUser.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "src/behaviors/instagramUser.js~viewStories",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/instagramUser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 179,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "instagramActionIter",
    "memberof": "src/behaviors/instagramUser.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "src/behaviors/instagramUser.js~instagramActionIter",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/instagramUser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 221,
    "undocument": true,
    "params": [
      {
        "name": "xpg",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 100,
    "kind": "file",
    "name": "src/behaviors/pinterest.js",
    "content": "import { addBehaviorStyle, maybePolyfillXPG } from '../utils/dom';\nimport { scrollIntoViewWithDelay } from '../utils/scrolls';\nimport {\n  reactInstanceFromDOMElem,\n  reactInstancesFromElements\n} from '../utils/reactUtils';\nimport { collectOutlinksFrom } from '../utils/outlinkCollector';\nimport initRunnableBehavior from '../shared/behaviorRunner';\n\naddBehaviorStyle('.wr-debug-visited {border: 6px solid #3232F1;}');\n\nasync function* consumePins(renderedPins) {\n  let pin;\n  let i = 0;\n  let numPins = renderedPins.length;\n  for (; i < numPins; ++i) {\n    // scroll post row into view\n    pin = renderedPins[i];\n    collectOutlinksFrom(pin.node);\n    await scrollIntoViewWithDelay(pin.node);\n    // pin.node.classList.add('wr-debug-visited');\n    yield pin.node;\n  }\n}\n\nconst selectors = {\n  gridImage: 'div[data-grid-item]',\n  gridContainer: 'div.gridCentered > div > div > div'\n};\n\nfunction getGridContainer() {\n  const firstChild = document.querySelector(selectors.gridImage);\n  const container = firstChild.parentElement;\n  if (container !== document.querySelector(selectors.gridContainer)) {\n    throw new Error('wrong container');\n  }\n  return container;\n}\n\nasync function* iteratePins(xpathGenerator) {\n  const seenPins = new Set();\n  const pinContainerR = reactInstanceFromDOMElem(getGridContainer());\n  const keySelector = key => {\n    const select = !seenPins.has(key);\n    if (select) {\n      seenPins.add(key);\n    }\n    return select;\n  };\n  const getRenderedPins = () =>\n    reactInstancesFromElements(pinContainerR.stateNode.childNodes, keySelector);\n  let currentPostRows = getRenderedPins();\n  // consume rows until all posts have been loaded\n  do {\n    yield* consumePins(currentPostRows);\n    currentPostRows = getRenderedPins();\n  } while (currentPostRows.length > 0);\n  // finish consuming the rows until we are done\n  if (currentPostRows.length === 0) {\n    currentPostRows = getRenderedPins();\n  }\n  do {\n    yield* consumePins(currentPostRows);\n    currentPostRows = getRenderedPins();\n  } while (currentPostRows.length > 0);\n}\n\ninitRunnableBehavior(window, iteratePins(maybePolyfillXPG(xpg)));\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/behaviors/pinterest.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 101,
    "kind": "function",
    "name": "consumePins",
    "memberof": "src/behaviors/pinterest.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "src/behaviors/pinterest.js~consumePins",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/pinterest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "renderedPins",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "name": "selectors",
    "memberof": "src/behaviors/pinterest.js",
    "static": true,
    "longname": "src/behaviors/pinterest.js~selectors",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/pinterest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "{\"gridImage\": string, \"gridContainer\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 103,
    "kind": "function",
    "name": "getGridContainer",
    "memberof": "src/behaviors/pinterest.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/behaviors/pinterest.js~getGridContainer",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/pinterest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 104,
    "kind": "function",
    "name": "iteratePins",
    "memberof": "src/behaviors/pinterest.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "src/behaviors/pinterest.js~iteratePins",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/pinterest.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "xpathGenerator",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 105,
    "kind": "file",
    "name": "src/behaviors/slideShare.js",
    "content": "import {\n  canAcessIf,\n  findTag,\n  maybePolyfillXPG,\n  qs,\n  qsa,\n  id\n} from '../utils/dom';\nimport { clickInContext, clickInContextWithDelay } from '../utils/clicks';\nimport { sendAutoFetchWorkerURLs } from '../utils/general';\nimport { addOutlink } from '../utils/outlinkCollector';\nimport initRunnableBehavior from '../shared/behaviorRunner';\n\nconst selectors = {\n  iframeLoader: 'iframe.ssIframeLoader',\n  nextSlide: 'btnNext',\n  slideContainer: 'div.slide_container',\n  showingSlide: 'div.slide.show',\n  divSlide: 'div.slide',\n  sectionSlide: 'section.slide',\n  slideImg: 'img.slide_image',\n  relatedDecks: 'div.tab.related-tab',\n  moreComments: 'a.j-more-comments'\n};\n\nconst isSlideShelfIF = _if => _if.src.endsWith('/slideshelf');\n\n/**\n * @param {Document | Element} doc\n * @param {string} slideSelector\n * @return {number}\n */\nfunction getNumSlides(doc, slideSelector) {\n  const slideContainer = qs(selectors.slideContainer, doc);\n  if (slideContainer) {\n    return qsa(slideSelector, doc).length;\n  }\n  return -1;\n}\n\n/**\n * @param {Document} doc\n */\nfunction extracAndPreserveSlideImgs(doc) {\n  const imgs = qsa(selectors.slideImg, doc);\n  const len = imgs.length;\n  const toFetch = [];\n  let i = 0;\n  let imgDset;\n  for (; i < len; ++i) {\n    imgDset = imgs[i].dataset;\n    if (imgDset) {\n      toFetch.push(imgDset.full);\n      toFetch.push(imgDset.normal);\n      toFetch.push(imgDset.small);\n    }\n  }\n  sendAutoFetchWorkerURLs(toFetch);\n}\n\n/**\n * @param {Window} win\n * @param {Document} doc\n * @param {string} slideSelector\n * @return {Promise<void>}\n */\nasync function consumeSlides(win, doc, slideSelector) {\n  extracAndPreserveSlideImgs(doc);\n  const numSlides = getNumSlides(doc, slideSelector);\n  let i = 1;\n  for (; i < numSlides; ++i) {\n    clickInContext(id(selectors.nextSlide, doc), win);\n  }\n  await clickInContextWithDelay(id(selectors.nextSlide, doc), win);\n}\n\n/**\n * @return {AsyncIterableIterator<*>}\n */\nasync function* handleSlideDeck() {\n  yield await consumeSlides(window, document, selectors.sectionSlide);\n}\n\n/**\n * @param {Window} win\n * @param {Document} doc\n * @return {AsyncIterableIterator<*>}\n */\nasync function* doSlideShowInFrame(win, doc) {\n  const decks = qsa('li', qs(selectors.relatedDecks, doc));\n  const numDecks = decks.length;\n  const deckIF = qs(selectors.iframeLoader, doc);\n  yield await consumeSlides(\n    deckIF.contentWindow,\n    deckIF.contentDocument,\n    selectors.divSlide\n  );\n  let i = 1;\n  for (; i < numDecks; ++i) {\n    await new Promise(r => {\n      const loaded = () => {\n        deckIF.removeEventListener('load', loaded);\n        r();\n      };\n      deckIF.addEventListener('load', loaded);\n      addOutlink(decks[i].firstElementChild);\n      clickInContext(decks[i].firstElementChild, win);\n    });\n    yield await consumeSlides(\n      deckIF.contentWindow,\n      deckIF.contentDocument,\n      selectors.divSlide\n    );\n  }\n}\n\n/**\n * @return {AsyncIterableIterator<*>}\n */\nfunction init() {\n  if (canAcessIf(qs(selectors.iframeLoader))) {\n    // 'have iframe loader in top'\n    return doSlideShowInFrame(window, document);\n  }\n  const maybeIF = findTag(maybePolyfillXPG(xpg), 'iframe', isSlideShelfIF);\n  if (maybeIF && canAcessIf(maybeIF)) {\n    // have slideself loader in top\n    return doSlideShowInFrame(maybeIF.contentWindow, maybeIF.contentDocument);\n  }\n  // have slides in top\n  return handleSlideDeck();\n}\n\ninitRunnableBehavior(window, init());\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/behaviors/slideShare.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 106,
    "kind": "variable",
    "name": "selectors",
    "memberof": "src/behaviors/slideShare.js",
    "static": true,
    "longname": "src/behaviors/slideShare.js~selectors",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/slideShare.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{\"iframeLoader\": string, \"nextSlide\": string, \"slideContainer\": string, \"showingSlide\": string, \"divSlide\": string, \"sectionSlide\": string, \"slideImg\": string, \"relatedDecks\": string, \"moreComments\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 107,
    "kind": "function",
    "name": "isSlideShelfIF",
    "memberof": "src/behaviors/slideShare.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/behaviors/slideShare.js~isSlideShelfIF",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/slideShare.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "_if",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 108,
    "kind": "function",
    "name": "getNumSlides",
    "memberof": "src/behaviors/slideShare.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/behaviors/slideShare.js~getNumSlides",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/slideShare.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "Document ",
          " Element"
        ],
        "spread": false,
        "optional": false,
        "name": "doc",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "slideSelector",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "extracAndPreserveSlideImgs",
    "memberof": "src/behaviors/slideShare.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/behaviors/slideShare.js~extracAndPreserveSlideImgs",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/slideShare.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "Document"
        ],
        "spread": false,
        "optional": false,
        "name": "doc",
        "description": ""
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "consumeSlides",
    "memberof": "src/behaviors/slideShare.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/behaviors/slideShare.js~consumeSlides",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/slideShare.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "Window"
        ],
        "spread": false,
        "optional": false,
        "name": "win",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Document"
        ],
        "spread": false,
        "optional": false,
        "name": "doc",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "slideSelector",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "function",
    "name": "handleSlideDeck",
    "memberof": "src/behaviors/slideShare.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "src/behaviors/slideShare.js~handleSlideDeck",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/slideShare.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 80,
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterableIterator<*>"
      ],
      "spread": false,
      "description": ""
    },
    "params": [],
    "ignore": true
  },
  {
    "__docId__": 112,
    "kind": "function",
    "name": "doSlideShowInFrame",
    "memberof": "src/behaviors/slideShare.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "src/behaviors/slideShare.js~doSlideShowInFrame",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/slideShare.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "Window"
        ],
        "spread": false,
        "optional": false,
        "name": "win",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Document"
        ],
        "spread": false,
        "optional": false,
        "name": "doc",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterableIterator<*>"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 113,
    "kind": "function",
    "name": "init",
    "memberof": "src/behaviors/slideShare.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/behaviors/slideShare.js~init",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/slideShare.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 120,
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterableIterator<*>"
      ],
      "spread": false,
      "description": ""
    },
    "params": [],
    "ignore": true
  },
  {
    "__docId__": 114,
    "kind": "file",
    "name": "src/behaviors/soundCloudEmbed.js",
    "content": "import { delay } from '../utils/delays';\nimport { scrollIntoViewWithDelay } from '../utils/scrolls';\nimport { selectElemFromAndClick } from '../utils/clicks';\nimport { addBehaviorStyle, maybePolyfillXPG } from '../utils/dom';\nimport initRunnableBehavior from '../shared/behaviorRunner';\n\naddBehaviorStyle('.wr-debug-visited {border: 6px solid #3232F1;}');\n\nconst xpQueries = {\n  soundListItem:\n    '//li[contains(@class, \"soundsList__item\") and not(contains(@class, \"wrvistited\"))]'\n};\n\nconst selectors = {\n  soundItem: 'div.soundItem',\n  singleTrackEmbedPlay: 'button[role=\"application\"].playButton'\n};\n\nfunction isMultiTrackEmbed(xpathGenerator) {\n  return xpathGenerator(xpQueries.soundListItem).length > 0;\n}\n\nasync function* playMultiTracks(xpathGenerator) {\n  let snapShot = xpathGenerator(xpQueries.soundListItem);\n  let soundItem;\n  let i, len;\n  if (snapShot.length === 0) return;\n  do {\n    len = snapShot.length;\n    i = 0;\n    for (; i < len; ++i) {\n      soundItem = snapShot[i];\n      soundItem.classList.add('wrvistited');\n      await scrollIntoViewWithDelay(soundItem);\n      yield selectElemFromAndClick(soundItem, selectors.soundItem);\n    }\n    snapShot = xpathGenerator(xpQueries.soundListItem);\n    if (snapShot.length === 0) {\n      await delay();\n      snapShot = xpathGenerator(xpQueries.soundListItem);\n    }\n  } while (snapShot.length > 0);\n}\n\nasync function* embedTrackIterator(xpathGenerator) {\n  if (isMultiTrackEmbed(xpathGenerator)) {\n    yield* playMultiTracks(xpathGenerator);\n  } else {\n    yield selectElemFromAndClick(document, selectors.singleTrackEmbedPlay);\n  }\n}\n\ninitRunnableBehavior(\n  window,\n  embedTrackIterator(maybePolyfillXPG(xpg)),\n  state => ({\n    done: state.done,\n    wait: state.value\n  })\n);\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/behaviors/soundCloudEmbed.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 115,
    "kind": "variable",
    "name": "xpQueries",
    "memberof": "src/behaviors/soundCloudEmbed.js",
    "static": true,
    "longname": "src/behaviors/soundCloudEmbed.js~xpQueries",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/soundCloudEmbed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{\"soundListItem\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 116,
    "kind": "variable",
    "name": "selectors",
    "memberof": "src/behaviors/soundCloudEmbed.js",
    "static": true,
    "longname": "src/behaviors/soundCloudEmbed.js~selectors",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/soundCloudEmbed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{\"soundItem\": string, \"singleTrackEmbedPlay\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 117,
    "kind": "function",
    "name": "isMultiTrackEmbed",
    "memberof": "src/behaviors/soundCloudEmbed.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/behaviors/soundCloudEmbed.js~isMultiTrackEmbed",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/soundCloudEmbed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "xpathGenerator",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 118,
    "kind": "function",
    "name": "playMultiTracks",
    "memberof": "src/behaviors/soundCloudEmbed.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "src/behaviors/soundCloudEmbed.js~playMultiTracks",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/soundCloudEmbed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "xpathGenerator",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 119,
    "kind": "function",
    "name": "embedTrackIterator",
    "memberof": "src/behaviors/soundCloudEmbed.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "src/behaviors/soundCloudEmbed.js~embedTrackIterator",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/soundCloudEmbed.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "params": [
      {
        "name": "xpathGenerator",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 120,
    "kind": "file",
    "name": "src/behaviors/soundcloudArtist.js",
    "content": "import { scrollIntoViewWithDelay } from '../utils/scrolls';\nimport {\n  selectElemFromAndClick,\n  selectElemFromAndClickWithDelay\n} from '../utils/clicks';\nimport { delay } from '../utils/delays';\nimport {\n  addBehaviorStyle,\n  markElemAsVisited,\n  maybePolyfillXPG\n} from '../utils/dom';\nimport { collectOutlinksFrom } from '../utils/outlinkCollector';\nimport initRunnableBehavior from '../shared/behaviorRunner';\n\naddBehaviorStyle('.wr-debug-visited {border: 6px solid #3232F1;}');\n\nconst xpQueries = {\n  soundItem:\n    '//div[@class=\"userStreamItem\" and not(contains(@class, \"wrvistited\"))]'\n};\n\nconst selectors = {\n  loadMoreTracks: 'a.compactTrackList__moreLink',\n  playSingleTrack: 'a.playButton',\n  multiTrackItem: 'li.compactTrackList__item',\n  playMultiTrackTrack: 'div.compactTrackListItem.clickToPlay'\n};\n\nfunction needToLoadMoreTracks(elem) {\n  return elem.querySelector(selectors.loadMoreTracks) != null;\n}\n\nasync function* playMultipleTracks(elem) {\n  const tracks = elem.querySelectorAll(selectors.multiTrackItem);\n  let i = 0;\n  let len = tracks.length;\n  if (len === 0) {\n    yield false;\n    return;\n  }\n  let playable;\n  for (; i < len; ++i) {\n    playable = tracks[i];\n    markElemAsVisited(playable);\n    if (debug) playable.classList.add('wr-debug-visited');\n    await scrollIntoViewWithDelay(playable);\n    yield selectElemFromAndClick(playable, selectors.playMultiTrackTrack);\n  }\n}\n\nasync function* vistSoundItems(xpathGenerator) {\n  let snapShot = xpathGenerator(xpQueries.soundItem);\n  let soundItem;\n  let i, len;\n  if (snapShot.length === 0) return;\n  do {\n    len = snapShot.length;\n    i = 0;\n    for (; i < len; ++i) {\n      soundItem = snapShot[i];\n      markElemAsVisited(soundItem);\n      collectOutlinksFrom(soundItem);\n      if (debug) soundItem.classList.add('wr-debug-visited');\n      await scrollIntoViewWithDelay(soundItem);\n      if (needToLoadMoreTracks(soundItem)) {\n        await selectElemFromAndClickWithDelay(\n          soundItem,\n          selectors.loadMoreTracks\n        );\n        yield* playMultipleTracks(soundItem);\n      } else {\n        yield selectElemFromAndClick(soundItem, selectors.playSingleTrack);\n      }\n    }\n    snapShot = xpathGenerator(xpQueries.soundItem);\n    if (snapShot.length === 0) {\n      await delay();\n      snapShot = xpathGenerator(xpQueries.soundItem);\n    }\n  } while (snapShot.length > 0);\n}\n\ninitRunnableBehavior(window, vistSoundItems(maybePolyfillXPG(xpg)), state => ({\n  done: state.done,\n  wait: state.value\n}));\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/behaviors/soundcloudArtist.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 121,
    "kind": "variable",
    "name": "xpQueries",
    "memberof": "src/behaviors/soundcloudArtist.js",
    "static": true,
    "longname": "src/behaviors/soundcloudArtist.js~xpQueries",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/soundcloudArtist.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "{\"soundItem\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 122,
    "kind": "variable",
    "name": "selectors",
    "memberof": "src/behaviors/soundcloudArtist.js",
    "static": true,
    "longname": "src/behaviors/soundcloudArtist.js~selectors",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/soundcloudArtist.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "{\"loadMoreTracks\": string, \"playSingleTrack\": string, \"multiTrackItem\": string, \"playMultiTrackTrack\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 123,
    "kind": "function",
    "name": "needToLoadMoreTracks",
    "memberof": "src/behaviors/soundcloudArtist.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/behaviors/soundcloudArtist.js~needToLoadMoreTracks",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/soundcloudArtist.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "elem",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 124,
    "kind": "function",
    "name": "playMultipleTracks",
    "memberof": "src/behaviors/soundcloudArtist.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "src/behaviors/soundcloudArtist.js~playMultipleTracks",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/soundcloudArtist.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [
      {
        "name": "elem",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 125,
    "kind": "function",
    "name": "vistSoundItems",
    "memberof": "src/behaviors/soundcloudArtist.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "src/behaviors/soundcloudArtist.js~vistSoundItems",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/soundcloudArtist.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [
      {
        "name": "xpathGenerator",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 126,
    "kind": "file",
    "name": "src/behaviors/twitterHashTags.js",
    "content": "import {\n  addBehaviorStyle,\n  addClass,\n  hasClass,\n  id,\n  markElemAsVisited,\n  qs,\n  removeClass,\n  xpathSnapShot\n} from '../utils/dom';\nimport { scrollIntoViewWithDelay } from '../utils/scrolls';\nimport { delay, waitForAdditionalElemChildren } from '../utils/delays';\nimport { collectOutlinksFrom } from '../utils/outlinkCollector';\nimport { clickAndWaitFor, selectElemFromAndClick } from '../utils/clicks';\nimport {\n  elemIds,\n  overlayTweetXpath,\n  selectors,\n  threadedTweetXpath\n} from '../shared/twitter';\nimport initRunnableBehavior from '../shared/behaviorRunner';\n\naddBehaviorStyle(\n  '.wr-debug-visited {border: 6px solid #3232F1;} .wr-debug-visited-thread-reply {border: 6px solid green;} .wr-debug-visited-overlay {border: 6px solid pink;} .wr-debug-click {border: 6px solid red;}'\n);\n\n// const logger = getNoneNukedConsole();\n\n/**\n * @desc Clicks (views) the currently visited tweet\n * @param {HTMLElement|Element} tweetContainer\n * @return {Promise<?Element>}\n */\nasync function openTweet(tweetContainer) {\n  const permalinkPath = tweetContainer.dataset.permalinkPath;\n  // logger.log(`tweet has perlinkPath = ${permalinkPath}`);\n  const wasClicked = await clickAndWaitFor(tweetContainer, () =>\n    document.baseURI.endsWith(permalinkPath)\n  );\n  if (wasClicked) {\n    // the overlay was opened\n    const fullTweetOverlay = id(elemIds.permalinkOverlay);\n    if (debug) {\n      addClass(fullTweetOverlay, 'wr-debug-visited-overlay');\n    }\n    return fullTweetOverlay;\n  }\n  return null;\n}\n\n/**\n * @desc Closes the overlay representing viewing a tweet\n * @return {Promise<boolean>}\n */\nasync function closeTweetOverlay(originalBaseURI) {\n  const overlay = qs(selectors.closeFullTweetSelector);\n  if (!overlay) return Promise.resolve(false);\n  if (debug) addClass(overlay, 'wr-debug-click');\n  return clickAndWaitFor(overlay, () => {\n    const done = document.baseURI === originalBaseURI;\n    if (done && debug) {\n      removeClass(overlay, 'wr-debug-click');\n    }\n    return done;\n  });\n}\n\nasync function* vistReplies(fullTweetOverlay) {\n  let snapShot = xpathSnapShot(overlayTweetXpath, fullTweetOverlay);\n  let aTweet;\n  let i, len;\n  // logger.log(`we have ${snapShot.snapshotLength} replies`);\n  if (snapShot.snapshotLength === 0) return;\n  do {\n    len = snapShot.snapshotLength;\n    i = 0;\n    while (i < len) {\n      aTweet = snapShot.snapshotItem(i);\n      // logger.log('visting reply or thread tweet', aTweet);\n      markElemAsVisited(aTweet);\n      collectOutlinksFrom(aTweet);\n      if (debug) {\n        addClass(aTweet, 'wr-debug-visited-thread-reply');\n      }\n      await scrollIntoViewWithDelay(aTweet);\n      yield false;\n      i += 1;\n    }\n    snapShot = xpathSnapShot(overlayTweetXpath, fullTweetOverlay);\n    if (snapShot.snapshotLength === 0) {\n      if (\n        selectElemFromAndClick(fullTweetOverlay, selectors.showMoreInThread)\n      ) {\n        await delay();\n      }\n      snapShot = xpathSnapShot(overlayTweetXpath, fullTweetOverlay);\n    }\n  } while (snapShot.snapshotLength > 0);\n}\n\nasync function* vistThreadedTweet(fullTweetOverlay) {\n  // logger.log('in vistThreadedTweet', fullTweetOverlay);\n  // logger.log('visiting tweets that are apart of the thread');\n  let snapShot = xpathSnapShot(threadedTweetXpath, fullTweetOverlay);\n  let aTweet;\n  let i, len;\n  // logger.log(`we have ${snapShot.snapshotLength} replies`);\n  if (snapShot.snapshotLength === 0) return;\n  do {\n    len = snapShot.snapshotLength;\n    i = 0;\n    while (i < len) {\n      aTweet = snapShot.snapshotItem(i);\n      // logger.log('visting reply or thread tweet', aTweet);\n      markElemAsVisited(aTweet);\n      collectOutlinksFrom(aTweet);\n      if (debug) {\n        addClass(aTweet, 'wr-debug-visited-thread-reply');\n      }\n      await scrollIntoViewWithDelay(aTweet);\n      yield false;\n      i += 1;\n    }\n    snapShot = xpathSnapShot(threadedTweetXpath, fullTweetOverlay);\n    if (snapShot.snapshotLength === 0) {\n      if (\n        selectElemFromAndClick(\n          fullTweetOverlay,\n          selectors.threadedConvMoreReplies\n        )\n      ) {\n        await delay();\n      }\n      snapShot = xpathSnapShot(threadedTweetXpath, fullTweetOverlay);\n    }\n  } while (snapShot.snapshotLength > 0);\n}\n\n/**\n * @param {HTMLLIElement | Element} tweetStreamLI\n * @param {string} originalBaseURI\n * @return {AsyncIterator<boolean>}\n */\nasync function* handleTweet(tweetStreamLI, originalBaseURI) {\n  const notTweet = hasClass(tweetStreamLI, selectors.userProfileInStream);\n  if (notTweet) {\n    if (debug) {\n      addClass(tweetStreamLI, 'wr-debug-visited');\n    }\n    collectOutlinksFrom(tweetStreamLI);\n    await scrollIntoViewWithDelay(tweetStreamLI);\n    yield false;\n    return;\n  }\n\n  const streamTweetDiv = tweetStreamLI.firstElementChild;\n  const tweetContent = qs(selectors.tweetInStreamContent, streamTweetDiv);\n  // logger.log('Tweet content', tweetContent);\n  if (debug) {\n    addClass(streamTweetDiv, 'wr-debug-visited');\n  }\n  const videoContainer = tweetStreamLI.querySelector(\n    'div.AdaptiveMedia-videoContainer'\n  );\n  if (videoContainer != null) {\n    const video = videoContainer.querySelector('video');\n    if (video) {\n      try {\n        await video.play();\n        yield true;\n      } catch (e) {\n        yield false;\n      }\n    }\n  }\n  const footer = qs(selectors.tweetFooterSelector, tweetContent);\n  const replyAction = qs(selectors.replyActionSelector, footer);\n  const replyButton = qs(selectors.replyBtnSelector, replyAction);\n\n  const hasReplies = qs(selectors.noReplySpanSelector, replyButton) == null;\n  const apartOfThread = qs(selectors.threadSelector, tweetContent) != null;\n\n  await scrollIntoViewWithDelay(tweetContent);\n  collectOutlinksFrom(tweetContent);\n  // yield tweet;\n  // logger.log('opening tweet overlay');\n  const tweetPermalinkOverlay = await openTweet(streamTweetDiv);\n  // logger.log(tweetPermalinkOverlay);\n  // logger.log('opened tweet');\n  if (hasReplies) {\n    // logger.log('visiting replies');\n    yield* vistReplies(tweetPermalinkOverlay);\n  } else if (apartOfThread) {\n    yield* vistThreadedTweet(tweetPermalinkOverlay);\n  } else {\n    collectOutlinksFrom(tweetPermalinkOverlay);\n    yield false;\n  }\n  // logger.log('closing tweet overlay');\n  await closeTweetOverlay(originalBaseURI);\n}\n/**\n * @param originalBaseURI\n * @return {AsyncIterableIterator<boolean>}\n */\nasync function* hashTagIterator(originalBaseURI) {\n  const streamItems = qs(selectors.tweetStreamItems);\n  let tweetLI = streamItems.firstElementChild;\n  let numLoadedTweets = streamItems.children.length;\n  while (tweetLI != null) {\n    markElemAsVisited(tweetLI);\n    if (tweetLI.getBoundingClientRect().height !== 0) {\n      if (hasClass(tweetLI, 'AdaptiveSearchTimeline-separationModule')) {\n        await scrollIntoViewWithDelay(tweetLI);\n        collectOutlinksFrom(tweetLI);\n        yield false;\n      } else {\n        yield* handleTweet(tweetLI, originalBaseURI);\n      }\n    }\n    numLoadedTweets = streamItems.children.length;\n    if (tweetLI.nextElementSibling == null) {\n      // logger.log('waiting for more tweets');\n      await waitForAdditionalElemChildren(streamItems, numLoadedTweets);\n    }\n    // logger.log('getting next tweet');\n    tweetLI = tweetLI.nextElementSibling;\n  }\n}\n\ninitRunnableBehavior(window, hashTagIterator(document.baseURI), state => ({\n  done: state.done,\n  wait: !!state.value\n}));\n\n//\n// async function run() {\n//   for await (const tweet of window.$WRTweetIterator$) {\n//     logger.log(tweet);\n//   }\n// }\n//\n// run().catch(error => console.error(error));\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/behaviors/twitterHashTags.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 127,
    "kind": "function",
    "name": "openTweet",
    "memberof": "src/behaviors/twitterHashTags.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/behaviors/twitterHashTags.js~openTweet",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/twitterHashTags.js",
    "importStyle": null,
    "description": "Clicks (views) the currently visited tweet",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "tweetContainer",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<?Element>"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 128,
    "kind": "function",
    "name": "closeTweetOverlay",
    "memberof": "src/behaviors/twitterHashTags.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/behaviors/twitterHashTags.js~closeTweetOverlay",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/twitterHashTags.js",
    "importStyle": null,
    "description": "Closes the overlay representing viewing a tweet",
    "lineNumber": 55,
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": ""
    },
    "params": [
      {
        "name": "originalBaseURI",
        "types": [
          "*"
        ]
      }
    ],
    "ignore": true
  },
  {
    "__docId__": 129,
    "kind": "function",
    "name": "vistReplies",
    "memberof": "src/behaviors/twitterHashTags.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "src/behaviors/twitterHashTags.js~vistReplies",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/twitterHashTags.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [
      {
        "name": "fullTweetOverlay",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 130,
    "kind": "function",
    "name": "vistThreadedTweet",
    "memberof": "src/behaviors/twitterHashTags.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "src/behaviors/twitterHashTags.js~vistThreadedTweet",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/twitterHashTags.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "params": [
      {
        "name": "fullTweetOverlay",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 131,
    "kind": "function",
    "name": "handleTweet",
    "memberof": "src/behaviors/twitterHashTags.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "src/behaviors/twitterHashTags.js~handleTweet",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/twitterHashTags.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 144,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLLIElement ",
          " Element"
        ],
        "spread": false,
        "optional": false,
        "name": "tweetStreamLI",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "originalBaseURI",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterator<boolean>"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 132,
    "kind": "function",
    "name": "hashTagIterator",
    "memberof": "src/behaviors/twitterHashTags.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "src/behaviors/twitterHashTags.js~hashTagIterator",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/twitterHashTags.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 206,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "originalBaseURI",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterableIterator<boolean>"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 133,
    "kind": "file",
    "name": "src/behaviors/twitterTimeline.js",
    "content": "import { delay } from '../utils/delays';\nimport {\n  addBehaviorStyle,\n  markElemAsVisited,\n  maybePolyfillXPG,\n  xpathSnapShot\n} from '../utils/dom';\nimport { canScrollMore, scrollIntoViewWithDelay } from '../utils/scrolls';\nimport { clickAndWaitFor, selectElemFromAndClick } from '../utils/clicks';\nimport { collectOutlinksFrom } from '../utils/outlinkCollector';\nimport { overlayTweetXpath, tweetXpath } from '../shared/twitter';\nimport initRunnableBehavior from '../shared/behaviorRunner';\n\naddBehaviorStyle(\n  '.wr-debug-visited {border: 6px solid #3232F1;} .wr-debug-visited-thread-reply {border: 6px solid green;} .wr-debug-visited-overlay {border: 6px solid pink;} .wr-debug-click {border: 6px solid red;}'\n);\n\n/**\n * An abstraction around interacting with HTML of a tweet in a timeline.\n *\n *  Selector, element breakdown:\n *    div.tweet.js-stream-tweet... (_container)\n *     |- div.content (aTweet, _tweet)\n *         |- div.stream-item-footer (_footer)\n *             |- div.ProfileTweet-action--reply (_tRplyAct)\n *                 |- button[data-modal=\"ProfileTweet-reply\"] (_rplyButton)\n *                     |- span.ProfileTweet-actionCount--isZero (IFF no replied)\n *    |- div.self-thread-tweet-cta\n *        |- a.js-nav.show-thread-link\n */\nconst tweetFooterSelector = 'div.stream-item-footer';\nconst replyActionSelector = 'div.ProfileTweet-action--reply';\nconst noReplySpanSelector = 'span.ProfileTweet-actionCount--isZero';\nconst replyBtnSelector = 'button[data-modal=\"ProfileTweet-reply\"]';\nconst closeFullTweetSelector = 'div.PermalinkProfile-dismiss > span';\nconst threadSelector = 'a.js-nav.show-thread-link';\n\nclass Tweet {\n  /**\n   *\n   * @param {HTMLElement} aTweet - The content div for a tweet in a timeline\n   * @param {string} baseURI - The document.baseURI of the timeline page being viewed\n   */\n  constructor(aTweet, baseURI) {\n    markElemAsVisited(aTweet);\n    this.tweet = aTweet;\n    this.container = aTweet.parentElement;\n    this.dataset = this.container.dataset;\n    this.footer = this.tweet.querySelector(tweetFooterSelector);\n    this.tRplyAct = this.footer.querySelector(replyActionSelector);\n    this.rplyButton = this.tRplyAct.querySelector(replyBtnSelector);\n\n    this.fullTweetOverlay = null;\n\n    /**\n     * @desc If the currently visited tweet has replies then the span with\n     * class `ProfileTweet-actionCount--isZero` must not exist\n     * @type {boolean}\n     * @private\n     */\n    this._hasReplys =\n      this.rplyButton.querySelector(noReplySpanSelector) == null;\n    /**\n     * @desc If the currently visited tweet is apart of a thread,\n     * then an a tag will be present with classes `js-nav.show-thread-link`\n     * @type {boolean}\n     * @private\n     */\n    this._apartThread = this.tweet.querySelector(threadSelector) != null;\n\n    this._baseURI = baseURI;\n  }\n\n  /**\n   * @return {?HTMLVideoElement}\n   */\n  tweetVideo() {\n    const videoContainer = this.tweet.querySelector(\n      'div.AdaptiveMedia-videoContainer'\n    );\n    if (videoContainer != null) {\n      return videoContainer.querySelector('video');\n    }\n    return null;\n  }\n\n  tweetId() {\n    return this.dataset.tweetId;\n  }\n\n  permalinkPath() {\n    return this.dataset.permalinkPath;\n  }\n\n  hasReplys() {\n    return this._hasReplys;\n  }\n\n  apartOfThread() {\n    return this._apartThread;\n  }\n\n  hasRepliedOrInThread() {\n    return this.hasReplys() || this.apartOfThread();\n  }\n\n  /**\n   * @desc Clicks (views) the currently visited tweet\n   * @return {AsyncIterableIterator<boolean>}\n   */\n  async *viewRepliesOrThread() {\n    await this.openFullTweet();\n    yield* this.visitThreadReplyTweets();\n    await this.closeFullTweetOverlay();\n  }\n\n  /**\n   * @return {AsyncIterableIterator<boolean>}\n   */\n  async *viewRegularTweet() {\n    await this.openFullTweet();\n    yield false;\n    await this.closeFullTweetOverlay();\n  }\n\n  /**\n   * @desc Clicks (views) the currently visited tweet\n   * @return {Promise<boolean>}\n   */\n  openFullTweet() {\n    const permalinkPath = this.permalinkPath();\n    return clickAndWaitFor(this.container, () => {\n      const done = document.baseURI.endsWith(permalinkPath);\n      if (done) {\n        this.fullTweetOverlay = document.getElementById('permalink-overlay');\n        if (debug) {\n          this.fullTweetOverlay.classList.add('wr-debug-visited-overlay');\n        }\n      }\n      return done;\n    });\n  }\n\n  /**\n   * @return {AsyncIterableIterator<boolean>}\n   */\n  async *visitThreadReplyTweets() {\n    collectOutlinksFrom(this.fullTweetOverlay);\n    let snapShot = xpathSnapShot(overlayTweetXpath, this.fullTweetOverlay);\n    let aTweet;\n    let i, len;\n    if (snapShot.snapshotLength === 0) return;\n    do {\n      len = snapShot.snapshotLength;\n      i = 0;\n      while (i < len) {\n        aTweet = snapShot.snapshotItem(i);\n        markElemAsVisited(aTweet);\n        if (debug) {\n          aTweet.classList.add('wr-debug-visited-thread-reply');\n        }\n        await scrollIntoViewWithDelay(aTweet);\n        yield false;\n        i += 1;\n      }\n      snapShot = xpathSnapShot(overlayTweetXpath, this.fullTweetOverlay);\n      if (snapShot.snapshotLength === 0) {\n        if (\n          selectElemFromAndClick(\n            this.fullTweetOverlay,\n            'button.ThreadedConversation-showMoreThreadsButton'\n          )\n        ) {\n          await delay();\n        }\n        snapShot = xpathSnapShot(overlayTweetXpath, this.fullTweetOverlay);\n      }\n    } while (snapShot.snapshotLength > 0);\n  }\n\n  /**\n   * @desc Closes the overlay representing viewing a tweet\n   * @return {Promise<boolean>}\n   */\n  closeFullTweetOverlay() {\n    const overlay = document.querySelector(closeFullTweetSelector);\n    if (!overlay) return Promise.resolve(false);\n    if (debug) overlay.classList.add('wr-debug-click');\n    return clickAndWaitFor(overlay, () => {\n      const done = document.baseURI === this._baseURI;\n      if (done && debug) {\n        overlay.classList.remove('wr-debug-click');\n      }\n      return done;\n    });\n  }\n}\n\n/**\n * @desc For a more detailed explanation about the relationship between the xpath\n * query used and the marking of each tweet as visited by this algorithm see the\n * description for {@link tweetXpath}.\n *\n * (S1) Build initial set of to be visited tweets\n * (S2) For each tweet visible at current scroll position:\n *      - mark as visited\n *      - scroll into view\n *      - yield tweet\n *      - if should view full tweet (has replies or apart of thread)\n *        - yield all sub tweets\n * (S3) Once all tweets at current scroll position have been visited:\n *      - wait for Twitter to load more tweets (if any more are to be had)\n *      - if twitter added more tweets add them to the to be visited set\n * (S4) If we have more tweets to visit and can scroll more:\n *      - GOTO S2\n *\n * @param {function(string,): Array<HTMLElement>} xpathQuerySelector\n * @param {string} baseURI - The timelines documents baseURI\n * @return {AsyncIterator<boolean>}\n */\nasync function* timelineIterator(xpathQuerySelector, baseURI) {\n  let tweets = xpathQuerySelector(tweetXpath);\n  let aTweet;\n  do {\n    while (tweets.length > 0) {\n      aTweet = new Tweet(tweets.shift(), baseURI);\n      if (debug) {\n        aTweet.tweet.classList.add('wr-debug-visited');\n      }\n      await scrollIntoViewWithDelay(aTweet.tweet, 500);\n      collectOutlinksFrom(aTweet.tweet);\n      const tweetVideo = aTweet.tweetVideo();\n      if (tweetVideo != null) {\n        try {\n          await tweetVideo.play();\n          yield true;\n        } catch (e) {\n          yield false;\n        }\n      }\n      if (aTweet.hasRepliedOrInThread()) {\n        yield* aTweet.viewRepliesOrThread();\n      } else {\n        yield* aTweet.viewRegularTweet();\n      }\n    }\n    tweets = xpathQuerySelector(tweetXpath);\n    if (tweets.length === 0) {\n      await delay();\n      tweets = xpathQuerySelector(tweetXpath);\n    }\n  } while (tweets.length > 0 && canScrollMore());\n}\n\ninitRunnableBehavior(\n  window,\n  timelineIterator(maybePolyfillXPG(xpg), document.baseURI),\n  state => ({\n    done: state.done,\n    wait: !!state.value\n  })\n);\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/behaviors/twitterTimeline.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 134,
    "kind": "variable",
    "name": "tweetFooterSelector",
    "memberof": "src/behaviors/twitterTimeline.js",
    "static": true,
    "longname": "src/behaviors/twitterTimeline.js~tweetFooterSelector",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/twitterTimeline.js",
    "importStyle": null,
    "description": "An abstraction around interacting with HTML of a tweet in a timeline.\n\n Selector, element breakdown:\n   div.tweet.js-stream-tweet... (_container)\n    |- div.content (aTweet, _tweet)\n        |- div.stream-item-footer (_footer)\n            |- div.ProfileTweet-action--reply (_tRplyAct)\n                |- button[data-modal=\"ProfileTweet-reply\"] (_rplyButton)\n                    |- span.ProfileTweet-actionCount--isZero (IFF no replied)\n   |- div.self-thread-tweet-cta\n       |- a.js-nav.show-thread-link",
    "lineNumber": 31,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 135,
    "kind": "variable",
    "name": "replyActionSelector",
    "memberof": "src/behaviors/twitterTimeline.js",
    "static": true,
    "longname": "src/behaviors/twitterTimeline.js~replyActionSelector",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/twitterTimeline.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 136,
    "kind": "variable",
    "name": "noReplySpanSelector",
    "memberof": "src/behaviors/twitterTimeline.js",
    "static": true,
    "longname": "src/behaviors/twitterTimeline.js~noReplySpanSelector",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/twitterTimeline.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 137,
    "kind": "variable",
    "name": "replyBtnSelector",
    "memberof": "src/behaviors/twitterTimeline.js",
    "static": true,
    "longname": "src/behaviors/twitterTimeline.js~replyBtnSelector",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/twitterTimeline.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 138,
    "kind": "variable",
    "name": "closeFullTweetSelector",
    "memberof": "src/behaviors/twitterTimeline.js",
    "static": true,
    "longname": "src/behaviors/twitterTimeline.js~closeFullTweetSelector",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/twitterTimeline.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 139,
    "kind": "variable",
    "name": "threadSelector",
    "memberof": "src/behaviors/twitterTimeline.js",
    "static": true,
    "longname": "src/behaviors/twitterTimeline.js~threadSelector",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/twitterTimeline.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 140,
    "kind": "class",
    "name": "Tweet",
    "memberof": "src/behaviors/twitterTimeline.js",
    "static": true,
    "longname": "src/behaviors/twitterTimeline.js~Tweet",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/twitterTimeline.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 141,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "aTweet",
        "description": "The content div for a tweet in a timeline"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "baseURI",
        "description": "The document.baseURI of the timeline page being viewed"
      }
    ]
  },
  {
    "__docId__": 142,
    "kind": "member",
    "name": "tweet",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#tweet",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "member",
    "name": "container",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#container",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "member",
    "name": "dataset",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#dataset",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "member",
    "name": "footer",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#footer",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 146,
    "kind": "member",
    "name": "tRplyAct",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#tRplyAct",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "member",
    "name": "rplyButton",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#rplyButton",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "member",
    "name": "fullTweetOverlay",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#fullTweetOverlay",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 149,
    "kind": "member",
    "name": "_hasReplys",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#_hasReplys",
    "access": "private",
    "description": "If the currently visited tweet has replies then the span with\nclass `ProfileTweet-actionCount--isZero` must not exist",
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 150,
    "kind": "member",
    "name": "_apartThread",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#_apartThread",
    "access": "private",
    "description": "If the currently visited tweet is apart of a thread,\nthen an a tag will be present with classes `js-nav.show-thread-link`",
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 151,
    "kind": "member",
    "name": "_baseURI",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#_baseURI",
    "access": "private",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "method",
    "name": "tweetVideo",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#tweetVideo",
    "access": "public",
    "description": "",
    "lineNumber": 77,
    "return": {
      "nullable": true,
      "types": [
        "HTMLVideoElement"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "tweetId",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#tweetId",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "permalinkPath",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#permalinkPath",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "hasReplys",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#hasReplys",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "apartOfThread",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#apartOfThread",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "hasRepliedOrInThread",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#hasRepliedOrInThread",
    "access": "public",
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "method",
    "name": "viewRepliesOrThread",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "generator": true,
    "async": true,
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#viewRepliesOrThread",
    "access": "public",
    "description": "Clicks (views) the currently visited tweet",
    "lineNumber": 111,
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterableIterator<boolean>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 159,
    "kind": "method",
    "name": "viewRegularTweet",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "generator": true,
    "async": true,
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#viewRegularTweet",
    "access": "public",
    "description": "",
    "lineNumber": 120,
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterableIterator<boolean>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "openFullTweet",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#openFullTweet",
    "access": "public",
    "description": "Clicks (views) the currently visited tweet",
    "lineNumber": 130,
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "visitThreadReplyTweets",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "generator": true,
    "async": true,
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#visitThreadReplyTweets",
    "access": "public",
    "description": "",
    "lineNumber": 147,
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterableIterator<boolean>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 163,
    "kind": "method",
    "name": "closeFullTweetOverlay",
    "memberof": "src/behaviors/twitterTimeline.js~Tweet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/behaviors/twitterTimeline.js~Tweet#closeFullTweetOverlay",
    "access": "public",
    "description": "Closes the overlay representing viewing a tweet",
    "lineNumber": 185,
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 164,
    "kind": "function",
    "name": "timelineIterator",
    "memberof": "src/behaviors/twitterTimeline.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "src/behaviors/twitterTimeline.js~timelineIterator",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/twitterTimeline.js",
    "importStyle": null,
    "description": "For a more detailed explanation about the relationship between the xpath\nquery used and the marking of each tweet as visited by this algorithm see the\ndescription for {@link tweetXpath}.\n\n(S1) Build initial set of to be visited tweets\n(S2) For each tweet visible at current scroll position:\n     - mark as visited\n     - scroll into view\n     - yield tweet\n     - if should view full tweet (has replies or apart of thread)\n       - yield all sub tweets\n(S3) Once all tweets at current scroll position have been visited:\n     - wait for Twitter to load more tweets (if any more are to be had)\n     - if twitter added more tweets add them to the to be visited set\n(S4) If we have more tweets to visit and can scroll more:\n     - GOTO S2",
    "lineNumber": 221,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(string,): Array<HTMLElement>"
        ],
        "spread": false,
        "optional": false,
        "name": "xpathQuerySelector",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "baseURI",
        "description": "The timelines documents baseURI"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterator<boolean>"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 165,
    "kind": "file",
    "name": "src/behaviors/youtubeVideo.js",
    "content": "import {\n  chainQs,\n  getElemSiblingAndRemoveElem,\n  id,\n  markElemAsVisited,\n  nthChildElemOf,\n  qs,\n  qsa,\n  selectorExists\n} from '../utils/dom';\nimport { waitForAdditionalElemChildren } from '../utils/delays';\nimport { scrollIntoViewAndClick } from '../utils/clicks';\nimport { selectAndPlay } from '../utils/media';\nimport {\n  scrollIntoViewAndWaitFor,\n  scrollIntoViewWithDelay\n} from '../utils/scrolls';\nimport { MutationStream } from '../utils/mutations';\nimport { addOutLinks } from '../utils/outlinkCollector';\nimport initRunnableBehavior from '../shared/behaviorRunner';\n\nconst selectors = {\n  videoInfoMoreId: 'more',\n  loadMoreComments: 'div[slot=\"more-button\"] > paper-button',\n  showMoreReplies: 'yt-next-continuation > paper-button',\n  commentRenderer: 'ytd-comment-thread-renderer',\n  commentsContainerId: 'comments',\n  loadedReplies: 'div[id=\"loaded-replies\"]',\n  loadingCommentsSpinner:\n    '#continuations > yt-next-continuation > paper-spinner',\n  outlinks: 'ytd-thumbnail > a[id=\"thumbnail\"]'\n};\n\nconst mutationConf = { attributes: false, childList: true, subtree: false };\n\nfunction loadMoreComments(cRenderer, selector) {\n  const more = qs(selector, cRenderer);\n  if (more && !more.hidden) {\n    return scrollIntoViewAndClick(more);\n  }\n  return false;\n}\n\n/**\n *\n * @param {MutationStream} mStream\n * @param renderer\n * @return {AsyncIterator<*>}\n */\nasync function viewAllReplies(mStream, renderer) {\n  const replies = qs(selectors.loadedReplies, renderer);\n  if (replies != null && selectorExists('#more > div.more-button', renderer)) {\n    let mutation;\n    for await (mutation of mStream.predicatedStream(\n      replies,\n      mutationConf,\n      () => loadMoreComments(renderer, '#more > div.more-button'),\n      () => !selectorExists(selectors.showMoreReplies, renderer)\n    )) {\n      await scrollIntoViewWithDelay(replies.lastChild, 750);\n      if (!loadMoreComments(renderer, selectors.showMoreReplies)) {\n        mStream.disconnect();\n        break;\n      }\n    }\n  }\n}\n\nasync function* playVideoAndLoadComments() {\n  const moreInfo = chainQs(\n    document,\n    'ytd-video-secondary-info-renderer',\n    'paper-button[id=\"more\"]'\n  );\n  if (moreInfo != null) {\n    await scrollIntoViewAndClick(moreInfo);\n    yield;\n  }\n  await selectAndPlay('video');\n  yield;\n  await scrollIntoViewAndWaitFor(id(selectors.commentsContainerId), () =>\n    selectorExists(selectors.commentRenderer)\n  );\n  const relatedVideos = nthChildElemOf(id('related'), 2);\n  if (relatedVideos) {\n    addOutLinks(qsa(selectors.outlinks, relatedVideos));\n  }\n  const commentsContainer = qs('#comments > #sections > #contents');\n  const mStream = new MutationStream();\n  let comment = commentsContainer.children[0];\n  let numLoadedComments = commentsContainer.children.length;\n  while (comment != null) {\n    markElemAsVisited(comment);\n    await scrollIntoViewWithDelay(comment);\n    yield;\n    viewAllReplies(mStream, comment);\n    numLoadedComments = commentsContainer.children.length;\n    if (comment.nextElementSibling == null) {\n      await waitForAdditionalElemChildren(commentsContainer, numLoadedComments);\n    }\n    yield;\n    comment = getElemSiblingAndRemoveElem(comment);\n  }\n}\n\ninitRunnableBehavior(window, playVideoAndLoadComments());\n\n// playVideoAndLoadComments().then(() => console.log('done'));\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/behaviors/youtubeVideo.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 166,
    "kind": "variable",
    "name": "selectors",
    "memberof": "src/behaviors/youtubeVideo.js",
    "static": true,
    "longname": "src/behaviors/youtubeVideo.js~selectors",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/youtubeVideo.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "{\"videoInfoMoreId\": string, \"loadMoreComments\": string, \"showMoreReplies\": string, \"commentRenderer\": string, \"commentsContainerId\": string, \"loadedReplies\": string, \"loadingCommentsSpinner\": string, \"outlinks\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 167,
    "kind": "variable",
    "name": "mutationConf",
    "memberof": "src/behaviors/youtubeVideo.js",
    "static": true,
    "longname": "src/behaviors/youtubeVideo.js~mutationConf",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/youtubeVideo.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "{\"attributes\": *, \"childList\": boolean, \"subtree\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 168,
    "kind": "function",
    "name": "loadMoreComments",
    "memberof": "src/behaviors/youtubeVideo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/behaviors/youtubeVideo.js~loadMoreComments",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/youtubeVideo.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [
      {
        "name": "cRenderer",
        "types": [
          "*"
        ]
      },
      {
        "name": "selector",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "viewAllReplies",
    "memberof": "src/behaviors/youtubeVideo.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/behaviors/youtubeVideo.js~viewAllReplies",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/youtubeVideo.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "MutationStream"
        ],
        "spread": false,
        "optional": false,
        "name": "mStream",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderer",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterator<*>"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 170,
    "kind": "function",
    "name": "playVideoAndLoadComments",
    "memberof": "src/behaviors/youtubeVideo.js",
    "generator": true,
    "async": true,
    "static": true,
    "longname": "src/behaviors/youtubeVideo.js~playVideoAndLoadComments",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/behaviors/youtubeVideo.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 171,
    "kind": "file",
    "name": "src/buildInfo.js",
    "content": "if (process.env.DOCKER) module.paths.unshift('/build/node_modules');\nconst path = require('path');\nconst fs = require('fs-extra');\nconst prettier = require('prettier');\nconst prettierOpts = { singleQuote: true, parser: 'babylon' };\n\nconst noWrapperFiles = new Set(['collectOutlinks.js', 'autoscroll.js']);\nconst behaviorDir = path.join(__dirname, 'behaviors');\n\nconst makePretty = code => prettier.format(code, prettierOpts);\n\nconst debugMode = true;\n\nconst SHOW_DEBUG = process.env.SHOW_DEBUG != null || debugMode;\n\nconst outro = `})($x, ${SHOW_DEBUG});`;\n\nconst behaviors = fs\n  .readdirSync(behaviorDir)\n  .map(b => path.join(behaviorDir, b));\n\nconst wrappers = {\n  setup: {\n    intro: '(function runner(xpg, debug) { ',\n    renderChunk: makePretty,\n    outro,\n    name: 'wr-behavior-wrapper-setup',\n  },\n  runAwaitable: {\n    intro: '(function runner(xpg, debug) { ',\n    renderChunk(code) {\n      return makePretty(code.replace('/*!return!*/', 'return'));\n    },\n    outro,\n    name: 'wr-behavior-wrapper-async-run'\n  },\n  none: {\n    intro: '',\n    renderChunk: makePretty,\n    footer: '',\n    name: 'wr-behavior-wrapper-none'\n  }\n};\n\n/**\n *\n * @param {function(file: str, baseConfig: Object): Object} configCustomizer\n * @return {Object[]}\n */\nfunction createBehaviorConfigs(configCustomizer) {\n  return fs.readdirSync(behaviorDir).map(file => {\n    const config = {\n      input: path.join(behaviorDir, file),\n      output: {\n        sourcemap: false,\n        format: 'es',\n        exports: 'none'\n      },\n      plugins: []\n    };\n    switch (file) {\n      case 'autoscroll.js':\n        config.plugins.push(wrappers.runAwaitable);\n        break;\n      case 'collectOutlinks.js':\n        config.plugins.push(wrappers.none);\n        break;\n      default:\n        config.plugins.push(wrappers.setup);\n        break;\n    }\n    return configCustomizer(file, config);\n  });\n}\n\nmodule.exports = {\n  noWrapperFiles,\n  createBehaviorConfigs,\n  behaviorDir,\n  wrappers\n};\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/buildInfo.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 172,
    "kind": "variable",
    "name": "path",
    "memberof": "src/buildInfo.js",
    "static": true,
    "longname": "src/buildInfo.js~path",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/buildInfo.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 173,
    "kind": "variable",
    "name": "fs",
    "memberof": "src/buildInfo.js",
    "static": true,
    "longname": "src/buildInfo.js~fs",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/buildInfo.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 174,
    "kind": "variable",
    "name": "prettier",
    "memberof": "src/buildInfo.js",
    "static": true,
    "longname": "src/buildInfo.js~prettier",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/buildInfo.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 175,
    "kind": "variable",
    "name": "prettierOpts",
    "memberof": "src/buildInfo.js",
    "static": true,
    "longname": "src/buildInfo.js~prettierOpts",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/buildInfo.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "{\"singleQuote\": boolean, \"parser\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 176,
    "kind": "variable",
    "name": "noWrapperFiles",
    "memberof": "src/buildInfo.js",
    "static": true,
    "longname": "src/buildInfo.js~noWrapperFiles",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/buildInfo.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 177,
    "kind": "variable",
    "name": "behaviorDir",
    "memberof": "src/buildInfo.js",
    "static": true,
    "longname": "src/buildInfo.js~behaviorDir",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/buildInfo.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 178,
    "kind": "function",
    "name": "makePretty",
    "memberof": "src/buildInfo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/buildInfo.js~makePretty",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/buildInfo.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "code",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 179,
    "kind": "variable",
    "name": "debugMode",
    "memberof": "src/buildInfo.js",
    "static": true,
    "longname": "src/buildInfo.js~debugMode",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/buildInfo.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 180,
    "kind": "variable",
    "name": "SHOW_DEBUG",
    "memberof": "src/buildInfo.js",
    "static": true,
    "longname": "src/buildInfo.js~SHOW_DEBUG",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/buildInfo.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 181,
    "kind": "variable",
    "name": "outro",
    "memberof": "src/buildInfo.js",
    "static": true,
    "longname": "src/buildInfo.js~outro",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/buildInfo.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 182,
    "kind": "variable",
    "name": "behaviors",
    "memberof": "src/buildInfo.js",
    "static": true,
    "longname": "src/buildInfo.js~behaviors",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/buildInfo.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 183,
    "kind": "variable",
    "name": "wrappers",
    "memberof": "src/buildInfo.js",
    "static": true,
    "longname": "src/buildInfo.js~wrappers",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/buildInfo.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "{\"setup\": *, \"runAwaitable\": *, \"none\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 184,
    "kind": "function",
    "name": "createBehaviorConfigs",
    "memberof": "src/buildInfo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/buildInfo.js~createBehaviorConfigs",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/buildInfo.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(file: str, baseConfig: Object): Object"
        ],
        "spread": false,
        "optional": false,
        "name": "configCustomizer",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object[]"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 185,
    "kind": "file",
    "name": "src/shared/behaviorRunner.js",
    "content": "import { autobind } from '../utils/general';\nimport { isDone } from './postStepFNs';\n\n/**\n * @desc A thin wrapper around the execution of a behaviors actions\n * in order to support behavior pausing.\n *\n * A behavior is in a paused state when the property `$WBBehaviorPaused`,\n * found on the `window` object, is truthy and when that property is\n * falsy the behavior is considered in an un-paused state.\n *\n * The check for a behavior pause state transitions is done\n * before performing the behaviors next action, allowing the\n * action to be atomic.\n */\nexport class BehaviorRunner {\n  /**\n   * @param {AsyncIterator<*>} behaviorStepIterator - An async iterator that\n   * yields the state of the behavior.\n   * @param {function(results: {value: Any, done: boolean}): any} [postStepFN] - An optional\n   * function that is supplied the state of the behavior after performing an action.\n   * It is required that this function returns the state unmodified or a transformation\n   * of the state that is either an object that contains the original value of the done property\n   * or a boolean that is the value of the original done property.\n   */\n  constructor(behaviorStepIterator, postStepFN) {\n    /**\n     * @type {AsyncIterator<*>}\n     */\n    this.stepIterator = behaviorStepIterator;\n\n    /**\n     * @type {?number}\n     */\n    this.upCheckInterval = null;\n\n    /**\n     * @type {function(result: Object): any}\n     */\n    this.postStepFN = postStepFN != null ? postStepFN : isDone;\n\n    /**\n     * @type {?Promise<any>}\n     * @private\n     */\n    this._waitP = null;\n    autobind(this);\n  }\n\n  /**\n   * @desc Swaps the behavior actions to be applied to the page.\n   * @param {AsyncIterator<*>} newBehaviorIterator - a new behavior action iterator to be run\n   * @param {function(results: {value: Any, done: boolean}): Object} [newPostStepFN] - an optional new post step function\n   * to be used. If a previous postStepFN is in use and a new function is not supplied the old one is persisted.\n   */\n  swapBehaviorIterator(newBehaviorIterator, newPostStepFN) {\n    this.stepIterator = newBehaviorIterator;\n    if (newPostStepFN) {\n      this.postStepFN = newPostStepFN;\n    }\n  }\n\n  /**\n   * @desc Swaps the postStepFN to be used.\n   * @param {function(results: {value: Any, done: boolean}): Object} newPostStepFN - The new\n   * postStepFN to be used.\n   */\n  swapPostStepFn(newPostStepFN) {\n    this.postStepFN = newPostStepFN;\n  }\n\n  /**\n   * @desc Returns a promise that resolves once `window.$WBBehaviorPaused`\n   * is falsy, checking at 2 second intervals.\n   * @return {Promise<any>}\n   */\n  waitToBeUnpaused() {\n    if (this._waitP) return this._waitP;\n    this._waitP = new Promise(resolve => {\n      this.upCheckInterval = setInterval(() => {\n        if (!window.$WBBehaviorPaused) {\n          clearInterval(this.upCheckInterval);\n          this._waitP = null;\n          resolve();\n        }\n      }, 2000);\n    });\n    return this._waitP;\n  }\n\n  /**\n   * @desc Initiates the next behavior action.\n   *\n   * If a postStepFN was supplied it is called with the results of\n   * the performed action otherwise they are returned directly.\n   * @return {Promise<any>}\n   */\n  performStep() {\n    const resultP = this.stepIterator.next();\n    if (this.postStepFN) {\n      return resultP.then(this.postStepFN);\n    }\n    return resultP;\n  }\n\n  /**\n   * @desc Initiates the next action of a behavior.\n   *\n   * If the behavior is transitioning into the paused state (previously not paused)\n   * the promise returned resolves with the results of performing the next\n   * action once the un-paused state has been reached.\n   *\n   * If this method is called and the behavior is currently in the paused state\n   * the promise returned is the same one returned when transitioning into the\n   * paused state.\n   *\n   * Otherwise the returned promise resolves with the state of the behavior\n   * after performing an action.\n   * @return {Promise<any>}\n   */\n  step() {\n    if (this._waitP) {\n      return this._waitP;\n    }\n    if (window.$WBBehaviorPaused) {\n      return this.waitToBeUnpaused().then(this.performStep);\n    }\n    return this.performStep();\n  }\n\n  /**\n   * @desc Shortcut for running a behavior from a for await of loop.\n   * @return {{next: function(): Promise<any>}}\n   */\n  [Symbol.asyncIterator]() {\n    return {\n      next: () => this.step()\n    };\n  }\n}\n\n/**\n * @desc Performs the setup required for integration with Webrecorders automation system\n * Adds as propeties to the supplied window object\n *  - $WBBehaviorStepIter$: the supplied `behaviorStepIterator`\n *  - $WBBehaviorRunner$: the instance of the class that wraps the behaviors actions\n *  - $WRIteratorHandler$: a function that initiates a behaviors action\n * @param {Window} win - The window object\n * @param {AsyncIterator<*>} behaviorStepIterator\n * @param {function(results: Object): any} [postStepFN]\n * @return {function(): Promise<any>}\n */\nexport default function initRunnableBehavior(\n  win,\n  behaviorStepIterator,\n  postStepFN\n) {\n  win.$WBBehaviorStepIter$ = behaviorStepIterator;\n  const runner = new BehaviorRunner(behaviorStepIterator, postStepFN);\n  win.$WBBehaviorRunner$ = runner;\n  win.$WRIteratorHandler$ = runner.step;\n  return win.$WRIteratorHandler$;\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/shared/behaviorRunner.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 186,
    "kind": "class",
    "name": "BehaviorRunner",
    "memberof": "src/shared/behaviorRunner.js",
    "static": true,
    "longname": "src/shared/behaviorRunner.js~BehaviorRunner",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/shared/behaviorRunner.js",
    "importStyle": "{BehaviorRunner}",
    "description": "A thin wrapper around the execution of a behaviors actions\nin order to support behavior pausing.\n\nA behavior is in a paused state when the property `$WBBehaviorPaused`,\nfound on the `window` object, is truthy and when that property is\nfalsy the behavior is considered in an un-paused state.\n\nThe check for a behavior pause state transitions is done\nbefore performing the behaviors next action, allowing the\naction to be atomic.",
    "lineNumber": 16,
    "interface": false
  },
  {
    "__docId__": 187,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/shared/behaviorRunner.js~BehaviorRunner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/shared/behaviorRunner.js~BehaviorRunner#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "AsyncIterator<*>"
        ],
        "spread": false,
        "optional": false,
        "name": "behaviorStepIterator",
        "description": "An async iterator that\nyields the state of the behavior."
      },
      {
        "nullable": null,
        "types": [
          "function(results: {value: Any, done: boolean}): any"
        ],
        "spread": false,
        "optional": true,
        "name": "postStepFN",
        "description": "An optional\nfunction that is supplied the state of the behavior after performing an action.\nIt is required that this function returns the state unmodified or a transformation\nof the state that is either an object that contains the original value of the done property\nor a boolean that is the value of the original done property."
      }
    ]
  },
  {
    "__docId__": 188,
    "kind": "member",
    "name": "stepIterator",
    "memberof": "src/shared/behaviorRunner.js~BehaviorRunner",
    "static": false,
    "longname": "src/shared/behaviorRunner.js~BehaviorRunner#stepIterator",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "AsyncIterator<*>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 189,
    "kind": "member",
    "name": "upCheckInterval",
    "memberof": "src/shared/behaviorRunner.js~BehaviorRunner",
    "static": false,
    "longname": "src/shared/behaviorRunner.js~BehaviorRunner#upCheckInterval",
    "access": "public",
    "description": "",
    "lineNumber": 35,
    "type": {
      "nullable": true,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 190,
    "kind": "member",
    "name": "postStepFN",
    "memberof": "src/shared/behaviorRunner.js~BehaviorRunner",
    "static": false,
    "longname": "src/shared/behaviorRunner.js~BehaviorRunner#postStepFN",
    "access": "public",
    "description": "",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "function(result: Object): any"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 191,
    "kind": "member",
    "name": "_waitP",
    "memberof": "src/shared/behaviorRunner.js~BehaviorRunner",
    "static": false,
    "longname": "src/shared/behaviorRunner.js~BehaviorRunner#_waitP",
    "access": "private",
    "description": "",
    "lineNumber": 46,
    "type": {
      "nullable": true,
      "types": [
        "Promise<any>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 192,
    "kind": "method",
    "name": "swapBehaviorIterator",
    "memberof": "src/shared/behaviorRunner.js~BehaviorRunner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/shared/behaviorRunner.js~BehaviorRunner#swapBehaviorIterator",
    "access": "public",
    "description": "Swaps the behavior actions to be applied to the page.",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "AsyncIterator<*>"
        ],
        "spread": false,
        "optional": false,
        "name": "newBehaviorIterator",
        "description": "a new behavior action iterator to be run"
      },
      {
        "nullable": null,
        "types": [
          "function(results: {value: Any, done: boolean}): Object"
        ],
        "spread": false,
        "optional": true,
        "name": "newPostStepFN",
        "description": "an optional new post step function\nto be used. If a previous postStepFN is in use and a new function is not supplied the old one is persisted."
      }
    ],
    "return": null
  },
  {
    "__docId__": 195,
    "kind": "method",
    "name": "swapPostStepFn",
    "memberof": "src/shared/behaviorRunner.js~BehaviorRunner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/shared/behaviorRunner.js~BehaviorRunner#swapPostStepFn",
    "access": "public",
    "description": "Swaps the postStepFN to be used.",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(results: {value: Any, done: boolean}): Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newPostStepFN",
        "description": "The new\npostStepFN to be used."
      }
    ],
    "return": null
  },
  {
    "__docId__": 197,
    "kind": "method",
    "name": "waitToBeUnpaused",
    "memberof": "src/shared/behaviorRunner.js~BehaviorRunner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/shared/behaviorRunner.js~BehaviorRunner#waitToBeUnpaused",
    "access": "public",
    "description": "Returns a promise that resolves once `window.$WBBehaviorPaused`\nis falsy, checking at 2 second intervals.",
    "lineNumber": 77,
    "return": {
      "nullable": null,
      "types": [
        "Promise<any>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "performStep",
    "memberof": "src/shared/behaviorRunner.js~BehaviorRunner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/shared/behaviorRunner.js~BehaviorRunner#performStep",
    "access": "public",
    "description": "Initiates the next behavior action.\n\nIf a postStepFN was supplied it is called with the results of\nthe performed action otherwise they are returned directly.",
    "lineNumber": 98,
    "return": {
      "nullable": null,
      "types": [
        "Promise<any>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "step",
    "memberof": "src/shared/behaviorRunner.js~BehaviorRunner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/shared/behaviorRunner.js~BehaviorRunner#step",
    "access": "public",
    "description": "Initiates the next action of a behavior.\n\nIf the behavior is transitioning into the paused state (previously not paused)\nthe promise returned resolves with the results of performing the next\naction once the un-paused state has been reached.\n\nIf this method is called and the behavior is currently in the paused state\nthe promise returned is the same one returned when transitioning into the\npaused state.\n\nOtherwise the returned promise resolves with the state of the behavior\nafter performing an action.",
    "lineNumber": 121,
    "return": {
      "nullable": null,
      "types": [
        "Promise<any>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 203,
    "kind": "method",
    "name": "[Symbol.asyncIterator]",
    "memberof": "src/shared/behaviorRunner.js~BehaviorRunner",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/shared/behaviorRunner.js~BehaviorRunner#[Symbol.asyncIterator]",
    "access": "public",
    "description": "Shortcut for running a behavior from a for await of loop.",
    "lineNumber": 135,
    "return": {
      "nullable": null,
      "types": [
        "{next: function(): Promise<any>}"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 204,
    "kind": "function",
    "name": "initRunnableBehavior",
    "memberof": "src/shared/behaviorRunner.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/shared/behaviorRunner.js~initRunnableBehavior",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/shared/behaviorRunner.js",
    "importStyle": "initRunnableBehavior",
    "description": "Performs the setup required for integration with Webrecorders automation system\nAdds as propeties to the supplied window object\n - $WBBehaviorStepIter$: the supplied `behaviorStepIterator`\n - $WBBehaviorRunner$: the instance of the class that wraps the behaviors actions\n - $WRIteratorHandler$: a function that initiates a behaviors action",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "Window"
        ],
        "spread": false,
        "optional": false,
        "name": "win",
        "description": "The window object"
      },
      {
        "nullable": null,
        "types": [
          "AsyncIterator<*>"
        ],
        "spread": false,
        "optional": false,
        "name": "behaviorStepIterator",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "function(results: Object): any"
        ],
        "spread": false,
        "optional": true,
        "name": "postStepFN",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function(): Promise<any>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 205,
    "kind": "file",
    "name": "src/shared/facebook.js",
    "content": "export const selectors = {\n  hyperFeedStory: 'div[id^=hyperfeed_story]',\n  userStory: 'div[role=\"article\"]'\n};\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/shared/facebook.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 206,
    "kind": "variable",
    "name": "selectors",
    "memberof": "src/shared/facebook.js",
    "static": true,
    "longname": "src/shared/facebook.js~selectors",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/shared/facebook.js",
    "importStyle": "{selectors}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{\"hyperFeedStory\": string, \"userStory\": string}"
      ]
    }
  },
  {
    "__docId__": 207,
    "kind": "file",
    "name": "src/shared/instagram.js",
    "content": "import { getViaPath, globalWithPropsExist } from '../utils/general';\n\nexport const selectors = {\n  openStories: 'div[aria-label=\"Open Stories\"]',\n  nextStory: 'div.coreSpriteRightChevron',\n  storyVideo: 'button.videoSpritePlayButton',\n  multipleImages: 'span.coreSpriteSidecarIconLarge',\n  postTopMostContainer: 'article',\n  rightChevron: 'button > div.coreSpriteRightChevron',\n  postPopupArticle: `${new Array(3)\n    .fill(0)\n    .map(() => 'div[role=\"dialog\"]')\n    .join(' > ')} > article`,\n  multiImageDisplayDiv: 'div > div[role=\"button\"]'\n};\n\nexport const videoPostSelectors = [\n  'span.coreSpriteVideoIconLarge',\n  'span[aria-label$=\"Video\"]',\n  'span[class*=\"glyphsSpriteVideo_large\"]'\n];\n\nexport const xpathQ = {\n  postPopupClose: '//body/div/div/button[contains(text(), \"Close\")]',\n  loadMoreComments: '//li/button[contains(text(), \"Load more comments\")]',\n  showAllComments: '//li/button[contains(text(), \"View all\")]'\n};\n\n/**\n *\n * @return {?Object}\n */\nexport function getProfileInfo() {\n  if (globalWithPropsExist('user', 'username', 'id', 'highlight_reel_count')) {\n    return {\n      username: window.user.username,\n      userId: window.user.id,\n      numHighlights: window.user.highlight_reel_count\n    };\n  }\n\n  const user = getViaPath(\n    window,\n    '_sharedData',\n    'entry_data',\n    'ProfilePage',\n    0,\n    'graphql',\n    'user'\n  );\n  if (user != null) {\n    return {\n      username: user.username,\n      userId: user.id,\n      numHighlights: user.highlight_reel_count\n    };\n  }\n  return null;\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/shared/instagram.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 208,
    "kind": "variable",
    "name": "selectors",
    "memberof": "src/shared/instagram.js",
    "static": true,
    "longname": "src/shared/instagram.js~selectors",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/shared/instagram.js",
    "importStyle": "{selectors}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{\"openStories\": string, \"nextStory\": string, \"storyVideo\": string, \"multipleImages\": string, \"postTopMostContainer\": string, \"rightChevron\": string, \"postPopupArticle\": *, \"multiImageDisplayDiv\": string}"
      ]
    }
  },
  {
    "__docId__": 209,
    "kind": "variable",
    "name": "videoPostSelectors",
    "memberof": "src/shared/instagram.js",
    "static": true,
    "longname": "src/shared/instagram.js~videoPostSelectors",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/shared/instagram.js",
    "importStyle": "{videoPostSelectors}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 210,
    "kind": "variable",
    "name": "xpathQ",
    "memberof": "src/shared/instagram.js",
    "static": true,
    "longname": "src/shared/instagram.js~xpathQ",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/shared/instagram.js",
    "importStyle": "{xpathQ}",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "{\"postPopupClose\": string, \"loadMoreComments\": string, \"showAllComments\": string}"
      ]
    }
  },
  {
    "__docId__": 211,
    "kind": "function",
    "name": "getProfileInfo",
    "memberof": "src/shared/instagram.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/shared/instagram.js~getProfileInfo",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/shared/instagram.js",
    "importStyle": "{getProfileInfo}",
    "description": "",
    "lineNumber": 33,
    "return": {
      "nullable": true,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 212,
    "kind": "file",
    "name": "src/shared/postStepFNs.js",
    "content": "export function isDone(state) {\n  return state.done;\n}\n\nexport function doneOrWait(state) {\n  return {\n    done: state.done,\n    wait: !!state.value\n  };\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/shared/postStepFNs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 213,
    "kind": "function",
    "name": "isDone",
    "memberof": "src/shared/postStepFNs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/shared/postStepFNs.js~isDone",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/shared/postStepFNs.js",
    "importStyle": "{isDone}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 214,
    "kind": "function",
    "name": "doneOrWait",
    "memberof": "src/shared/postStepFNs.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/shared/postStepFNs.js~doneOrWait",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/shared/postStepFNs.js",
    "importStyle": "{doneOrWait}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"done\": *, \"wait\": *}"
      ]
    }
  },
  {
    "__docId__": 215,
    "kind": "file",
    "name": "src/shared/twitter.js",
    "content": "export const selectors = {\n  tweetStreamContainer: 'div.stream-container',\n  tweetStreamDiv: 'div.stream',\n  tweetInStreamContent: 'div.content',\n  tweetStreamItems: 'ol.stream-items',\n  tweetFooterSelector: 'div.stream-item-footer',\n  replyActionSelector: 'div.ProfileTweet-action--reply',\n  noReplySpanSelector: 'span.ProfileTweet-actionCount--isZero',\n  replyBtnSelector: 'button[data-modal=\"ProfileTweet-reply\"]',\n  closeFullTweetSelector: 'div.PermalinkProfile-dismiss > span',\n  threadSelector: 'a.js-nav.show-thread-link',\n  userProfileInStream: 'AdaptiveStreamUserGallery-user',\n  userProfileContent: 'div.AdaptiveStreamUserGallery-user',\n  showMoreInThread: 'button.ThreadedConversation-showMoreThreadsButton',\n  tweetPermalinkContainer: 'div.permalink-container',\n  tweetPermalinkRepliesContainer: 'ol.stream-items',\n  threadedConvMoreReplies: 'a.ThreadedConversation-moreRepliesLink'\n};\n\nexport const elemIds = {\n  permalinkOverlay: 'permalink-overlay'\n};\n\nexport const dataAttrs = {\n  itemType: 'item-type'\n};\n\n/**\n * @desc Xpath query used to traverse each tweet within a timeline.\n *\n * During visiting tweets, the tweets are marked as visited by adding the\n * sentinel`$wrvisited$` to the classList of a tweet seen during timeline traversal,\n * normal usage of a CSS selector and `document.querySelectorAll` is impossible\n * unless significant effort is made in order to ensure each tweet is seen only\n * once during timeline traversal.\n *\n * Tweets in a timeline have the following structure:\n *  div.tweet.js-stream-tweet.js-actionable-tweet.js-profile-popup-actionable.dismissible-content...\n *    |- div.content\n *       |- ...\n *  div.tweet.js-stream-tweet.js-actionable-tweet.js-profile-popup-actionable.dismissible-content...\n *   |- div.content\n *      |- ...\n *\n * We care only about the minimal identifiable markers of a tweet:\n *  div.tweet.js-stream-tweet...\n *   |- div.content\n *\n * such that when a tweet is visited during timeline traversal it becomes:\n *  div.tweet.js-stream-tweet...\n *   |- div.content.wrvistited\n *\n * which invalidates the query on subsequent evaluations against the DOM,\n * thus allowing for unique traversal of each tweet in a timeline.\n * @type {string}\n */\nexport const tweetXpath =\n  '//div[starts-with(@class,\"tweet js-stream-tweet\")]/div[@class=\"content\" and not(contains(@class, \"wrvistited\"))]';\n\nexport const threadedTweetXpath =\n  '//div[@id=\"permalink-overlay\"]//div[starts-with(@class,\"tweet permalink-tweet\") and not(contains(@class, \"wrvistited\"))]';\n\n/**\n * @desc A variation of {@link tweetXpath} in that it is further constrained\n * to only search tweets within the overlay that appears when you click on\n * a tweet\n * @type {string}\n */\nexport const overlayTweetXpath = `//div[@id=\"permalink-overlay\"]${tweetXpath}`;\n\nexport function getNoneNukedConsole() {\n  let consoleIframe;\n  if (document.getElementById('$consoleIframe$') == null) {\n    consoleIframe = document.createElement('iframe');\n    consoleIframe.id = '$consoleIframe$';\n    document.head.appendChild(consoleIframe);\n  } else {\n    consoleIframe = document.getElementById('$consoleIframe$');\n  }\n  return consoleIframe.contentWindow.console;\n}\n\nexport function isStreamLiDataItemTypeTweet(streamLi) {\n  return !!(streamLi.dataset && streamLi.dataset.itemType === 'tweet');\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/shared/twitter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 216,
    "kind": "variable",
    "name": "selectors",
    "memberof": "src/shared/twitter.js",
    "static": true,
    "longname": "src/shared/twitter.js~selectors",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/shared/twitter.js",
    "importStyle": "{selectors}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{\"tweetStreamContainer\": string, \"tweetStreamDiv\": string, \"tweetInStreamContent\": string, \"tweetStreamItems\": string, \"tweetFooterSelector\": string, \"replyActionSelector\": string, \"noReplySpanSelector\": string, \"replyBtnSelector\": string, \"closeFullTweetSelector\": string, \"threadSelector\": string, \"userProfileInStream\": string, \"userProfileContent\": string, \"showMoreInThread\": string, \"tweetPermalinkContainer\": string, \"tweetPermalinkRepliesContainer\": string, \"threadedConvMoreReplies\": string}"
      ]
    }
  },
  {
    "__docId__": 217,
    "kind": "variable",
    "name": "elemIds",
    "memberof": "src/shared/twitter.js",
    "static": true,
    "longname": "src/shared/twitter.js~elemIds",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/shared/twitter.js",
    "importStyle": "{elemIds}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "{\"permalinkOverlay\": string}"
      ]
    }
  },
  {
    "__docId__": 218,
    "kind": "variable",
    "name": "dataAttrs",
    "memberof": "src/shared/twitter.js",
    "static": true,
    "longname": "src/shared/twitter.js~dataAttrs",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/shared/twitter.js",
    "importStyle": "{dataAttrs}",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "{\"itemType\": string}"
      ]
    }
  },
  {
    "__docId__": 219,
    "kind": "variable",
    "name": "tweetXpath",
    "memberof": "src/shared/twitter.js",
    "static": true,
    "longname": "src/shared/twitter.js~tweetXpath",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/shared/twitter.js",
    "importStyle": "{tweetXpath}",
    "description": "Xpath query used to traverse each tweet within a timeline.\n\nDuring visiting tweets, the tweets are marked as visited by adding the\nsentinel`$wrvisited$` to the classList of a tweet seen during timeline traversal,\nnormal usage of a CSS selector and `document.querySelectorAll` is impossible\nunless significant effort is made in order to ensure each tweet is seen only\nonce during timeline traversal.\n\nTweets in a timeline have the following structure:\n div.tweet.js-stream-tweet.js-actionable-tweet.js-profile-popup-actionable.dismissible-content...\n   |- div.content\n      |- ...\n div.tweet.js-stream-tweet.js-actionable-tweet.js-profile-popup-actionable.dismissible-content...\n  |- div.content\n     |- ...\n\nWe care only about the minimal identifiable markers of a tweet:\n div.tweet.js-stream-tweet...\n  |- div.content\n\nsuch that when a tweet is visited during timeline traversal it becomes:\n div.tweet.js-stream-tweet...\n  |- div.content.wrvistited\n\nwhich invalidates the query on subsequent evaluations against the DOM,\nthus allowing for unique traversal of each tweet in a timeline.",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 220,
    "kind": "variable",
    "name": "threadedTweetXpath",
    "memberof": "src/shared/twitter.js",
    "static": true,
    "longname": "src/shared/twitter.js~threadedTweetXpath",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/shared/twitter.js",
    "importStyle": "{threadedTweetXpath}",
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 221,
    "kind": "variable",
    "name": "overlayTweetXpath",
    "memberof": "src/shared/twitter.js",
    "static": true,
    "longname": "src/shared/twitter.js~overlayTweetXpath",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/shared/twitter.js",
    "importStyle": "{overlayTweetXpath}",
    "description": "A variation of {@link tweetXpath} in that it is further constrained\nto only search tweets within the overlay that appears when you click on\na tweet",
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 222,
    "kind": "function",
    "name": "getNoneNukedConsole",
    "memberof": "src/shared/twitter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/shared/twitter.js~getNoneNukedConsole",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/shared/twitter.js",
    "importStyle": "{getNoneNukedConsole}",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 223,
    "kind": "function",
    "name": "isStreamLiDataItemTypeTweet",
    "memberof": "src/shared/twitter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/shared/twitter.js~isStreamLiDataItemTypeTweet",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/shared/twitter.js",
    "importStyle": "{isStreamLiDataItemTypeTweet}",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "params": [
      {
        "name": "streamLi",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 224,
    "kind": "file",
    "name": "src/utils/browser.js",
    "content": "/**\n * @desc Waits for the value of `window.location.href` to differ from\n * the supplied value due to browser history manipulation. If actual navigation\n * causes a change this function is useless.  The default poll rate is 1 second\n * and the safety timeout is 5 seconds.\n * @param {string} previousLocation - The value of `window.location.href` prior\n * to the pending or already occurred history manipulation of `window.location`\n * @param {{pollRate: ?number, safety: ?number}} [options] - Optional options\n * for controlling the checks poll rate and the safety timeout length.\n * Supplied values for `pollRate` and `safety` in milliseconds.\n * @return {Promise<boolean>} - Returns false if no change was detected by\n * the timeout length determined by options.safety otherwise true.\n */\nexport function waitForHistoryManipToChangeLocation(previousLocation, options) {\n  const opts = Object.assign({ pollRate: 1000, safety: 5000 }, options);\n  let pollInterval;\n  let safetyTimeout;\n  return new Promise(resolve => {\n    if (window.location.href !== previousLocation) return resolve(true);\n    pollInterval = setInterval(() => {\n      if (window.location.href !== previousLocation) {\n        if (safetyTimeout) {\n          clearTimeout(safetyTimeout);\n        }\n        clearInterval(pollInterval);\n        return resolve(true);\n      }\n    }, opts.pollRate);\n    safetyTimeout = setTimeout(() => {\n      if (pollInterval) clearInterval(pollInterval);\n      resolve(window.location.href !== previousLocation);\n    }, opts.safety);\n  });\n}\n\n/**\n * @desc Determines the strict equality of the string\n * to the value of `window.location.href`\n * @param {string} someLocation - The expect location.href value\n * @return {boolean}\n */\nexport function locationEquals(someLocation) {\n  return window.location.href === someLocation;\n}\n\n/**\n * @desc Determines if `window.location.href` contains\n * the supplied value as a substring.\n * @param {string} something - The value to determine if\n * it is a substring of `window.location.href`\n * @return {boolean}\n */\nexport function locationContains(something) {\n  return window.location.href.indexOf(something) !== -1;\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/utils/browser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 225,
    "kind": "function",
    "name": "waitForHistoryManipToChangeLocation",
    "memberof": "src/utils/browser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/browser.js~waitForHistoryManipToChangeLocation",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/browser.js",
    "importStyle": "{waitForHistoryManipToChangeLocation}",
    "description": "Waits for the value of `window.location.href` to differ from\nthe supplied value due to browser history manipulation. If actual navigation\ncauses a change this function is useless.  The default poll rate is 1 second\nand the safety timeout is 5 seconds.",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "previousLocation",
        "description": "The value of `window.location.href` prior\nto the pending or already occurred history manipulation of `window.location`"
      },
      {
        "nullable": null,
        "types": [
          "{pollRate: ?number, safety: ?number}"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Optional options\nfor controlling the checks poll rate and the safety timeout length.\nSupplied values for `pollRate` and `safety` in milliseconds."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": "Returns false if no change was detected by\nthe timeout length determined by options.safety otherwise true."
    }
  },
  {
    "__docId__": 226,
    "kind": "function",
    "name": "locationEquals",
    "memberof": "src/utils/browser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/browser.js~locationEquals",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/browser.js",
    "importStyle": "{locationEquals}",
    "description": "Determines the strict equality of the string\nto the value of `window.location.href`",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "someLocation",
        "description": "The expect location.href value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 227,
    "kind": "function",
    "name": "locationContains",
    "memberof": "src/utils/browser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/browser.js~locationContains",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/browser.js",
    "importStyle": "{locationContains}",
    "description": "Determines if `window.location.href` contains\nthe supplied value as a substring.",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "something",
        "description": "The value to determine if\nit is a substring of `window.location.href`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 228,
    "kind": "file",
    "name": "src/utils/clicks.js",
    "content": "import { delay, waitForPredicate } from './delays';\nimport { scrollIntoView } from './scrolls';\nimport { qs } from './dom';\n\n/**\n * @desc Calls the click function on the supplied element if non-null/defined.\n * Returns true or false to indicate if the click happened\n * @param {HTMLElement|Element} elem - The element to be clicked\n * @return {boolean} - T/F to indicate that click happened.\n */\nexport function click(elem) {\n  let clicked = false;\n  if (elem != null) {\n    elem.dispatchEvent(\n      new window.MouseEvent('mouseover', {\n        view: window,\n        bubbles: true,\n        cancelable: true\n      })\n    );\n    elem.click();\n    clicked = true;\n  }\n  return clicked;\n}\n\n/**\n * @desc Calls the click function on the supplied element if non-null/defined\n * that exists in the JS context of the supplied window (cntx).\n * Returns true or false to indicate if the click happened\n * @param {HTMLElement|Element} elem - The element to be clicked\n * @param {Window} cntx - The context window\n * @return {boolean} - T/F to indicate that click happened.\n */\nexport function clickInContext(elem, cntx) {\n  let clicked = false;\n  if (elem != null) {\n    elem.dispatchEvent(\n      new cntx.MouseEvent('mouseover', {\n        view: cntx,\n        bubbles: true,\n        cancelable: true\n      })\n    );\n    elem.click();\n    clicked = true;\n  }\n  return clicked;\n}\n\n/**\n * @desc Calls the click method of the supplied element and waits the\n * specified delayTime after clicking IFF the supplied element was\n * non-null/undefined.\n * @param {HTMLElement|Element} elem - The element to be clicked\n * @param {number} [delayTime = 1000] - How long is the delay after click\n * @returns {Promise<boolean>} - A Promise that resolves to T/F\n * indicating if the click happened\n */\nexport async function clickWithDelay(elem, delayTime = 1000) {\n  let clicked = click(elem);\n  if (clicked) {\n    await delay(delayTime);\n  }\n  return clicked;\n}\n\n/**\n * @desc Calls the click method of the supplied element that exists in\n * the JS context of the supplied window object (cntx) and waits the\n * specified delayTime after clicking IFF the supplied element was\n * non-null/undefined.\n * @param {HTMLElement|Element} elem - The element to be clicked\n * @param {Window} cntx - The context window\n * @param {number} [delayTime = 1000] - How long is the delay after click\n * @returns {Promise<boolean>} - A Promise that resolves to T/F\n * indicating if the click happened\n */\nexport async function clickInContextWithDelay(elem, cntx, delayTime = 1000) {\n  let clicked = clickInContext(elem, cntx);\n  if (clicked) {\n    await delay(delayTime);\n  }\n  return clicked;\n}\n\n/**\n * @desc Scrolls the supplied element into view and clicks it if the\n * element is non-null/undefined\n * @param {HTMLElement|Element} elem - The element to be scrolled into view\n * and clicked.\n * @return {boolean} - T/F to indicate that the click happened\n */\nexport function scrollIntoViewAndClick(elem) {\n  scrollIntoView(elem);\n  return click(elem);\n}\n\n/**\n * @desc Scrolls the supplied element into view and clicks it if the\n * element is non-null/undefined and waits for the specified delay time\n * @param {HTMLElement|Element} elem - The element to be\n * @param {number} [delayTime = 1000] - How long is the delay\n * @returns {Promise<boolean>} - A Promise that resolves to T/F indicating\n * that the click happened\n */\nexport function scrollIntoViewAndClickWithDelay(elem, delayTime = 1000) {\n  scrollIntoView(elem);\n  return clickWithDelay(elem, delayTime);\n}\n\n/**\n * @desc Scrolls into view and clicks all the elements\n * present in the supplied array.\n * @param {Array<HTMLElement>} elems - The array of elements\n * to be scrolled into view and clicked\n * @return {void}\n */\nexport function scrollAllIntoViewAndClick(elems) {\n  let i = 0;\n  let length = elems.length;\n  for (; i < length; ++i) {\n    scrollIntoView(elems[i]);\n    click(elems[i]);\n  }\n}\n\n/**\n * @desc Scrolls into view and clicks all the elements\n * present in the supplied array waiting for the supplied\n * delay time after each click of an element in the array.\n * @param {Array<HTMLElement|Element|Node>} elems - The array of elements\n * to be scrolled into view and clicked\n * @param {number} [delayTime = 1000] - How long is the delay after click\n * @returns {Promise<void>}\n */\nexport async function scrollAllIntoViewAndClickWithDelay(\n  elems,\n  delayTime = 1000\n) {\n  let i = 0;\n  let length = elems.length;\n  for (; i < length; ++i) {\n    scrollIntoView(elems[i]);\n    await clickWithDelay(elems[i], delayTime);\n  }\n}\n\n/**\n * @desc Clicks the element from executing document.querySelector using\n * the supplied selector\n * @param {string} selector - the css selector to use\n * @returns {boolean} - T/F to indicate that the click happened\n */\nexport function selectElemAndClick(selector) {\n  return click(document.querySelector(selector));\n}\n\n/**\n * @desc Clicks the element from executing document.querySelector using\n * the supplied selector and waiting the specified delay time after clicking\n * @param {string} selector - the css selector to use\n * @param {number} [delayTime = 1000] - How long is the delay\n * @returns {Promise<boolean>} - A Promise that resolves to T/F indicating\n * that the click happened\n */\nexport function selectElemAndClickWithDelay(selector, delayTime = 1000) {\n  return clickWithDelay(document.querySelector(selector), delayTime);\n}\n\n/**\n * @desc Clicks the element from executing querySelector using\n * the supplied selector using the supplied element\n * @param {Element|Node|HTMLElement} selectFrom - element to use for the querySelector call\n * @param {string} selector - the css selector to use\n * @returns {boolean} - T/F to indicate that the click happened\n */\nexport function selectElemFromAndClick(selectFrom, selector) {\n  return click(selectFrom.querySelector(selector));\n}\n\n/**\n * @desc Clicks the element from executing querySelector using\n * the supplied selector from the supplied element and waiting the specified delay time after clicking\n * @param {Element|Node|HTMLElement} selectFrom - element to use for the querySelector call\n * @param {string} selector - the css selector to use\n * @param {number} [delayTime = 1000] - How long is the delay\n * @returns {Promise<boolean>} - A Promise that resolves to T/F indicating\n * that the click happened\n */\nexport function selectElemFromAndClickWithDelay(\n  selectFrom,\n  selector,\n  delayTime = 1000\n) {\n  return clickWithDelay(selectFrom.querySelector(selector), delayTime);\n}\n\n/**\n * @desc Clicks the supplied element and then waits for the supplied predicate function to return true\n * @param {Element|Node|HTMLElement} elem - the element to be clicked\n * @param {function(): boolean} predicate - function returning true or false indicating the wait condition is satisfied\n * @returns {Promise<boolean>} - A Promise that resolves to T/F indicating that the click happened\n */\nexport async function clickAndWaitFor(elem, predicate) {\n  const clicked = click(elem);\n  if (clicked) {\n    await waitForPredicate(predicate);\n  }\n  return clicked;\n}\n\n/**\n * @desc Clicks the element returned by calling querySelector using the selector\n * on document or the supplied element (selectFrom) and then waits for the supplied\n * predicate function to return true\n * @param {string} selector - the css selector to use\n * @param {function(): boolean} predicate - function returning true or false indicating the wait condition is satisfied\n * @param {HTMLElement|Document} [selectFrom] - optional element to use for the querySelector(selector) call\n * @returns {Promise<boolean>} - A Promise that resolves to T/F indicating that the click happened\n */\nexport function selectClickAndWaitFor(selector, predicate, selectFrom) {\n  return clickAndWaitFor(qs(selector, selectFrom), predicate);\n}\n\n/**\n * @desc Clicks the element returned from result of calling querySelector using the supplied\n * selector on the supplied element N number of times. Note that the evaluation of the querySelector\n * is done all N times.\n * @param {HTMLElement|Element} selectFrom - element to use for the querySelector(selector) call\n * @param {string} selector - the css selector to use\n * @param {number} n - How many times to click the element returned by\n * performing selectFrom.querySelector(selector)\n */\nexport function selectFromAndClickNTimes(selectFrom, selector, n) {\n  let i = 0;\n  let clickMe;\n  for (; i < n; ++i) {\n    clickMe = selectFrom.querySelector(selector);\n    if (clickMe) {\n      click(clickMe);\n    }\n  }\n}\n\n/**\n * @desc Clicks the element returned from result of calling querySelector using the supplied\n * selector on the supplied element N number of times and waits for delay time afters each click.\n * Note that the evaluation of the querySelector is done all N times.\n * @param {HTMLElement|Element} selectFrom - The element to use to call querySelector(selector) on\n * @param {string} selector - the css selector to use\n * @param {number} n - How many times to click the element returned by\n * performing selectFrom.querySelector(selector)\n * @param {number} [delayTime = 1000] - How long is the delay\n */\nexport async function selectFromAndClickNTimesWithDelay(\n  selectFrom,\n  selector,\n  n,\n  delayTime = 1000\n) {\n  let i = 0;\n  let clickMe;\n  for (; i < n; ++i) {\n    clickMe = selectFrom.querySelector(selector);\n    if (clickMe) {\n      await clickWithDelay(clickMe, delayTime);\n    }\n  }\n}\n\n/**\n * @desc Clicks the element returned from result of calling querySelector using the supplied\n * selector on the supplied element until the results of the evaluting the selector returns null/undefined,\n * waiting for delay time afters each click.\n * @param {HTMLElement|Element} selectFrom - The element to use to call querySelector(selector) on\n * @param {string} selector - the css selector to use\n * performing selectFrom.querySelector(selector)\n * @param {{delayTime: number, safety: ?number}} [options] - options about delayTime and safety time\n */\nexport async function selectFromAndClickUntilNullWithDelay(\n  selectFrom,\n  selector,\n  options\n) {\n  const opts = Object.assign({ delayTime: 1000 }, options);\n  const delayTime = opts.delayTime;\n  let exit = false;\n  let safety;\n  if (opts.safety) {\n    safety = setTimeout(() => {\n      exit = true;\n    }, opts.safety);\n  }\n  let clickMe = selectFrom.querySelector(selector);\n  while (clickMe != null) {\n    if (exit) break;\n    await clickWithDelay(clickMe, delayTime);\n    clickMe = selectFrom.querySelector(selector);\n  }\n  if (opts.safety) {\n    clearTimeout(safety);\n  }\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/utils/clicks.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 229,
    "kind": "function",
    "name": "click",
    "memberof": "src/utils/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/clicks.js~click",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/clicks.js",
    "importStyle": "{click}",
    "description": "Calls the click function on the supplied element if non-null/defined.\nReturns true or false to indicate if the click happened",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be clicked"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "T/F to indicate that click happened."
    }
  },
  {
    "__docId__": 230,
    "kind": "function",
    "name": "clickInContext",
    "memberof": "src/utils/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/clicks.js~clickInContext",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/clicks.js",
    "importStyle": "{clickInContext}",
    "description": "Calls the click function on the supplied element if non-null/defined\nthat exists in the JS context of the supplied window (cntx).\nReturns true or false to indicate if the click happened",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be clicked"
      },
      {
        "nullable": null,
        "types": [
          "Window"
        ],
        "spread": false,
        "optional": false,
        "name": "cntx",
        "description": "The context window"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "T/F to indicate that click happened."
    }
  },
  {
    "__docId__": 231,
    "kind": "function",
    "name": "clickWithDelay",
    "memberof": "src/utils/clicks.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/utils/clicks.js~clickWithDelay",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/clicks.js",
    "importStyle": "{clickWithDelay}",
    "description": "Calls the click method of the supplied element and waits the\nspecified delayTime after clicking IFF the supplied element was\nnon-null/undefined.",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<boolean>} - A Promise that resolves to T/F\nindicating if the click happened"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be clicked"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "delayTime",
        "description": "How long is the delay after click"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": "A Promise that resolves to T/F\nindicating if the click happened"
    }
  },
  {
    "__docId__": 232,
    "kind": "function",
    "name": "clickInContextWithDelay",
    "memberof": "src/utils/clicks.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/utils/clicks.js~clickInContextWithDelay",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/clicks.js",
    "importStyle": "{clickInContextWithDelay}",
    "description": "Calls the click method of the supplied element that exists in\nthe JS context of the supplied window object (cntx) and waits the\nspecified delayTime after clicking IFF the supplied element was\nnon-null/undefined.",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<boolean>} - A Promise that resolves to T/F\nindicating if the click happened"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be clicked"
      },
      {
        "nullable": null,
        "types": [
          "Window"
        ],
        "spread": false,
        "optional": false,
        "name": "cntx",
        "description": "The context window"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "delayTime",
        "description": "How long is the delay after click"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": "A Promise that resolves to T/F\nindicating if the click happened"
    }
  },
  {
    "__docId__": 233,
    "kind": "function",
    "name": "scrollIntoViewAndClick",
    "memberof": "src/utils/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/clicks.js~scrollIntoViewAndClick",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/clicks.js",
    "importStyle": "{scrollIntoViewAndClick}",
    "description": "Scrolls the supplied element into view and clicks it if the\nelement is non-null/undefined",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be scrolled into view\nand clicked."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "T/F to indicate that the click happened"
    }
  },
  {
    "__docId__": 234,
    "kind": "function",
    "name": "scrollIntoViewAndClickWithDelay",
    "memberof": "src/utils/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/clicks.js~scrollIntoViewAndClickWithDelay",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/clicks.js",
    "importStyle": "{scrollIntoViewAndClickWithDelay}",
    "description": "Scrolls the supplied element into view and clicks it if the\nelement is non-null/undefined and waits for the specified delay time",
    "lineNumber": 107,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<boolean>} - A Promise that resolves to T/F indicating\nthat the click happened"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "delayTime",
        "description": "How long is the delay"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": "A Promise that resolves to T/F indicating\nthat the click happened"
    }
  },
  {
    "__docId__": 235,
    "kind": "function",
    "name": "scrollAllIntoViewAndClick",
    "memberof": "src/utils/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/clicks.js~scrollAllIntoViewAndClick",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/clicks.js",
    "importStyle": "{scrollAllIntoViewAndClick}",
    "description": "Scrolls into view and clicks all the elements\npresent in the supplied array.",
    "lineNumber": 119,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<HTMLElement>"
        ],
        "spread": false,
        "optional": false,
        "name": "elems",
        "description": "The array of elements\nto be scrolled into view and clicked"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 236,
    "kind": "function",
    "name": "scrollAllIntoViewAndClickWithDelay",
    "memberof": "src/utils/clicks.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/utils/clicks.js~scrollAllIntoViewAndClickWithDelay",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/clicks.js",
    "importStyle": "{scrollAllIntoViewAndClickWithDelay}",
    "description": "Scrolls into view and clicks all the elements\npresent in the supplied array waiting for the supplied\ndelay time after each click of an element in the array.",
    "lineNumber": 137,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<HTMLElement|Element|Node>"
        ],
        "spread": false,
        "optional": false,
        "name": "elems",
        "description": "The array of elements\nto be scrolled into view and clicked"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "delayTime",
        "description": "How long is the delay after click"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 237,
    "kind": "function",
    "name": "selectElemAndClick",
    "memberof": "src/utils/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/clicks.js~selectElemAndClick",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/clicks.js",
    "importStyle": "{selectElemAndClick}",
    "description": "Clicks the element from executing document.querySelector using\nthe supplied selector",
    "lineNumber": 155,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - T/F to indicate that the click happened"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the css selector to use"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "T/F to indicate that the click happened"
    }
  },
  {
    "__docId__": 238,
    "kind": "function",
    "name": "selectElemAndClickWithDelay",
    "memberof": "src/utils/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/clicks.js~selectElemAndClickWithDelay",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/clicks.js",
    "importStyle": "{selectElemAndClickWithDelay}",
    "description": "Clicks the element from executing document.querySelector using\nthe supplied selector and waiting the specified delay time after clicking",
    "lineNumber": 167,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<boolean>} - A Promise that resolves to T/F indicating\nthat the click happened"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the css selector to use"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "delayTime",
        "description": "How long is the delay"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": "A Promise that resolves to T/F indicating\nthat the click happened"
    }
  },
  {
    "__docId__": 239,
    "kind": "function",
    "name": "selectElemFromAndClick",
    "memberof": "src/utils/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/clicks.js~selectElemFromAndClick",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/clicks.js",
    "importStyle": "{selectElemFromAndClick}",
    "description": "Clicks the element from executing querySelector using\nthe supplied selector using the supplied element",
    "lineNumber": 178,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} - T/F to indicate that the click happened"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "Node",
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "selectFrom",
        "description": "element to use for the querySelector call"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the css selector to use"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "T/F to indicate that the click happened"
    }
  },
  {
    "__docId__": 240,
    "kind": "function",
    "name": "selectElemFromAndClickWithDelay",
    "memberof": "src/utils/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/clicks.js~selectElemFromAndClickWithDelay",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/clicks.js",
    "importStyle": "{selectElemFromAndClickWithDelay}",
    "description": "Clicks the element from executing querySelector using\nthe supplied selector from the supplied element and waiting the specified delay time after clicking",
    "lineNumber": 191,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<boolean>} - A Promise that resolves to T/F indicating\nthat the click happened"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "Node",
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "selectFrom",
        "description": "element to use for the querySelector call"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the css selector to use"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "delayTime",
        "description": "How long is the delay"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": "A Promise that resolves to T/F indicating\nthat the click happened"
    }
  },
  {
    "__docId__": 241,
    "kind": "function",
    "name": "clickAndWaitFor",
    "memberof": "src/utils/clicks.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/utils/clicks.js~clickAndWaitFor",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/clicks.js",
    "importStyle": "{clickAndWaitFor}",
    "description": "Clicks the supplied element and then waits for the supplied predicate function to return true",
    "lineNumber": 205,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<boolean>} - A Promise that resolves to T/F indicating that the click happened"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "Node",
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "the element to be clicked"
      },
      {
        "nullable": null,
        "types": [
          "function(): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "predicate",
        "description": "function returning true or false indicating the wait condition is satisfied"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": "A Promise that resolves to T/F indicating that the click happened"
    }
  },
  {
    "__docId__": 242,
    "kind": "function",
    "name": "selectClickAndWaitFor",
    "memberof": "src/utils/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/clicks.js~selectClickAndWaitFor",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/clicks.js",
    "importStyle": "{selectClickAndWaitFor}",
    "description": "Clicks the element returned by calling querySelector using the selector\non document or the supplied element (selectFrom) and then waits for the supplied\npredicate function to return true",
    "lineNumber": 222,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<boolean>} - A Promise that resolves to T/F indicating that the click happened"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the css selector to use"
      },
      {
        "nullable": null,
        "types": [
          "function(): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "predicate",
        "description": "function returning true or false indicating the wait condition is satisfied"
      },
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "selectFrom",
        "description": "optional element to use for the querySelector(selector) call"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": "A Promise that resolves to T/F indicating that the click happened"
    }
  },
  {
    "__docId__": 243,
    "kind": "function",
    "name": "selectFromAndClickNTimes",
    "memberof": "src/utils/clicks.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/clicks.js~selectFromAndClickNTimes",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/clicks.js",
    "importStyle": "{selectFromAndClickNTimes}",
    "description": "Clicks the element returned from result of calling querySelector using the supplied\nselector on the supplied element N number of times. Note that the evaluation of the querySelector\nis done all N times.",
    "lineNumber": 235,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "selectFrom",
        "description": "element to use for the querySelector(selector) call"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the css selector to use"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "How many times to click the element returned by\nperforming selectFrom.querySelector(selector)"
      }
    ],
    "return": null
  },
  {
    "__docId__": 244,
    "kind": "function",
    "name": "selectFromAndClickNTimesWithDelay",
    "memberof": "src/utils/clicks.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/utils/clicks.js~selectFromAndClickNTimesWithDelay",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/clicks.js",
    "importStyle": "{selectFromAndClickNTimesWithDelay}",
    "description": "Clicks the element returned from result of calling querySelector using the supplied\nselector on the supplied element N number of times and waits for delay time afters each click.\nNote that the evaluation of the querySelector is done all N times.",
    "lineNumber": 256,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "selectFrom",
        "description": "The element to use to call querySelector(selector) on"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the css selector to use"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "How many times to click the element returned by\nperforming selectFrom.querySelector(selector)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "delayTime",
        "description": "How long is the delay"
      }
    ],
    "return": null
  },
  {
    "__docId__": 245,
    "kind": "function",
    "name": "selectFromAndClickUntilNullWithDelay",
    "memberof": "src/utils/clicks.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/utils/clicks.js~selectFromAndClickUntilNullWithDelay",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/clicks.js",
    "importStyle": "{selectFromAndClickUntilNullWithDelay}",
    "description": "Clicks the element returned from result of calling querySelector using the supplied\nselector on the supplied element until the results of the evaluting the selector returns null/undefined,\nwaiting for delay time afters each click.",
    "lineNumber": 281,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "selectFrom",
        "description": "The element to use to call querySelector(selector) on"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the css selector to use\nperforming selectFrom.querySelector(selector)"
      },
      {
        "nullable": null,
        "types": [
          "{delayTime: number, safety: ?number}"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "options about delayTime and safety time"
      }
    ],
    "return": null
  },
  {
    "__docId__": 246,
    "kind": "file",
    "name": "src/utils/delays.js",
    "content": "import { qs, selectorExists } from './dom';\n\n/**\n * @desc Returns a Promise that resolves once\n * the behavior has been un-paused\n * @return {Promise<any>}\n */\nexport function resolveWhenUnPaused() {\n  return new Promise(resolve => {\n    let intervalId = setInterval(() => {\n      if (!window.$WBBehaviorPaused) {\n        clearInterval(intervalId);\n        resolve();\n      }\n    }, 2000);\n  });\n}\n\n/**\n * @desc Polls the supplied function at the timeout rate\n * only if the behavior is not paused\n * @return {number} - The id of the interval\n */\nexport function setIntervalP(callback, timeout) {\n  return setInterval(function() {\n    if (!window.$WBBehaviorPaused) {\n      callback();\n    }\n  }, timeout);\n}\n\n/**\n * @desc Like setTimeout except that the timeout respects the pause state\n * of the behavior\n * @return {number} - The id of the timeout\n */\nexport function setTimeoutP(callback, timeout) {\n  function execIfNotPaused() {\n    if (!window.$WBBehaviorPaused) {\n      callback();\n    } else {\n      setTimeout(execIfNotPaused, 500);\n    }\n  }\n\n  return setTimeout(execIfNotPaused, timeout);\n}\n\n/**\n * @desc Returns a Promise that resolves after waiting the amount of time\n * specified by delayTime.\n * @param {number} [delayTime = 3000] - The length of the delay in milliseconds\n * @returns {Promise<void>}\n */\nexport function delay(delayTime = 3000) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delayTime);\n  });\n}\n\n/**\n * @desc Returns a promise that resolves once the supplied predicate function\n * returns a truthy value.\n * @param {function(): boolean} predicate - A predicate function that\n * returns a truthy value to indicate the wait condition was satisfied otherwise\n * a falsy value to indicate wait condition not satisfied\n * @param {number} [pollRate = 1000] - The length of time, in milliseconds,\n * that the predicate is to be polled at\n * @return {Promise<void>}\n */\nexport function waitForPredicate(predicate, pollRate = 1000) {\n  return new Promise(resolve => {\n    let int = setInterval(() => {\n      if (predicate()) {\n        clearInterval(int);\n        resolve();\n      }\n    }, 1000);\n  });\n}\n\n/**\n * @desc Returns a promise that resolves when the supplied predicate function\n * returns a truthy value or the maximum wait time has been reached.\n * @param {function(): boolean} predicate - A predicate function that\n * returns a truthy value to indicate the wait condition was satisfied otherwise\n * a falsy value to indicate wait condition not satisfied\n * @param {number|{pollRate: ?number, max: ?number}} options - Either a\n * number (time in milliseconds) representing the maximum wait time for the\n * supplied predicate to return a truthy value or an object with properties\n * pollRate (optional, controls the interval rate the supplied predicate will be polled\n * at), max (how long to wait for the supplied predicate to return a truthy value)\n * @return {Promise<void>}\n */\nexport function waitForPredicateAtMax(predicate, options) {\n  const opts = Object.assign(\n    { pollRate: 1000 },\n    typeof options === 'number' ? { max: options } : options\n  );\n  return new Promise(resolve => {\n    let to = -1;\n    let int = setInterval(() => {\n      if (predicate()) {\n        clearTimeout(to);\n        clearInterval(int);\n        resolve();\n      }\n    }, opts.pollRate);\n    to = setTimeout(() => {\n      clearInterval(int);\n      resolve();\n    }, opts.max);\n  });\n}\n\n/**\n * @desc Calls `fromNode.querySelector` using the supplied selector. If the\n * return value of the first calls is null/undefined then waits for the same call\n * to return a truthy value and then returns the element the selector matches.\n * @param {Element|Node|HTMLElement} fromNode - The element the\n * to select `selector` from\n * @param {string} selector - The querySelector to use for `fromNode.querySelector`\n * call.\n * @param {number} [pollRate = 1000] - The length of time, in milliseconds,\n * that the predicate is to be polled at\n * @return {Promise<Element|Node|HTMLElement>}\n */\nexport async function waitForAndSelectElement(\n  fromNode,\n  selector,\n  pollRate = 1000\n) {\n  const elem = qs(selector, fromNode);\n  if (!elem) {\n    await waitForPredicate(() => selectorExists(selector), pollRate);\n    return qs(selector, fromNode);\n  }\n  return elem;\n}\n\n/**\n * @desc Returns a promise that resolves once\n * `document.readyState === 'complete'`\n * @return {Promise<void>}\n */\nexport function domCompletePromise() {\n  if (document.readyState !== 'complete') {\n    return new Promise(r => {\n      let i = setIntervalP(() => {\n        if (document.readyState === 'complete') {\n          clearInterval(i);\n          r();\n        }\n      }, 1000);\n    });\n  }\n  return Promise.resolve();\n}\n\n/**\n * @desc Waits for the number children of the supplied parentElement\n * to become greater than the supplied `currentChildCount`\n * @param {Element} parentElement - The parent\n * @param {number} currentChildCount\n * @param {{pollRate: number, max: ?number}} [options]\n * @return {Promise<void>}\n */\nexport function waitForAdditionalElemChildren(\n  parentElement,\n  currentChildCount,\n  options\n) {\n  const opts = Object.assign({ pollRate: 1000, max: 8 }, options);\n  let n = 0;\n  let int = -1;\n  return new Promise(resolve => {\n    int = setInterval(() => {\n      if (!parentElement.isConnected) {\n        clearInterval(int);\n        return resolve();\n      }\n      if (\n        parentElement.children &&\n        parentElement.children.length > currentChildCount\n      ) {\n        clearInterval(int);\n        return resolve();\n      }\n      if (n > opts.max) {\n        clearInterval(int);\n        return resolve();\n      }\n      n += 1;\n    }, opts.pollRate);\n  });\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/utils/delays.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 247,
    "kind": "function",
    "name": "resolveWhenUnPaused",
    "memberof": "src/utils/delays.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/delays.js~resolveWhenUnPaused",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/delays.js",
    "importStyle": "{resolveWhenUnPaused}",
    "description": "Returns a Promise that resolves once\nthe behavior has been un-paused",
    "lineNumber": 8,
    "return": {
      "nullable": null,
      "types": [
        "Promise<any>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 248,
    "kind": "function",
    "name": "setIntervalP",
    "memberof": "src/utils/delays.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/delays.js~setIntervalP",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/delays.js",
    "importStyle": "{setIntervalP}",
    "description": "Polls the supplied function at the timeout rate\nonly if the behavior is not paused",
    "lineNumber": 24,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The id of the interval"
    },
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      },
      {
        "name": "timeout",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 249,
    "kind": "function",
    "name": "setTimeoutP",
    "memberof": "src/utils/delays.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/delays.js~setTimeoutP",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/delays.js",
    "importStyle": "{setTimeoutP}",
    "description": "Like setTimeout except that the timeout respects the pause state\nof the behavior",
    "lineNumber": 37,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The id of the timeout"
    },
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      },
      {
        "name": "timeout",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 250,
    "kind": "function",
    "name": "delay",
    "memberof": "src/utils/delays.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/delays.js~delay",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/delays.js",
    "importStyle": "{delay}",
    "description": "Returns a Promise that resolves after waiting the amount of time\nspecified by delayTime.",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 3000",
        "defaultRaw": 3000,
        "name": "delayTime",
        "description": "The length of the delay in milliseconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 251,
    "kind": "function",
    "name": "waitForPredicate",
    "memberof": "src/utils/delays.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/delays.js~waitForPredicate",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/delays.js",
    "importStyle": "{waitForPredicate}",
    "description": "Returns a promise that resolves once the supplied predicate function\nreturns a truthy value.",
    "lineNumber": 71,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "predicate",
        "description": "A predicate function that\nreturns a truthy value to indicate the wait condition was satisfied otherwise\na falsy value to indicate wait condition not satisfied"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "pollRate",
        "description": "The length of time, in milliseconds,\nthat the predicate is to be polled at"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 252,
    "kind": "function",
    "name": "waitForPredicateAtMax",
    "memberof": "src/utils/delays.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/delays.js~waitForPredicateAtMax",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/delays.js",
    "importStyle": "{waitForPredicateAtMax}",
    "description": "Returns a promise that resolves when the supplied predicate function\nreturns a truthy value or the maximum wait time has been reached.",
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "predicate",
        "description": "A predicate function that\nreturns a truthy value to indicate the wait condition was satisfied otherwise\na falsy value to indicate wait condition not satisfied"
      },
      {
        "nullable": null,
        "types": [
          "number",
          "{pollRate: ?number, max: ?number}"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Either a\nnumber (time in milliseconds) representing the maximum wait time for the\nsupplied predicate to return a truthy value or an object with properties\npollRate (optional, controls the interval rate the supplied predicate will be polled\nat), max (how long to wait for the supplied predicate to return a truthy value)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 253,
    "kind": "function",
    "name": "waitForAndSelectElement",
    "memberof": "src/utils/delays.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/utils/delays.js~waitForAndSelectElement",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/delays.js",
    "importStyle": "{waitForAndSelectElement}",
    "description": "Calls `fromNode.querySelector` using the supplied selector. If the\nreturn value of the first calls is null/undefined then waits for the same call\nto return a truthy value and then returns the element the selector matches.",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "Node",
          "HTMLElement"
        ],
        "spread": false,
        "optional": false,
        "name": "fromNode",
        "description": "The element the\nto select `selector` from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "The querySelector to use for `fromNode.querySelector`\ncall."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "pollRate",
        "description": "The length of time, in milliseconds,\nthat the predicate is to be polled at"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Element|Node|HTMLElement>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 254,
    "kind": "function",
    "name": "domCompletePromise",
    "memberof": "src/utils/delays.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/delays.js~domCompletePromise",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/delays.js",
    "importStyle": "{domCompletePromise}",
    "description": "Returns a promise that resolves once\n`document.readyState === 'complete'`",
    "lineNumber": 146,
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 255,
    "kind": "function",
    "name": "waitForAdditionalElemChildren",
    "memberof": "src/utils/delays.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/delays.js~waitForAdditionalElemChildren",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/delays.js",
    "importStyle": "{waitForAdditionalElemChildren}",
    "description": "Waits for the number children of the supplied parentElement\nto become greater than the supplied `currentChildCount`",
    "lineNumber": 168,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "parentElement",
        "description": "The parent"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "currentChildCount",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "{pollRate: number, max: ?number}"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 256,
    "kind": "file",
    "name": "src/utils/dom.js",
    "content": "/**\n * @desc Returns the results of evaluating the supplied\n * xpath query using an optional context `contextElement`, defaults\n * to document, as XPathResult.ORDERED_NODE_SNAPSHOT_TYPE\n * @param {string} xpathQuery - The xpath query to be evaluated\n * @param {Element|Document} [contextElement] - Optional\n * element to be used as the context of the evaluation\n * @return {XPathResult} - The results of the xpath query evaluation\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/evaluate\n */\nexport function xpathSnapShot(xpathQuery, contextElement) {\n  if (contextElement == null) {\n    contextElement = document;\n  }\n  return document.evaluate(\n    xpathQuery,\n    contextElement,\n    null,\n    XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,\n    null\n  );\n}\n\n/**\n * @desc Provides the same functionality of the chrome console utility `$x`\n * but likely less performant\n * @param {string} xpathQuery - The xpath query to be evaluated\n * @param {Element|Document} [contextElement] - Optional\n * element to be used as the context of the evaluation\n * @return {Array<HTMLElement>} - The results of the xpath query evaluation\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/evaluate\n * @see https://developers.google.com/web/tools/chrome-devtools/console/utilities\n */\nexport function xpathSnapShotArray(xpathQuery, contextElement) {\n  const snapShot = xpathSnapShot(xpathQuery, contextElement);\n  const elements = [];\n  let i = 0;\n  let len = snapShot.snapshotLength;\n  while (i < len) {\n    elements.push(snapShot.snapshotItem(i));\n    i += 1;\n  }\n  return elements;\n}\n\n/**\n * @desc Ensures that if the value of the chrome console utility $x\n * is not the actual utility (jquery is on the page) the returned\n * function behaves exactly like it.\n * @param {function} cliXPG\n * @return {function: Array<HTMLElement>}\n */\nexport function maybePolyfillXPG(cliXPG) {\n  if (\n    typeof cliXPG !== 'function' ||\n    cliXPG.toString().indexOf('[Command Line API]') === -1\n  ) {\n    return xpathSnapShotArray;\n  }\n  return cliXPG;\n}\n\n/**\n * @desc Utility function for `(document||element).querySelector(selector)`\n * @param {string} selector - the selector to be use\n * @param {Element|Node|HTMLElement|Document} [context] - element to use rather than document for the querySelector call\n * @returns {Element|Node|HTMLElement|HTMLIFrameElement}\n */\nexport function qs(selector, context) {\n  if (context != null) return context.querySelector(selector);\n  return document.querySelector(selector);\n}\n\n/**\n * @desc Utility function for `document.querySelectorAll(selector)`\n * @param {string} selector - the selector to be use\n * @param {Element|Node|HTMLElement|Document} [context] - element to use rather than document for the querySelector call\n * @returns {NodeList<Element|Node|HTMLElement>}\n */\nexport function qsa(selector, context) {\n  if (context != null) return context.querySelectorAll(selector);\n  return document.querySelectorAll(selector);\n}\n\n/**\n * @desc Utility function for `document.getElementById(id)`\n * @param {string} eid - The id of the element to get\n * @param {?Document} [context] - Optional document element to use rather than\n * the current JS context's\n * @returns {?HTMLElement}\n */\nexport function id(eid, context) {\n  if (context != null) return context.getElementById(eid);\n  return document.getElementById(eid);\n}\n\n/**\n * @desc Removes the element selected by the supplied querySelector, if it exits,\n * returning true to indicate the element was removed and false otherwise\n * @param {string} selector - the selector to be use\n * @param {Element|Node|HTMLElement} [context] - element to use rather than document for the querySelector call\n * @returns {boolean}\n */\nexport function maybeRemoveElem(selector, context) {\n  const elem = qs(selector, context);\n  if (elem) {\n    elem.remove();\n    return true;\n  }\n  return false;\n}\n\n/**\n * @desc Removes the element with the supplied id, if it exits, returning\n * true to indicate the element was removed and false otherwise\n * @param {string} eid - The id of the element to remove\n * @param {?Document} [context] - Optional document element to use rather than\n * the current JS context's\n * @returns {boolean}\n */\nexport function maybeRemoveElemById(eid, context) {\n  const elem = id(eid, context);\n  if (elem) {\n    elem.remove();\n    return true;\n  }\n  return false;\n}\n\n/**\n * @desc Returns true if the supplied elements `offsetTop === 0`\n * @param {Element|HTMLElement|Node} elem - The element to check its\n * offsetTop\n * @returns {boolean}\n */\nexport function elemHasNonZeroTopOffset(elem) {\n  return elem.offsetTop !== 0;\n}\n\n/**\n * @desc Marks the supplied element as visited by adding the marker\n * to its classList.\n * @param {HTMLElement|Element|Node} elem - The element to mark\n * as visited\n * @param {string} [marker = 'wrvistited'] - Optional marker to use\n * defaults to `wrvistited`\n */\nexport function markElemAsVisited(elem, marker = 'wrvistited') {\n  if (elem != null) {\n    elem.classList.add(marker);\n  }\n}\n\n/**\n * @desc Creates a style tag if one was not created before and adds\n * the supplied `styleDef` to it. If a style tag was created before\n * this function is a no-op\n * @param {string} styleDef - The CSS rules to add\n */\nexport function addBehaviorStyle(styleDef) {\n  if (document.getElementById('$wrStyle$') == null) {\n    const style = document.createElement('style');\n    style.id = '$wrStyle$';\n    style.textContent = styleDef;\n    document.head.appendChild(style);\n  }\n}\n\n/**\n * @desc Determines if the supplied iframe is accessible from this\n * origin. Test is that access the window object of the iframes contentWindow\n * does not throw an exception and the contentDocument is not falsy.\n * @param {HTMLIFrameElement} iframe - The iframe to determine accessibility\n * @return {boolean} - True if the iframe is accessible and false otherwise\n */\nexport function canAcessIf(iframe) {\n  if (iframe == null) return false;\n  try {\n    iframe.contentWindow.window;\n  } catch (e) {\n    return false;\n  }\n  return iframe.contentDocument != null;\n}\n\n/**\n * @desc Determines if the element the supplied selector selects exists\n * @param {string} selector - The querySelector to use for testing if\n * the element it selects exists\n * @param {Document|Element} [cntx] - Optional element to use rather\n * than the current JS context's document object\n * @return {boolean} - True if the element exists, false otherwise\n */\nexport function selectorExists(selector, cntx) {\n  return qs(selector, cntx) != null;\n}\n\n/**\n * @desc Determines if the element the supplied id identifies exists\n * @param {string} eid - The id of the element\n * @param {Document} [cntx] - Optional document object to use rather\n * than the current JS context's document object\n * @return {boolean} - True if the element exists, false otherwise\n */\nexport function idExists(eid, cntx) {\n  return id(eid, cntx) != null;\n}\n\n/**\n * @desc Attempts to find a tag using the supplied function that accepts\n * an xpath query and an optional starting element and returns\n * the element the supplied predicate function returns a truthy value for\n * @param {function(xpathQuery: string, startElem: ?Node): Node[]} xpg - xpath execution function\n * @param {string} tag - The tag to be found\n * @param {function(elem: Node): boolean} predicate - Element selecting predicate function\n * @param {Document|Node} [cntx] - Optional starting element, defaults to `document`\n * @return {?Element|?HTMLIFrameElement|?Node} - The desired element if it was found\n */\nexport function findTag(xpg, tag, predicate, cntx) {\n  const tags = xpg(`//${tag}`, cntx || document);\n  const len = tags.length;\n  let i = 0;\n  for (; i < len; ++i) {\n    if (predicate(tags[i])) return tags[i];\n  }\n  return null;\n}\n\n/**\n * @desc Retrieves the value of an elements attribute if it exists\n * @param {Element} elem - The element to retrieve an attribute from\n * @param {string} attr - The name of the attribute to be retrieved\n * @return {?string|?Object} - The value of the retrieved attribute if it exists\n */\nexport function attr(elem, attr) {\n  if (elem) return elem.getAttribute(attr);\n  return null;\n}\n\n/**\n * @desc Tests to determine if the value of elements attribute equals\n * the supplied value using loose equality\n * @param {Element} elem - The element to retrieve an attribute from\n * @param {string} attr - The name of the attribute to be retrieved\n * @param {*} shouldEq - The value the attributes value should equal\n * @return {boolean} - T/F indicating if the attribute equals. Note\n * false can indicate the attribute does not equal expected or\n * the element was null/undefined\n */\nexport function attrEq(elem, attr, shouldEq) {\n  if (elem) return elem.getAttribute(attr) == shouldEq;\n  return false;\n}\n\n/**\n * @desc Returns the Nth child of the supplied element (indexing assumes start is 1)\n * @param {Document|Element} elem - The element to retrieve the nth child of\n * @param {number} nth - The number of the nth child\n * @return {?Element} - The nth child if it exists\n */\nexport function nthChildElemOf(elem, nth) {\n  if (elem && elem.children && elem.children.length >= nth) {\n    return elem.children[nth - 1];\n  }\n  return null;\n}\n\n/**\n * @desc Consecutively calls querySelector(selector) on the element returned by the previous invocation\n * @param {Element|Node|Document} startingSelectFrom - The first element to perform querySelector(startingSelector) on\n * @param {string} startingSelector - The first selector\n * @param {...string} selectors - Additional selections\n * @return {?Element} - Final selected element if it exists\n */\nexport function chainQs(startingSelectFrom, startingSelector, ...selectors) {\n  let selected = qs(startingSelector, startingSelectFrom);\n  if (selected != null) {\n    let len = selectors.length;\n    let i = 0;\n    for (; i < len; ++i) {\n      selected = qs(selectors[i], selected);\n      if (selected == null) return null;\n    }\n  }\n  return selected;\n}\n\n/**\n * @desc Adds a CSS classname to the supplied element\n * @param {?Element|?Node} elem - The element to add the classname to\n * @param {string} clazz - The classname to be added\n */\nexport function addClass(elem, clazz) {\n  if (elem) {\n    elem.classList.add(clazz);\n  }\n}\n\n/**\n * @desc Removes a CSS classname to the supplied element\n * @param {?Element|?Node} elem - The element to remove the classname to\n * @param {string} clazz - The classname to be removed\n */\nexport function removeClass(elem, clazz) {\n  if (elem) {\n    elem.classList.remove(clazz);\n  }\n}\n\n/**\n * @desc Tests to see if the supplied element has a css class\n * @param {?Element} elem - The element to be tested if it has the class\n * @param {string} clazz - The classname\n * @return {boolean} - T/F indicating if the element has the class\n */\nexport function hasClass(elem, clazz) {\n  if (elem) return elem.classList.contains(clazz);\n  return false;\n}\n\n/**\n * @desc Returns the supplied elements next element sibling\n * @param {Element|Node} elem - The element to receive its sibling\n * @return {?Element} - The elements sibling if it exists\n */\nexport function getElemSibling(elem) {\n  return elem.nextElementSibling;\n}\n\n/**\n * @desc Returns the supplied elements next element sibling and removes the\n * supplied element\n * @param {Element|Node} elem - The element to receive its sibling\n * @return {?Element} - The elements sibling if it exists\n */\nexport function getElemSiblingAndRemoveElem(elem) {\n  const sibling = elem.nextElementSibling;\n  elem.remove();\n  return sibling;\n}\n\n/**\n * @desc Determines if the supplied elements bounding client rect's\n * x,y,width,height,top,left properties all equal zero\n * @param {Element} elem - The element to be tested\n * @return {boolean} - T/F indicating if all zero or not\n */\nexport function elemHasZeroBoundingRect(elem) {\n  if (elem == null) return false;\n  const rect = elem.getBoundingClientRect();\n  return (\n    rect.x === 0 &&\n    rect.y === 0 &&\n    rect.width === 0 &&\n    rect.height === 0 &&\n    rect.top === 0 &&\n    rect.left === 0\n  );\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/utils/dom.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 257,
    "kind": "function",
    "name": "xpathSnapShot",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~xpathSnapShot",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{xpathSnapShot}",
    "description": "Returns the results of evaluating the supplied\nxpath query using an optional context `contextElement`, defaults\nto document, as XPathResult.ORDERED_NODE_SNAPSHOT_TYPE",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/Document/evaluate"
    ],
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "xpathQuery",
        "description": "The xpath query to be evaluated"
      },
      {
        "nullable": null,
        "types": [
          "Element",
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "contextElement",
        "description": "Optional\nelement to be used as the context of the evaluation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "XPathResult"
      ],
      "spread": false,
      "description": "The results of the xpath query evaluation"
    }
  },
  {
    "__docId__": 258,
    "kind": "function",
    "name": "xpathSnapShotArray",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~xpathSnapShotArray",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{xpathSnapShotArray}",
    "description": "Provides the same functionality of the chrome console utility `$x`\nbut likely less performant",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/API/Document/evaluate",
      "https://developers.google.com/web/tools/chrome-devtools/console/utilities"
    ],
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "xpathQuery",
        "description": "The xpath query to be evaluated"
      },
      {
        "nullable": null,
        "types": [
          "Element",
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "contextElement",
        "description": "Optional\nelement to be used as the context of the evaluation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<HTMLElement>"
      ],
      "spread": false,
      "description": "The results of the xpath query evaluation"
    }
  },
  {
    "__docId__": 259,
    "kind": "function",
    "name": "maybePolyfillXPG",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~maybePolyfillXPG",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{maybePolyfillXPG}",
    "description": "Ensures that if the value of the chrome console utility $x\nis not the actual utility (jquery is on the page) the returned\nfunction behaves exactly like it.",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "cliXPG",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function: Array<HTMLElement>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 260,
    "kind": "function",
    "name": "qs",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~qs",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{qs}",
    "description": "Utility function for `(document||element).querySelector(selector)`",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Element|Node|HTMLElement|HTMLIFrameElement}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the selector to be use"
      },
      {
        "nullable": null,
        "types": [
          "Element",
          "Node",
          "HTMLElement",
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "context",
        "description": "element to use rather than document for the querySelector call"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Element",
        "Node",
        "HTMLElement",
        "HTMLIFrameElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 261,
    "kind": "function",
    "name": "qsa",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~qsa",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{qsa}",
    "description": "Utility function for `document.querySelectorAll(selector)`",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{NodeList<Element|Node|HTMLElement>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the selector to be use"
      },
      {
        "nullable": null,
        "types": [
          "Element",
          "Node",
          "HTMLElement",
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "context",
        "description": "element to use rather than document for the querySelector call"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "NodeList<Element|Node|HTMLElement>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 262,
    "kind": "function",
    "name": "id",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~id",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{id}",
    "description": "Utility function for `document.getElementById(id)`",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?HTMLElement}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eid",
        "description": "The id of the element to get"
      },
      {
        "nullable": true,
        "types": [
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "context",
        "description": "Optional document element to use rather than\nthe current JS context's"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 263,
    "kind": "function",
    "name": "maybeRemoveElem",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~maybeRemoveElem",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{maybeRemoveElem}",
    "description": "Removes the element selected by the supplied querySelector, if it exits,\nreturning true to indicate the element was removed and false otherwise",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "the selector to be use"
      },
      {
        "nullable": null,
        "types": [
          "Element",
          "Node",
          "HTMLElement"
        ],
        "spread": false,
        "optional": true,
        "name": "context",
        "description": "element to use rather than document for the querySelector call"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 264,
    "kind": "function",
    "name": "maybeRemoveElemById",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~maybeRemoveElemById",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{maybeRemoveElemById}",
    "description": "Removes the element with the supplied id, if it exits, returning\ntrue to indicate the element was removed and false otherwise",
    "lineNumber": 121,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eid",
        "description": "The id of the element to remove"
      },
      {
        "nullable": true,
        "types": [
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "context",
        "description": "Optional document element to use rather than\nthe current JS context's"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 265,
    "kind": "function",
    "name": "elemHasNonZeroTopOffset",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~elemHasNonZeroTopOffset",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{elemHasNonZeroTopOffset}",
    "description": "Returns true if the supplied elements `offsetTop === 0`",
    "lineNumber": 136,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "HTMLElement",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to check its\noffsetTop"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 266,
    "kind": "function",
    "name": "markElemAsVisited",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~markElemAsVisited",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{markElemAsVisited}",
    "description": "Marks the supplied element as visited by adding the marker\nto its classList.",
    "lineNumber": 148,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Element",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to mark\nas visited"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 'wrvistited'",
        "defaultRaw": " 'wrvistited'",
        "name": "marker",
        "description": "Optional marker to use\ndefaults to `wrvistited`"
      }
    ],
    "return": null
  },
  {
    "__docId__": 267,
    "kind": "function",
    "name": "addBehaviorStyle",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~addBehaviorStyle",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{addBehaviorStyle}",
    "description": "Creates a style tag if one was not created before and adds\nthe supplied `styleDef` to it. If a style tag was created before\nthis function is a no-op",
    "lineNumber": 160,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "styleDef",
        "description": "The CSS rules to add"
      }
    ],
    "return": null
  },
  {
    "__docId__": 268,
    "kind": "function",
    "name": "canAcessIf",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~canAcessIf",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{canAcessIf}",
    "description": "Determines if the supplied iframe is accessible from this\norigin. Test is that access the window object of the iframes contentWindow\ndoes not throw an exception and the contentDocument is not falsy.",
    "lineNumber": 176,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLIFrameElement"
        ],
        "spread": false,
        "optional": false,
        "name": "iframe",
        "description": "The iframe to determine accessibility"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True if the iframe is accessible and false otherwise"
    }
  },
  {
    "__docId__": 269,
    "kind": "function",
    "name": "selectorExists",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~selectorExists",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{selectorExists}",
    "description": "Determines if the element the supplied selector selects exists",
    "lineNumber": 194,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "The querySelector to use for testing if\nthe element it selects exists"
      },
      {
        "nullable": null,
        "types": [
          "Document",
          "Element"
        ],
        "spread": false,
        "optional": true,
        "name": "cntx",
        "description": "Optional element to use rather\nthan the current JS context's document object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True if the element exists, false otherwise"
    }
  },
  {
    "__docId__": 270,
    "kind": "function",
    "name": "idExists",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~idExists",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{idExists}",
    "description": "Determines if the element the supplied id identifies exists",
    "lineNumber": 205,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eid",
        "description": "The id of the element"
      },
      {
        "nullable": null,
        "types": [
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "cntx",
        "description": "Optional document object to use rather\nthan the current JS context's document object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True if the element exists, false otherwise"
    }
  },
  {
    "__docId__": 271,
    "kind": "function",
    "name": "findTag",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~findTag",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{findTag}",
    "description": "Attempts to find a tag using the supplied function that accepts\nan xpath query and an optional starting element and returns\nthe element the supplied predicate function returns a truthy value for",
    "lineNumber": 219,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(xpathQuery: string, startElem: ?Node): Node[]"
        ],
        "spread": false,
        "optional": false,
        "name": "xpg",
        "description": "xpath execution function"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tag",
        "description": "The tag to be found"
      },
      {
        "nullable": null,
        "types": [
          "function(elem: Node): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "predicate",
        "description": "Element selecting predicate function"
      },
      {
        "nullable": null,
        "types": [
          "Document",
          "Node"
        ],
        "spread": false,
        "optional": true,
        "name": "cntx",
        "description": "Optional starting element, defaults to `document`"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Element",
        "?HTMLIFrameElement",
        "?Node"
      ],
      "spread": false,
      "description": "The desired element if it was found"
    }
  },
  {
    "__docId__": 272,
    "kind": "function",
    "name": "attr",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~attr",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{attr}",
    "description": "Retrieves the value of an elements attribute if it exists",
    "lineNumber": 235,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to retrieve an attribute from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "attr",
        "description": "The name of the attribute to be retrieved"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "string",
        "?Object"
      ],
      "spread": false,
      "description": "The value of the retrieved attribute if it exists"
    }
  },
  {
    "__docId__": 273,
    "kind": "function",
    "name": "attrEq",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~attrEq",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{attrEq}",
    "description": "Tests to determine if the value of elements attribute equals\nthe supplied value using loose equality",
    "lineNumber": 250,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to retrieve an attribute from"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "attr",
        "description": "The name of the attribute to be retrieved"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "shouldEq",
        "description": "The value the attributes value should equal"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "T/F indicating if the attribute equals. Note\nfalse can indicate the attribute does not equal expected or\nthe element was null/undefined"
    }
  },
  {
    "__docId__": 274,
    "kind": "function",
    "name": "nthChildElemOf",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~nthChildElemOf",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{nthChildElemOf}",
    "description": "Returns the Nth child of the supplied element (indexing assumes start is 1)",
    "lineNumber": 261,
    "params": [
      {
        "nullable": null,
        "types": [
          "Document",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to retrieve the nth child of"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "nth",
        "description": "The number of the nth child"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "The nth child if it exists"
    }
  },
  {
    "__docId__": 275,
    "kind": "function",
    "name": "chainQs",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~chainQs",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{chainQs}",
    "description": "Consecutively calls querySelector(selector) on the element returned by the previous invocation",
    "lineNumber": 275,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "Node",
          "Document"
        ],
        "spread": false,
        "optional": false,
        "name": "startingSelectFrom",
        "description": "The first element to perform querySelector(startingSelector) on"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "startingSelector",
        "description": "The first selector"
      },
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "selectors",
        "description": "Additional selections"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "Final selected element if it exists"
    }
  },
  {
    "__docId__": 276,
    "kind": "function",
    "name": "addClass",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~addClass",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{addClass}",
    "description": "Adds a CSS classname to the supplied element",
    "lineNumber": 293,
    "params": [
      {
        "nullable": true,
        "types": [
          "Element",
          "?Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to add the classname to"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "clazz",
        "description": "The classname to be added"
      }
    ],
    "return": null
  },
  {
    "__docId__": 277,
    "kind": "function",
    "name": "removeClass",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~removeClass",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{removeClass}",
    "description": "Removes a CSS classname to the supplied element",
    "lineNumber": 304,
    "params": [
      {
        "nullable": true,
        "types": [
          "Element",
          "?Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to remove the classname to"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "clazz",
        "description": "The classname to be removed"
      }
    ],
    "return": null
  },
  {
    "__docId__": 278,
    "kind": "function",
    "name": "hasClass",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~hasClass",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{hasClass}",
    "description": "Tests to see if the supplied element has a css class",
    "lineNumber": 316,
    "params": [
      {
        "nullable": true,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be tested if it has the class"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "clazz",
        "description": "The classname"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "T/F indicating if the element has the class"
    }
  },
  {
    "__docId__": 279,
    "kind": "function",
    "name": "getElemSibling",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~getElemSibling",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{getElemSibling}",
    "description": "Returns the supplied elements next element sibling",
    "lineNumber": 326,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to receive its sibling"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "The elements sibling if it exists"
    }
  },
  {
    "__docId__": 280,
    "kind": "function",
    "name": "getElemSiblingAndRemoveElem",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~getElemSiblingAndRemoveElem",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{getElemSiblingAndRemoveElem}",
    "description": "Returns the supplied elements next element sibling and removes the\nsupplied element",
    "lineNumber": 336,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to receive its sibling"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": "The elements sibling if it exists"
    }
  },
  {
    "__docId__": 281,
    "kind": "function",
    "name": "elemHasZeroBoundingRect",
    "memberof": "src/utils/dom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/dom.js~elemHasZeroBoundingRect",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/dom.js",
    "importStyle": "{elemHasZeroBoundingRect}",
    "description": "Determines if the supplied elements bounding client rect's\nx,y,width,height,top,left properties all equal zero",
    "lineNumber": 348,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be tested"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "T/F indicating if all zero or not"
    }
  },
  {
    "__docId__": 282,
    "kind": "file",
    "name": "src/utils/general.js",
    "content": "/**\n * @desc Retrieves the property of an object, or item in array at index, based\n * on the supplied path.\n * @example\n *   const obj = { a: { b: { c: [1, 2, 3] } } }\n *   const two = getViaPath(obj, 'a', 'b', 'c', 1); // two == 2\n * @param {*} obj - An object\n * @param {*} pathItems\n * @return {*}\n */\nexport function getViaPath(obj, ...pathItems) {\n  if (obj == null || pathItems.length === 0) return null;\n  let cur = obj[pathItems.shift()];\n  if (cur == null) return null;\n  while (pathItems.length) {\n    cur = cur[pathItems.shift()];\n    if (cur == null) return null;\n  }\n  return cur;\n}\n\nlet didPauseAutoFetching = false;\n\nexport function autoFetchFromDoc() {\n  if (window.$WBAutoFetchWorker$) {\n    window.$WBAutoFetchWorker$.extractFromLocalDoc();\n  }\n}\n\nexport function sendAutoFetchWorkerURLs(urls) {\n  if (window.$WBAutoFetchWorker$) {\n    window.$WBAutoFetchWorker$.justFetch(urls);\n  }\n}\n\n/**\n * @desc This function is a no op\n */\nexport function noop() {}\n\n/**\n * @param {string} url\n * @param {Window} [win]\n * @return {Promise<Response>}\n */\nexport function safeFetch(url, win) {\n  if (win != null) return win.fetch(url).catch(noop);\n  return fetch(url).catch(noop);\n}\n\n/**\n * @desc Calls the play function on all elements returned by document.querySelector('audio', 'video')\n */\nexport function findAllMediaAndPlay() {\n  const mediaElems = document.querySelectorAll('audio, video');\n  let i = 0;\n  for (; i < mediaElems.length; i++) {\n    if (mediaElems[i].paused) {\n      mediaElems[i].play();\n    }\n  }\n}\n\n/**\n * @desc Automatically binds the non-inherited functions of the supplied\n * class to itself.\n * @param clazz\n */\nexport function autobind(clazz) {\n  for (const key of Object.getOwnPropertyNames(clazz.constructor.prototype)) {\n    const value = clazz[key];\n\n    if (key !== 'constructor' && typeof value === 'function') {\n      clazz[key] = value.bind(clazz);\n    }\n  }\n}\n\n/**\n * @desc Returns T/F if the supplied object has all of the supplied properties.\n * The existence check is `obj[prop] != null`\n * @param {Object} obj - The object to be tested\n * @param {...string} props - The property names\n * @return {boolean}\n */\nexport function objectHasProps(obj, ...props) {\n  if (obj == null) return false;\n  let i = props.length;\n  while (i--) {\n    if (obj[props[i]] == null) return false;\n  }\n  return true;\n}\n\n/**\n * @desc Returns T/F if an global property (on window) exists and has\n * all properties. The existence check is `obj[prop] != null`\n * @param {string} global - The name of the global\n * @param {...string} props - The property names\n * @return {boolean}\n */\nexport function globalWithPropsExist(global, ...props) {\n  const obj = window[global];\n  if (obj == null) return false;\n  let i = props.length;\n  while (i--) {\n    if (obj[props[i]] == null) return false;\n  }\n  return true;\n}\n\n/**\n * @desc Returns a new object with the properties of the object\n * on the new object\n * @param {?Object} object - The object to extract properties from\n * @param {...string} props - The property names to be extracted\n * @return {?Object} - The new object if the original object was not null\n */\nexport function extractProps(object, ...props) {\n  if (object == null) return null;\n  const extracted = {};\n  let i = props.length;\n  while (i--) {\n    extracted[props[i]] = object[props[i]];\n  }\n  return extracted;\n}\n\n/**\n * @desc Composes multiple functions from right to left into a single function.\n * The rightmost function can take multiple arguments with the remaining\n * functions taking only a single argument, the return value of the previous\n * invocation.\n * @param {...function(...args: *): *} funcs - The functions to compose.\n * @returns {function(...args: *): *} - A function obtained by composing the functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nexport function compose(...funcs) {\n  if (funcs.length === 0) {\n    return arg => arg;\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce((a, b) => (...args) => a(b(...args)));\n}\n\n/**\n * @desc Composes multiple async or Promise returning functions from right to\n * left into a single function. The rightmost function can take multiple arguments\n * with the remaining functions taking only a single argument, the return value\n * of the previous invocation.\n * @param {...function(...args:*): Promise<*>} funcs - The functions to compose.\n * @returns {function(...args:*): Promise<*>} - A function obtained by composing the functions\n * from right to left. For example, composeAsync(f, g, h) is identical to doing\n * (...args) => h(...args).then(result => g(result).then(result => f(result)).\n */\nexport function composeAsync(...funcs) {\n  if (funcs.length === 0) {\n    return async function() {\n      return arguments[0];\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce((a, b) => (...args) => b(...args).then(a));\n}\n\n/**\n * @desc Composes multiple Iterator returning functions from right to\n * left into a single function. The rightmost function can take multiple arguments\n * with the remaining functions taking only a single argument, the iterator returned\n * by the previous invocation. The composition of iterators can thought of\n * as chaining multiple iterators together, that is to say feeding the yielded results\n * of each iterator from right to left. This can be useful for chaining cascading\n * ordered actions.\n * @example\n *   function* iter1(iter) {\n *     console.log('start iter1');\n *     for (const value of iter) {\n *       yield `iter1 got \"${value}\" from the previous iter`;\n *     }\n *     yield 'end iter1';\n *   }\n *\n *   function* iter2(iter) {\n *     console.log('start iter2');\n *     for (const value of iter) {\n *       yield `iter2 got \"${value}\" from the previous iter`;\n *     }\n *     yield 'end iter2';\n *   }\n *\n *   function* iter3(...args) {\n *     console.log('start iter3');\n *     let i = args.length;\n *     while (i--) {\n *       yield args[i];\n *     }\n *    yield 'end iter3';\n *  }\n *\n *  const finalIter = composeIterators(iter1, iter2, iter3)(1, 2, 3, 4, 5);\n *\n *  for (const it of finalIter) {\n *    console.log(it);\n * }\n *\n *  // The output is as follows\n *  // logs \"start iter\" from iter1\n *  // logs \"start iter2\" from iter2\n *  // logs \"start iter3\" from iter3\n *  // logs 'iter1 got \"iter2 got \"5\" from the previous iter\" from the previous iter' from the for of finalIter\n *  // logs 'iter1 got \"iter2 got \"4\" from the previous iter\" from the previous iter' from the for of finalIter\n *  // logs 'iter1 got \"iter2 got \"3\" from the previous iter\" from the previous iter' from the for of finalIter\n *  // logs 'iter1 got \"iter2 got \"2\" from the previous iter\" from the previous iter' from the for of finalIter\n *  // logs 'iter1 got \"iter2 got \"1\" from the previous iter\" from the previous iter' from the for of finalIter\n *  // logs 'iter1 got \"iter2 got \"end iter3\" from the previous iter\" from the previous iter' from the for of finalIter\n *  // logs 'iter1 got \"end iter2\" from the previous iter' from the for of finalIter\n *  // logs 'end iter1' from the for of finalIter\n *\n * @param {...function(...args:*): Iterator<*>} funcs - The Iterator returning functions to be composed (chained)\n * @return {function(...args:*): Iterator<*>} - A function obtained by composing the functions\n * from right to left. See the documentations example for details\n */\nfunction composeIterators(...funcs) {\n  if (funcs.length === 0) {\n    return function*() {\n      yield arguments[0];\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(\n    (a, b) =>\n      function*(...args) {\n        yield* a(b(...args));\n      }\n  );\n}\n\n/**\n * @desc Composes multiple AsyncIterator returning functions from right to\n * left into a single function. The rightmost function can take multiple arguments\n * with the remaining functions taking only a single argument, the iterator returned\n * by the previous invocation. The composition of AsyncIterator can thought of\n * as chaining multiple AsyncIterator together, that is to say feeding the yielded results\n * of each iterator from right to left. This can be useful for chaining cascading asynchronous\n * ordered actions.\n * @example\n *   async function* iter1(iter) {\n *     console.log('start iter1');\n *     for await (const value of iter) {\n *       yield `iter1 got \"${value}\" from the previous iter`;\n *     }\n *     yield 'end iter1';\n *   }\n *\n *   async function* iter2(iter) {\n *     console.log('start iter2');\n *     for await (const value of iter) {\n *       yield `iter2 got \"${value}\" from the previous iter`;\n *     }\n *     yield 'end iter2';\n *   }\n *\n *   async function* iter3(...args) {\n *     console.log('start iter3');\n *     let i = args.length;\n *     while (i--) {\n *       yield args[i];\n *     }\n *    yield 'end iter3';\n *  }\n *\n *  const finalAIter = composeAsyncIterators(iter1, iter2, iter3)(1, 2, 3, 4, 5);\n *\n *  for await (const it of finalAIter) {\n *    console.log(it);\n * }\n *\n *  // The output is as follows\n *  // logs \"start iter\" from iter1\n *  // logs \"start iter2\" from iter2\n *  // logs \"start iter3\" from iter3\n *  // logs 'iter1 got \"iter2 got \"5\" from the previous iter\" from the previous iter' from the for await of finalAiter\n *  // logs 'iter1 got \"iter2 got \"4\" from the previous iter\" from the previous iter' from the for await of finalAiter\n *  // logs 'iter1 got \"iter2 got \"3\" from the previous iter\" from the previous iter' from the for await of finalAiter\n *  // logs 'iter1 got \"iter2 got \"2\" from the previous iter\" from the previous iter' from the for await of finalAiter\n *  // logs 'iter1 got \"iter2 got \"1\" from the previous iter\" from the previous iter' from the for await of finalAiter\n *  // logs 'iter1 got \"iter2 got \"end iter3\" from the previous iter\" from the previous iter' from the for await of finalAiter\n *  // logs 'iter1 got \"end iter2\" from the previous iter' from the for await of finalAiter\n *  // logs 'end iter1' from the for await of finalAiter\n *\n * @param {...function(...args:*): AsyncIterator<*>} funcs - The AsyncIterator returning functions to be composed (chained)\n * @return {function(...args:*): AsyncIterator<*>} - A function obtained by composing the functions\n * from right to left. See the documentations example for details\n */\nexport function composeAsyncIterators(...funcs) {\n  if (funcs.length === 0) {\n    return async function*() {\n      yield arguments[0];\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(\n    (a, b) =>\n      async function*(...args) {\n        yield* a(b(...args));\n      }\n  );\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/utils/general.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 283,
    "kind": "function",
    "name": "getViaPath",
    "memberof": "src/utils/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/general.js~getViaPath",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/general.js",
    "importStyle": "{getViaPath}",
    "description": "Retrieves the property of an object, or item in array at index, based\non the supplied path.",
    "examples": [
      "  const obj = { a: { b: { c: [1, 2, 3] } } }\n  const two = getViaPath(obj, 'a', 'b', 'c', 1); // two == 2"
    ],
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "An object"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pathItems",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 284,
    "kind": "variable",
    "name": "didPauseAutoFetching",
    "memberof": "src/utils/general.js",
    "static": true,
    "longname": "src/utils/general.js~didPauseAutoFetching",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/utils/general.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 285,
    "kind": "function",
    "name": "autoFetchFromDoc",
    "memberof": "src/utils/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/general.js~autoFetchFromDoc",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/general.js",
    "importStyle": "{autoFetchFromDoc}",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 286,
    "kind": "function",
    "name": "sendAutoFetchWorkerURLs",
    "memberof": "src/utils/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/general.js~sendAutoFetchWorkerURLs",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/general.js",
    "importStyle": "{sendAutoFetchWorkerURLs}",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [
      {
        "name": "urls",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 287,
    "kind": "function",
    "name": "noop",
    "memberof": "src/utils/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/general.js~noop",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/general.js",
    "importStyle": "{noop}",
    "description": "This function is a no op",
    "lineNumber": 39,
    "params": [],
    "return": null
  },
  {
    "__docId__": 288,
    "kind": "function",
    "name": "safeFetch",
    "memberof": "src/utils/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/general.js~safeFetch",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/general.js",
    "importStyle": "{safeFetch}",
    "description": "",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Window"
        ],
        "spread": false,
        "optional": true,
        "name": "win",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Response>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 289,
    "kind": "function",
    "name": "findAllMediaAndPlay",
    "memberof": "src/utils/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/general.js~findAllMediaAndPlay",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/general.js",
    "importStyle": "{findAllMediaAndPlay}",
    "description": "Calls the play function on all elements returned by document.querySelector('audio', 'video')",
    "lineNumber": 54,
    "params": [],
    "return": null
  },
  {
    "__docId__": 290,
    "kind": "function",
    "name": "autobind",
    "memberof": "src/utils/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/general.js~autobind",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/general.js",
    "importStyle": "{autobind}",
    "description": "Automatically binds the non-inherited functions of the supplied\nclass to itself.",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "clazz",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 291,
    "kind": "function",
    "name": "objectHasProps",
    "memberof": "src/utils/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/general.js~objectHasProps",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/general.js",
    "importStyle": "{objectHasProps}",
    "description": "Returns T/F if the supplied object has all of the supplied properties.\nThe existence check is `obj[prop] != null`",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "The object to be tested"
      },
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "props",
        "description": "The property names"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 292,
    "kind": "function",
    "name": "globalWithPropsExist",
    "memberof": "src/utils/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/general.js~globalWithPropsExist",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/general.js",
    "importStyle": "{globalWithPropsExist}",
    "description": "Returns T/F if an global property (on window) exists and has\nall properties. The existence check is `obj[prop] != null`",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "global",
        "description": "The name of the global"
      },
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "props",
        "description": "The property names"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 293,
    "kind": "function",
    "name": "extractProps",
    "memberof": "src/utils/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/general.js~extractProps",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/general.js",
    "importStyle": "{extractProps}",
    "description": "Returns a new object with the properties of the object\non the new object",
    "lineNumber": 119,
    "params": [
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "The object to extract properties from"
      },
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "props",
        "description": "The property names to be extracted"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The new object if the original object was not null"
    }
  },
  {
    "__docId__": 294,
    "kind": "function",
    "name": "compose",
    "memberof": "src/utils/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/general.js~compose",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/general.js",
    "importStyle": "{compose}",
    "description": "Composes multiple functions from right to left into a single function.\nThe rightmost function can take multiple arguments with the remaining\nfunctions taking only a single argument, the return value of the previous\ninvocation.",
    "lineNumber": 139,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function(...args: *): *} - A function obtained by composing the functions\nfrom right to left. For example, compose(f, g, h) is identical to doing\n(...args) => f(g(h(...args)))."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "...function(...args: *): *"
        ],
        "spread": true,
        "optional": false,
        "name": "funcs",
        "description": "The functions to compose."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function(...args: *): *"
      ],
      "spread": false,
      "description": "A function obtained by composing the functions\nfrom right to left. For example, compose(f, g, h) is identical to doing\n(...args) => f(g(h(...args)))."
    }
  },
  {
    "__docId__": 295,
    "kind": "function",
    "name": "composeAsync",
    "memberof": "src/utils/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/general.js~composeAsync",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/general.js",
    "importStyle": "{composeAsync}",
    "description": "Composes multiple async or Promise returning functions from right to\nleft into a single function. The rightmost function can take multiple arguments\nwith the remaining functions taking only a single argument, the return value\nof the previous invocation.",
    "lineNumber": 161,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function(...args:*): Promise<*>} - A function obtained by composing the functions\nfrom right to left. For example, composeAsync(f, g, h) is identical to doing\n(...args) => h(...args).then(result => g(result).then(result => f(result))."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "...function(...args:*): Promise<*>"
        ],
        "spread": true,
        "optional": false,
        "name": "funcs",
        "description": "The functions to compose."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function(...args:*): Promise<*>"
      ],
      "spread": false,
      "description": "A function obtained by composing the functions\nfrom right to left. For example, composeAsync(f, g, h) is identical to doing\n(...args) => h(...args).then(result => g(result).then(result => f(result))."
    }
  },
  {
    "__docId__": 296,
    "kind": "function",
    "name": "composeIterators",
    "memberof": "src/utils/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/general.js~composeIterators",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/utils/general.js",
    "importStyle": null,
    "description": "Composes multiple Iterator returning functions from right to\nleft into a single function. The rightmost function can take multiple arguments\nwith the remaining functions taking only a single argument, the iterator returned\nby the previous invocation. The composition of iterators can thought of\nas chaining multiple iterators together, that is to say feeding the yielded results\nof each iterator from right to left. This can be useful for chaining cascading\nordered actions.",
    "examples": [
      "  function* iter1(iter) {\n    console.log('start iter1');\n    for (const value of iter) {\n      yield `iter1 got \"${value}\" from the previous iter`;\n    }\n    yield 'end iter1';\n  }\n\n  function* iter2(iter) {\n    console.log('start iter2');\n    for (const value of iter) {\n      yield `iter2 got \"${value}\" from the previous iter`;\n    }\n    yield 'end iter2';\n  }\n\n  function* iter3(...args) {\n    console.log('start iter3');\n    let i = args.length;\n    while (i--) {\n      yield args[i];\n    }\n   yield 'end iter3';\n }\n\n const finalIter = composeIterators(iter1, iter2, iter3)(1, 2, 3, 4, 5);\n\n for (const it of finalIter) {\n   console.log(it);\n}\n\n // The output is as follows\n // logs \"start iter\" from iter1\n // logs \"start iter2\" from iter2\n // logs \"start iter3\" from iter3\n // logs 'iter1 got \"iter2 got \"5\" from the previous iter\" from the previous iter' from the for of finalIter\n // logs 'iter1 got \"iter2 got \"4\" from the previous iter\" from the previous iter' from the for of finalIter\n // logs 'iter1 got \"iter2 got \"3\" from the previous iter\" from the previous iter' from the for of finalIter\n // logs 'iter1 got \"iter2 got \"2\" from the previous iter\" from the previous iter' from the for of finalIter\n // logs 'iter1 got \"iter2 got \"1\" from the previous iter\" from the previous iter' from the for of finalIter\n // logs 'iter1 got \"iter2 got \"end iter3\" from the previous iter\" from the previous iter' from the for of finalIter\n // logs 'iter1 got \"end iter2\" from the previous iter' from the for of finalIter\n // logs 'end iter1' from the for of finalIter"
    ],
    "lineNumber": 232,
    "params": [
      {
        "nullable": null,
        "types": [
          "...function(...args:*): Iterator<*>"
        ],
        "spread": true,
        "optional": false,
        "name": "funcs",
        "description": "The Iterator returning functions to be composed (chained)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function(...args:*): Iterator<*>"
      ],
      "spread": false,
      "description": "A function obtained by composing the functions\nfrom right to left. See the documentations example for details"
    },
    "ignore": true
  },
  {
    "__docId__": 297,
    "kind": "function",
    "name": "composeAsyncIterators",
    "memberof": "src/utils/general.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/general.js~composeAsyncIterators",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/general.js",
    "importStyle": "{composeAsyncIterators}",
    "description": "Composes multiple AsyncIterator returning functions from right to\nleft into a single function. The rightmost function can take multiple arguments\nwith the remaining functions taking only a single argument, the iterator returned\nby the previous invocation. The composition of AsyncIterator can thought of\nas chaining multiple AsyncIterator together, that is to say feeding the yielded results\nof each iterator from right to left. This can be useful for chaining cascading asynchronous\nordered actions.",
    "examples": [
      "  async function* iter1(iter) {\n    console.log('start iter1');\n    for await (const value of iter) {\n      yield `iter1 got \"${value}\" from the previous iter`;\n    }\n    yield 'end iter1';\n  }\n\n  async function* iter2(iter) {\n    console.log('start iter2');\n    for await (const value of iter) {\n      yield `iter2 got \"${value}\" from the previous iter`;\n    }\n    yield 'end iter2';\n  }\n\n  async function* iter3(...args) {\n    console.log('start iter3');\n    let i = args.length;\n    while (i--) {\n      yield args[i];\n    }\n   yield 'end iter3';\n }\n\n const finalAIter = composeAsyncIterators(iter1, iter2, iter3)(1, 2, 3, 4, 5);\n\n for await (const it of finalAIter) {\n   console.log(it);\n}\n\n // The output is as follows\n // logs \"start iter\" from iter1\n // logs \"start iter2\" from iter2\n // logs \"start iter3\" from iter3\n // logs 'iter1 got \"iter2 got \"5\" from the previous iter\" from the previous iter' from the for await of finalAiter\n // logs 'iter1 got \"iter2 got \"4\" from the previous iter\" from the previous iter' from the for await of finalAiter\n // logs 'iter1 got \"iter2 got \"3\" from the previous iter\" from the previous iter' from the for await of finalAiter\n // logs 'iter1 got \"iter2 got \"2\" from the previous iter\" from the previous iter' from the for await of finalAiter\n // logs 'iter1 got \"iter2 got \"1\" from the previous iter\" from the previous iter' from the for await of finalAiter\n // logs 'iter1 got \"iter2 got \"end iter3\" from the previous iter\" from the previous iter' from the for await of finalAiter\n // logs 'iter1 got \"end iter2\" from the previous iter' from the for await of finalAiter\n // logs 'end iter1' from the for await of finalAiter"
    ],
    "lineNumber": 308,
    "params": [
      {
        "nullable": null,
        "types": [
          "...function(...args:*): AsyncIterator<*>"
        ],
        "spread": true,
        "optional": false,
        "name": "funcs",
        "description": "The AsyncIterator returning functions to be composed (chained)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function(...args:*): AsyncIterator<*>"
      ],
      "spread": false,
      "description": "A function obtained by composing the functions\nfrom right to left. See the documentations example for details"
    }
  },
  {
    "__docId__": 298,
    "kind": "file",
    "name": "src/utils/media.js",
    "content": "import { qs, id } from './dom';\n\n/**\n * @desc Calls the play method of the element returned by the querySelector\n * @param {string} selector - The query selector to select a media element\n * @param {Document|Element} [cntx] - Optional element/Document to use\n * to perform the querySelector call from\n */\nexport async function selectAndPlay(selector, cntx) {\n  const elem = qs(selector, cntx);\n  if (elem && elem.paused) {\n    await noExceptPlayMediaElement(elem);\n  }\n}\n\n/**\n * @desc Calls the play method of the element returned by calling document.getElementById\n * @param {string} eid - The id of the media element\n * @param {Document} [cntx] - Optional document object to use\n */\nexport async function selectIdAndPlay(eid, cntx) {\n  const elem = id(eid, cntx);\n  if (elem && elem.paused) {\n    await noExceptPlayMediaElement(elem);\n  }\n}\n\n/**\n * @desc Calls the play function of the supplied element catching the exception thrown\n * if any was thrown. Returns true indicating call to play was successful otherwise false\n * @param {HTMLMediaElement|Element} mediaElement\n * @return {Promise<boolean>} - Returns false if an exception occurred or true if playing was sucessful\n */\nexport async function noExceptPlayMediaElement(mediaElement) {\n  try {\n    await mediaElement.play();\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/utils/media.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 299,
    "kind": "function",
    "name": "selectAndPlay",
    "memberof": "src/utils/media.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/utils/media.js~selectAndPlay",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/media.js",
    "importStyle": "{selectAndPlay}",
    "description": "Calls the play method of the element returned by the querySelector",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "The query selector to select a media element"
      },
      {
        "nullable": null,
        "types": [
          "Document",
          "Element"
        ],
        "spread": false,
        "optional": true,
        "name": "cntx",
        "description": "Optional element/Document to use\nto perform the querySelector call from"
      }
    ],
    "return": null
  },
  {
    "__docId__": 300,
    "kind": "function",
    "name": "selectIdAndPlay",
    "memberof": "src/utils/media.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/utils/media.js~selectIdAndPlay",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/media.js",
    "importStyle": "{selectIdAndPlay}",
    "description": "Calls the play method of the element returned by calling document.getElementById",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eid",
        "description": "The id of the media element"
      },
      {
        "nullable": null,
        "types": [
          "Document"
        ],
        "spread": false,
        "optional": true,
        "name": "cntx",
        "description": "Optional document object to use"
      }
    ],
    "return": null
  },
  {
    "__docId__": 301,
    "kind": "function",
    "name": "noExceptPlayMediaElement",
    "memberof": "src/utils/media.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/utils/media.js~noExceptPlayMediaElement",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/media.js",
    "importStyle": "{noExceptPlayMediaElement}",
    "description": "Calls the play function of the supplied element catching the exception thrown\nif any was thrown. Returns true indicating call to play was successful otherwise false",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLMediaElement",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "mediaElement",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<boolean>"
      ],
      "spread": false,
      "description": "Returns false if an exception occurred or true if playing was sucessful"
    }
  },
  {
    "__docId__": 302,
    "kind": "file",
    "name": "src/utils/mutations.js",
    "content": "/**\n * @desc Observe dom mutation using a MutationObserver as a stream (AsyncIterator)\n */\nexport class MutationStream {\n  constructor() {\n    /**\n     * @type {MutationObserver}\n     */\n    this.mo = new MutationObserver((ml, ob) => {\n      if (this._resolve) {\n        this._resolve(ml);\n      }\n    });\n\n    /**\n     * @type {?function(arg:*)}\n     * @private\n     */\n    this._resolve = null;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this._loopStream = false;\n  }\n\n  /**\n   * @desc Start observing an element for mutations\n   * @param {Node} elem - The element to be observed for mutations\n   * @param {Object} config - Configuration object accepted by mutation observers\n   */\n  observe(elem, config) {\n    this.mo.observe(elem, config);\n    this._loopStream = true;\n  }\n\n  /**\n   * @desc Start observing an element for mutations and receive an async iterator\n   * yielding the observed mutations\n   * @param {Node} elem - The element to be observed for mutations\n   * @param {Object} config - Configuration object accepted by mutation observers\n   * @return {AsyncIterator<MutationRecord[]>}\n   */\n  observeStream(elem, config) {\n    this.observe(elem, config);\n    return this.streamItr();\n  }\n\n  /**\n   * @desc Creates a conditional mutation stream. If the startPredicate\n   * does not return true then the the observer discontents ending the stream.\n   * Otherwise the stream continues to emit mutations until the observer is\n   * disconnected or the stopPredicate returns true. The stopPredicate is polled\n   * at 1.5 second intervals when the observer is waiting for the next mutation.\n   * @param {Node} elem - The element to be observed for mutations\n   * @param {Object} config - Configuration object accepted by mutation observers\n   * @param {function(): boolean} startPredicate - Predicate function right before\n   * mutations are yielded to determine if the stream should end immediately or not\n   * @param {function(): boolean} stopPredicate - Predicate function polled\n   * while waiting for mutations to occur that returns false to indicate\n   * the stream should end.\n   * @return {AsyncIterator<MutationRecord[]>}\n   */\n  predicatedStream(elem, config, startPredicate, stopPredicate) {\n    this.observe(elem, config);\n    return this.predicateStreamItr(startPredicate, stopPredicate);\n  }\n\n  /**\n   * @desc Disconnects the mutation observer and ends the stream\n   */\n  disconnect() {\n    this.mo.disconnect();\n    this._loopStream = false;\n    if (this._resolve) {\n      this._resolve(null);\n    }\n    this._resolve = null;\n  }\n\n  /**\n   * @desc Returns a promise that resolves with the next observed mutation\n   * @return {Promise<?MutationRecord[]>}\n   * @private\n   */\n  _getNext() {\n    return new Promise(resolve => {\n      this._resolve = resolve;\n    });\n  }\n\n  /**\n   * @desc Returns an stream (async iterator) that yields\n   * the observed mutations. Must have called {@link observe} before\n   * calling this method, otherwise no mutations will be yielded\n   * @return {AsyncIterator<MutationRecord[]>}\n   */\n  async *streamItr() {\n    while (this._loopStream) {\n      let next = await this._getNext();\n      if (next == null) {\n        break;\n      }\n      yield next;\n    }\n    this.disconnect();\n  }\n\n  /**\n   * @desc Returns an mutation stream that ends if the startPredicate returns false\n   * otherwise keeps the stream alive until disconnect or the stopPredicate, polled\n   * at 1.5 second intervals when waiting for next mutation, returns false.\n   * Automatically disconnects at the end.\n   * @param {function(): boolean} startPredicate - Predicate function right before\n   * mutations are yielded to determine if the stream should end immediately or not\n   * @param {function(): boolean} stopPredicate - Predicate function polled\n   * while waiting for mutations to occur that returns false to indicate\n   * the stream should end.\n   * @return {AsyncIterator<?MutationRecord[]>}\n   */\n  async *predicateStreamItr(startPredicate, stopPredicate) {\n    if (!startPredicate()) {\n      return this.disconnect();\n    }\n    while (this._loopStream) {\n      let checkTo;\n      let next = await Promise.race([\n        this._getNext(),\n        new Promise(resolve => {\n          checkTo = setInterval(() => {\n            if (stopPredicate()) {\n              clearInterval(checkTo);\n              return resolve(null);\n            }\n          }, 1500);\n        })\n      ]);\n      if (checkTo) clearInterval(checkTo);\n      if (next == null) {\n        break;\n      }\n      yield next;\n    }\n    this.disconnect();\n  }\n\n  /**\n   * @return {AsyncIterator<?MutationRecord[]>}\n   */\n  [Symbol.asyncIterator]() {\n    return this.streamItr();\n  }\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/utils/mutations.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 303,
    "kind": "class",
    "name": "MutationStream",
    "memberof": "src/utils/mutations.js",
    "static": true,
    "longname": "src/utils/mutations.js~MutationStream",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/mutations.js",
    "importStyle": "{MutationStream}",
    "description": "Observe dom mutation using a MutationObserver as a stream (AsyncIterator)",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 304,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utils/mutations.js~MutationStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/mutations.js~MutationStream#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 305,
    "kind": "member",
    "name": "mo",
    "memberof": "src/utils/mutations.js~MutationStream",
    "static": false,
    "longname": "src/utils/mutations.js~MutationStream#mo",
    "access": "public",
    "description": "",
    "lineNumber": 9,
    "type": {
      "nullable": null,
      "types": [
        "MutationObserver"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 306,
    "kind": "member",
    "name": "_resolve",
    "memberof": "src/utils/mutations.js~MutationStream",
    "static": false,
    "longname": "src/utils/mutations.js~MutationStream#_resolve",
    "access": "private",
    "description": "",
    "lineNumber": 19,
    "type": {
      "nullable": true,
      "types": [
        "function(arg:*)"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 307,
    "kind": "member",
    "name": "_loopStream",
    "memberof": "src/utils/mutations.js~MutationStream",
    "static": false,
    "longname": "src/utils/mutations.js~MutationStream#_loopStream",
    "access": "private",
    "description": "",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 308,
    "kind": "method",
    "name": "observe",
    "memberof": "src/utils/mutations.js~MutationStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/mutations.js~MutationStream#observe",
    "access": "public",
    "description": "Start observing an element for mutations",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be observed for mutations"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Configuration object accepted by mutation observers"
      }
    ],
    "return": null
  },
  {
    "__docId__": 310,
    "kind": "method",
    "name": "observeStream",
    "memberof": "src/utils/mutations.js~MutationStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/mutations.js~MutationStream#observeStream",
    "access": "public",
    "description": "Start observing an element for mutations and receive an async iterator\nyielding the observed mutations",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be observed for mutations"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Configuration object accepted by mutation observers"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterator<MutationRecord[]>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 311,
    "kind": "method",
    "name": "predicatedStream",
    "memberof": "src/utils/mutations.js~MutationStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/mutations.js~MutationStream#predicatedStream",
    "access": "public",
    "description": "Creates a conditional mutation stream. If the startPredicate\ndoes not return true then the the observer discontents ending the stream.\nOtherwise the stream continues to emit mutations until the observer is\ndisconnected or the stopPredicate returns true. The stopPredicate is polled\nat 1.5 second intervals when the observer is waiting for the next mutation.",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be observed for mutations"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Configuration object accepted by mutation observers"
      },
      {
        "nullable": null,
        "types": [
          "function(): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "startPredicate",
        "description": "Predicate function right before\nmutations are yielded to determine if the stream should end immediately or not"
      },
      {
        "nullable": null,
        "types": [
          "function(): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "stopPredicate",
        "description": "Predicate function polled\nwhile waiting for mutations to occur that returns false to indicate\nthe stream should end."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterator<MutationRecord[]>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 312,
    "kind": "method",
    "name": "disconnect",
    "memberof": "src/utils/mutations.js~MutationStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/mutations.js~MutationStream#disconnect",
    "access": "public",
    "description": "Disconnects the mutation observer and ends the stream",
    "lineNumber": 73,
    "params": [],
    "return": null
  },
  {
    "__docId__": 315,
    "kind": "method",
    "name": "_getNext",
    "memberof": "src/utils/mutations.js~MutationStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/mutations.js~MutationStream#_getNext",
    "access": "private",
    "description": "Returns a promise that resolves with the next observed mutation",
    "lineNumber": 87,
    "return": {
      "nullable": null,
      "types": [
        "Promise<?MutationRecord[]>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 317,
    "kind": "method",
    "name": "streamItr",
    "memberof": "src/utils/mutations.js~MutationStream",
    "generator": true,
    "async": true,
    "static": false,
    "longname": "src/utils/mutations.js~MutationStream#streamItr",
    "access": "public",
    "description": "Returns an stream (async iterator) that yields\nthe observed mutations. Must have called {@link observe} before\ncalling this method, otherwise no mutations will be yielded",
    "lineNumber": 99,
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterator<MutationRecord[]>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 318,
    "kind": "method",
    "name": "predicateStreamItr",
    "memberof": "src/utils/mutations.js~MutationStream",
    "generator": true,
    "async": true,
    "static": false,
    "longname": "src/utils/mutations.js~MutationStream#predicateStreamItr",
    "access": "public",
    "description": "Returns an mutation stream that ends if the startPredicate returns false\notherwise keeps the stream alive until disconnect or the stopPredicate, polled\nat 1.5 second intervals when waiting for next mutation, returns false.\nAutomatically disconnects at the end.",
    "lineNumber": 122,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "startPredicate",
        "description": "Predicate function right before\nmutations are yielded to determine if the stream should end immediately or not"
      },
      {
        "nullable": null,
        "types": [
          "function(): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "stopPredicate",
        "description": "Predicate function polled\nwhile waiting for mutations to occur that returns false to indicate\nthe stream should end."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterator<?MutationRecord[]>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 319,
    "kind": "method",
    "name": "[Symbol.asyncIterator]",
    "memberof": "src/utils/mutations.js~MutationStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/mutations.js~MutationStream#[Symbol.asyncIterator]",
    "access": "public",
    "description": "",
    "lineNumber": 151,
    "return": {
      "nullable": null,
      "types": [
        "AsyncIterator<?MutationRecord[]>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 320,
    "kind": "file",
    "name": "src/utils/outlinkCollector.js",
    "content": "if (typeof window.$wbOutlinkSet$ === 'undefined') {\n  Object.defineProperty(window, '$wbOutlinkSet$', {\n    value: new Set(),\n    enumerable: false\n  });\n} else {\n  window.$wbOutlinkSet$.clear();\n}\n\nif (typeof window.$wbOutlinks$ === 'undefined') {\n  Object.defineProperty(window, '$wbOutlinks$', {\n    get() {\n      return Array.from(window.$wbOutlinkSet$);\n    },\n    set() {},\n    enumerable: false\n  });\n}\n\nconst outlinks = window.$wbOutlinkSet$;\n\nconst ignoredSchemes = [\n  'about:',\n  'data:',\n  'mailto:',\n  'javascript:',\n  'js:',\n  '{',\n  '*',\n  'ftp:',\n  'tel:'\n];\nconst goodSchemes = { 'http:': true, 'https:': true };\nconst outLinkURLParser = new URL('about:blank');\nconst outlinkSelector = 'a[href], area[href]';\n\nfunction shouldIgnoreLink(test) {\n  let ignored = false;\n  let i = ignored.length;\n  while (i--) {\n    if (test.startsWith(ignored[i])) {\n      ignored = true;\n      break;\n    }\n  }\n  if (!ignored) {\n    let parsed = true;\n    try {\n      outLinkURLParser.href = test;\n    } catch (error) {\n      parsed = false;\n    }\n    return !(parsed && goodSchemes[outLinkURLParser.protocol]);\n  }\n  return ignored;\n}\n\n/**\n * @desc Add the array/nodelist of A or Anchor tags href properties the collected outlinks\n * @param {Array<HTMLAnchorElement|HTMLAnchorElement>|NodeList} toAdd - The elements with\n * href properties that are to be added to the collected outlinks\n */\nexport function addOutLinks(toAdd) {\n  if (window.$WBNOOUTLINKS) {\n    return;\n  }\n  let href;\n  let i = toAdd.length;\n  while (i--) {\n    href = toAdd[i].href.trim();\n    if (href && !outlinks.has(href) && !shouldIgnoreLink(href)) {\n      outlinks.add(href);\n    }\n  }\n}\n\n/**\n * @desc Collects the outlinks from the document\n */\nexport function collectOutlinksFromDoc() {\n  if (window.$WBNOOUTLINKS) {\n    return;\n  }\n  addOutLinks(document.querySelectorAll(outlinkSelector));\n}\n\n/**\n * @desc Collects outlinks form the supplied element\n * @param {Element} queryFrom - The element to collect outlinks\n * from\n */\nexport function collectOutlinksFrom(queryFrom) {\n  if (window.$WBNOOUTLINKS) {\n    return;\n  }\n  addOutLinks(queryFrom.querySelectorAll(outlinkSelector));\n}\n\n/**\n * @desc Add the URL or href value of the supplied argument\n * @param {HTMLAnchorElement|HTMLAreaElement|string} elemOrString - The\n * element with href property or string to add to the collected outlinks\n */\nexport function addOutlink(elemOrString) {\n  if (window.$WBNOOUTLINKS) {\n    return;\n  }\n  const href = (elemOrString.href || elemOrString).trim();\n  if (href && !outlinks.has(href) && !shouldIgnoreLink(href)) {\n    outlinks.add(href);\n  }\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/utils/outlinkCollector.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 321,
    "kind": "variable",
    "name": "outlinks",
    "memberof": "src/utils/outlinkCollector.js",
    "static": true,
    "longname": "src/utils/outlinkCollector.js~outlinks",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/utils/outlinkCollector.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 322,
    "kind": "variable",
    "name": "ignoredSchemes",
    "memberof": "src/utils/outlinkCollector.js",
    "static": true,
    "longname": "src/utils/outlinkCollector.js~ignoredSchemes",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/utils/outlinkCollector.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 323,
    "kind": "variable",
    "name": "goodSchemes",
    "memberof": "src/utils/outlinkCollector.js",
    "static": true,
    "longname": "src/utils/outlinkCollector.js~goodSchemes",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/utils/outlinkCollector.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "{\"http:\": boolean, \"https:\": boolean}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 324,
    "kind": "variable",
    "name": "outLinkURLParser",
    "memberof": "src/utils/outlinkCollector.js",
    "static": true,
    "longname": "src/utils/outlinkCollector.js~outLinkURLParser",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/utils/outlinkCollector.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 325,
    "kind": "variable",
    "name": "outlinkSelector",
    "memberof": "src/utils/outlinkCollector.js",
    "static": true,
    "longname": "src/utils/outlinkCollector.js~outlinkSelector",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/utils/outlinkCollector.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 326,
    "kind": "function",
    "name": "shouldIgnoreLink",
    "memberof": "src/utils/outlinkCollector.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/outlinkCollector.js~shouldIgnoreLink",
    "access": "public",
    "export": false,
    "importPath": "wr-behaviors/src/utils/outlinkCollector.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [
      {
        "name": "test",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 327,
    "kind": "function",
    "name": "addOutLinks",
    "memberof": "src/utils/outlinkCollector.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/outlinkCollector.js~addOutLinks",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/outlinkCollector.js",
    "importStyle": "{addOutLinks}",
    "description": "Add the array/nodelist of A or Anchor tags href properties the collected outlinks",
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<HTMLAnchorElement|HTMLAnchorElement>|NodeList"
        ],
        "spread": false,
        "optional": false,
        "name": "toAdd",
        "description": "The elements with\nhref properties that are to be added to the collected outlinks"
      }
    ],
    "return": null
  },
  {
    "__docId__": 328,
    "kind": "function",
    "name": "collectOutlinksFromDoc",
    "memberof": "src/utils/outlinkCollector.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/outlinkCollector.js~collectOutlinksFromDoc",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/outlinkCollector.js",
    "importStyle": "{collectOutlinksFromDoc}",
    "description": "Collects the outlinks from the document",
    "lineNumber": 80,
    "params": [],
    "return": null
  },
  {
    "__docId__": 329,
    "kind": "function",
    "name": "collectOutlinksFrom",
    "memberof": "src/utils/outlinkCollector.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/outlinkCollector.js~collectOutlinksFrom",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/outlinkCollector.js",
    "importStyle": "{collectOutlinksFrom}",
    "description": "Collects outlinks form the supplied element",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "queryFrom",
        "description": "The element to collect outlinks\nfrom"
      }
    ],
    "return": null
  },
  {
    "__docId__": 330,
    "kind": "function",
    "name": "addOutlink",
    "memberof": "src/utils/outlinkCollector.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/outlinkCollector.js~addOutlink",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/outlinkCollector.js",
    "importStyle": "{addOutlink}",
    "description": "Add the URL or href value of the supplied argument",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLAnchorElement",
          "HTMLAreaElement",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "elemOrString",
        "description": "The\nelement with href property or string to add to the collected outlinks"
      }
    ],
    "return": null
  },
  {
    "__docId__": 331,
    "kind": "file",
    "name": "src/utils/reactUtils.js",
    "content": "export let reactProps = {\n  rootContainer: '_reactRootContainer',\n  internalRoot: '_internalRoot',\n  onDomNode: '__reactInternalInstance',\n  rootHostElemId: 'react-root',\n  mProps: 'memoizedProps'\n};\n\n/**\n * @desc Returns the root host element of an react application (id = react-root)\n * @param {string} [alternativeId] - An alternative id to use rather than the default\n * @return {?HTMLElement}\n */\nexport function getReactRootHostElem(alternativeId) {\n  const id = alternativeId != null ? alternativeId : reactProps.rootHostElemId;\n  return document.getElementById(id);\n}\n\n/**\n * @desc Returns the internal root object added by react on the supplied element.\n * Property `_internalRoot`\n * @param {HTMLElement|Element|Node} elem\n * @return {Object}\n */\nexport function getInternalRootOnElem(elem) {\n  return elem[reactProps.internalRoot];\n}\n\n/**\n * @desc Returns the root container object added by react\n * @param {HTMLElement|Element|Node} elem\n * @return {?Object}\n */\nexport function getReactRootContainer(elem) {\n  const hostContainer = elem[reactProps.rootContainer];\n  if (hostContainer) {\n    return hostContainer[reactProps.internalRoot];\n  }\n  return null;\n}\n\n/**\n * @desc Returns the react instance object that lives on the live element\n * @param {HTMLElement|Element|Node} elem - The element to have its\n * react instance extracted from\n * @return {?Object}\n */\nexport function reactInstanceFromDOMElem(elem) {\n  const keys = Object.keys(elem);\n  let i = 0;\n  let len = keys.length;\n  let internalKey;\n  for (; i < len; ++i) {\n    if (keys[i].startsWith(reactProps.onDomNode)) {\n      internalKey = keys[i];\n      break;\n    }\n  }\n  if (!internalKey) return null;\n  return elem[internalKey];\n}\n\n/**\n * @desc Converts the supplied array of elements into an array of objects\n * each with property node (the live dom element) and reactInstance (the live\n * react component). An optional selection function can be supplied that\n * receives the rendered components key and returns T/F to indicate if the\n * component and element is to be selected\n * @param {Array<Node|HTMLElement|Element>} elems - The array of elements to\n * get their react instances\n * @param {function(key: string): boolean} [selectingFn] - Optional selection\n * function that takes a components key and returns T/F indicating if the\n * component is selected\n * @return {Array<{node: HTMLElement|Element|Node, reactInstance: Object}>}\n */\nexport function reactInstancesFromElements(elems, selectingFn) {\n  const renderedNodes = [];\n  const length = elems.length;\n  let i = 0;\n  let node;\n  let reactInstance;\n  for (; i < length; ++i) {\n    node = elems[i];\n    reactInstance = reactInstanceFromDOMElem(node);\n    if (selectingFn && selectingFn(reactInstance.key)) {\n      renderedNodes.push({ node, reactInstance });\n    } else {\n      renderedNodes.push({ node, reactInstance });\n    }\n  }\n  return renderedNodes;\n}\n\n/**\n * @desc Walks the children of a react component to\n * find the one that has the supplied key\n * @param {Object} reactInstance - The react instance who's children are\n * to be descended looking for the one with key\n * @param {string} key - The key of the child to retrieve\n * @return {?Object} - The found child if found\n */\nexport function findChildWithKey(reactInstance, key) {\n  let child = reactInstance.child;\n  while (child) {\n    if (child.key && child.key === key) {\n      return child;\n    }\n    child = child.child;\n  }\n  return null;\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/utils/reactUtils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 332,
    "kind": "variable",
    "name": "reactProps",
    "memberof": "src/utils/reactUtils.js",
    "static": true,
    "longname": "src/utils/reactUtils.js~reactProps",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/reactUtils.js",
    "importStyle": "{reactProps}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "{\"rootContainer\": string, \"internalRoot\": string, \"onDomNode\": string, \"rootHostElemId\": string, \"mProps\": string}"
      ]
    }
  },
  {
    "__docId__": 333,
    "kind": "function",
    "name": "getReactRootHostElem",
    "memberof": "src/utils/reactUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/reactUtils.js~getReactRootHostElem",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/reactUtils.js",
    "importStyle": "{getReactRootHostElem}",
    "description": "Returns the root host element of an react application (id = react-root)",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "alternativeId",
        "description": "An alternative id to use rather than the default"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "HTMLElement"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 334,
    "kind": "function",
    "name": "getInternalRootOnElem",
    "memberof": "src/utils/reactUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/reactUtils.js~getInternalRootOnElem",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/reactUtils.js",
    "importStyle": "{getInternalRootOnElem}",
    "description": "Returns the internal root object added by react on the supplied element.\nProperty `_internalRoot`",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Element",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 335,
    "kind": "function",
    "name": "getReactRootContainer",
    "memberof": "src/utils/reactUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/reactUtils.js~getReactRootContainer",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/reactUtils.js",
    "importStyle": "{getReactRootContainer}",
    "description": "Returns the root container object added by react",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Element",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": ""
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 336,
    "kind": "function",
    "name": "reactInstanceFromDOMElem",
    "memberof": "src/utils/reactUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/reactUtils.js~reactInstanceFromDOMElem",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/reactUtils.js",
    "importStyle": "{reactInstanceFromDOMElem}",
    "description": "Returns the react instance object that lives on the live element",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "HTMLElement",
          "Element",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to have its\nreact instance extracted from"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 337,
    "kind": "function",
    "name": "reactInstancesFromElements",
    "memberof": "src/utils/reactUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/reactUtils.js~reactInstancesFromElements",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/reactUtils.js",
    "importStyle": "{reactInstancesFromElements}",
    "description": "Converts the supplied array of elements into an array of objects\neach with property node (the live dom element) and reactInstance (the live\nreact component). An optional selection function can be supplied that\nreceives the rendered components key and returns T/F to indicate if the\ncomponent and element is to be selected",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<Node|HTMLElement|Element>"
        ],
        "spread": false,
        "optional": false,
        "name": "elems",
        "description": "The array of elements to\nget their react instances"
      },
      {
        "nullable": null,
        "types": [
          "function(key: string): boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "selectingFn",
        "description": "Optional selection\nfunction that takes a components key and returns T/F indicating if the\ncomponent is selected"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<{node: HTMLElement|Element|Node, reactInstance: Object}>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 338,
    "kind": "function",
    "name": "findChildWithKey",
    "memberof": "src/utils/reactUtils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/reactUtils.js~findChildWithKey",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/reactUtils.js",
    "importStyle": "{findChildWithKey}",
    "description": "Walks the children of a react component to\nfind the one that has the supplied key",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "reactInstance",
        "description": "The react instance who's children are\nto be descended looking for the one with key"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The key of the child to retrieve"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The found child if found"
    }
  },
  {
    "__docId__": 339,
    "kind": "file",
    "name": "src/utils/scrolls.js",
    "content": "import { delay, waitForPredicate } from './delays';\n\n/**\n * @desc Scrolls the supplied element into view.\n *\n * Scroll behavior:\n *  - behavior: smooth\n *  - block: center\n *  - inline: center\n * @param {Element} elem - The element to be scrolled into view\n * @return {void}\n */\nexport function scrollIntoView(elem) {\n  if (elem == null) return;\n  elem.scrollIntoView({\n    behavior: 'smooth',\n    block: 'center',\n    inline: 'center'\n  });\n}\n\n/**\n * @desc Scrolls the supplied element into view, afterwards waits for the specified delay time\n *\n * Scroll behavior:\n *  - behavior: smooth\n *  - block: center\n *  - inline: center\n * @param {Element|HTMLElement|Node} elem - The element to be scrolled into view with delay\n * @param {number} [delayTime = 1000] - How long is the delay\n * @returns {Promise<void>}\n */\nexport function scrollIntoViewWithDelay(elem, delayTime = 1000) {\n  scrollIntoView(elem);\n  return delay(delayTime);\n}\n\n/**\n * @desc Scrolls the supplied element into view and then waits for the supplied predicate function to return true\n *\n * Scroll behavior:\n *  - behavior: smooth\n *  - block: center\n *  - inline: center\n * @param {Element|HTMLElement|Node} elem - The element to be scrolled into view with delay\n * @param {function(): boolean} predicate - Function returning T/F to indicate when the\n * condition waited for has been satisfied\n * @return {Promise<void>}\n */\nexport function scrollIntoViewAndWaitFor(elem, predicate) {\n  scrollIntoView(elem);\n  return waitForPredicate(predicate);\n}\n\n/**\n * @desc Scrolls the window by the supplied elements offsetTop. If the elements\n * offsetTop is zero then {@link scrollIntoView} is used\n * @param {Element|HTMLElement|Node} elem - The element who's offsetTop will be used to scroll by\n * @return {void}\n */\nexport function scrollToElemOffset(elem) {\n  if (elem.offsetTop === 0) {\n    return scrollIntoView(elem);\n  }\n  window.scrollTo({\n    behavior: 'auto',\n    left: 0,\n    top: elem.offsetTop\n  });\n}\n\n/**\n * @desc Scrolls the window by the supplied elements offsetTop. If the elements\n * offsetTop is zero then {@link scrollIntoView} is used\n * @param {Element|HTMLElement|Node} elem - The element who's offsetTop will be used to scroll by\n * @param {number} [delayTime = 1000] - How long is the delay\n * @returns {Promise<void>}\n */\nexport function scrollToElemOffsetWithDelay(elem, delayTime = 1000) {\n  scrollToElemOffset(elem);\n  return delay(delayTime);\n}\n\n/**\n * @desc Scrolls down by the elements height\n * @param {Element|HTMLElement|Node} elem - The element who's height\n * to scroll down by\n * @return {void}\n */\nexport function scrollDownByElemHeight(elem) {\n  if (!elem) return;\n  const rect = elem.getBoundingClientRect();\n  window.scrollBy(0, rect.height + elem.offsetHeight);\n}\n\n/**\n * @desc Scrolls down by supplied elements height and then waits for\n * the supplied delay time.\n * @param {Element|HTMLElement|Node} elem - The element to be\n * @param {number} [delayTime = 1000] - How long is the delay\n * @returns {Promise<void>}\n */\nexport function scrollDownByElemHeightWithDelay(elem, delayTime = 1000) {\n  scrollDownByElemHeight(elem);\n  return delay(delayTime);\n}\n\n/**\n * @desc Determines if we can scroll down any more\n * @return {boolean} - T/F indicating if we can scroll down some more\n */\nexport function canScrollMore() {\n  return (\n    window.scrollY + window.innerHeight <\n    Math.max(\n      document.body.scrollHeight,\n      document.body.offsetHeight,\n      document.documentElement.clientHeight,\n      document.documentElement.scrollHeight,\n      document.documentElement.offsetHeight\n    )\n  );\n}\n",
    "static": true,
    "longname": "/home/john/WebstormProjects/wr-behaviors/src/utils/scrolls.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 340,
    "kind": "function",
    "name": "scrollIntoView",
    "memberof": "src/utils/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/scrolls.js~scrollIntoView",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/scrolls.js",
    "importStyle": "{scrollIntoView}",
    "description": "Scrolls the supplied element into view.\n\nScroll behavior:\n - behavior: smooth\n - block: center\n - inline: center",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be scrolled into view"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 341,
    "kind": "function",
    "name": "scrollIntoViewWithDelay",
    "memberof": "src/utils/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/scrolls.js~scrollIntoViewWithDelay",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/scrolls.js",
    "importStyle": "{scrollIntoViewWithDelay}",
    "description": "Scrolls the supplied element into view, afterwards waits for the specified delay time\n\nScroll behavior:\n - behavior: smooth\n - block: center\n - inline: center",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "HTMLElement",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be scrolled into view with delay"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "delayTime",
        "description": "How long is the delay"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 342,
    "kind": "function",
    "name": "scrollIntoViewAndWaitFor",
    "memberof": "src/utils/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/scrolls.js~scrollIntoViewAndWaitFor",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/scrolls.js",
    "importStyle": "{scrollIntoViewAndWaitFor}",
    "description": "Scrolls the supplied element into view and then waits for the supplied predicate function to return true\n\nScroll behavior:\n - behavior: smooth\n - block: center\n - inline: center",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "HTMLElement",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be scrolled into view with delay"
      },
      {
        "nullable": null,
        "types": [
          "function(): boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "predicate",
        "description": "Function returning T/F to indicate when the\ncondition waited for has been satisfied"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 343,
    "kind": "function",
    "name": "scrollToElemOffset",
    "memberof": "src/utils/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/scrolls.js~scrollToElemOffset",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/scrolls.js",
    "importStyle": "{scrollToElemOffset}",
    "description": "Scrolls the window by the supplied elements offsetTop. If the elements\noffsetTop is zero then {@link scrollIntoView} is used",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "HTMLElement",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element who's offsetTop will be used to scroll by"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 344,
    "kind": "function",
    "name": "scrollToElemOffsetWithDelay",
    "memberof": "src/utils/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/scrolls.js~scrollToElemOffsetWithDelay",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/scrolls.js",
    "importStyle": "{scrollToElemOffsetWithDelay}",
    "description": "Scrolls the window by the supplied elements offsetTop. If the elements\noffsetTop is zero then {@link scrollIntoView} is used",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "HTMLElement",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element who's offsetTop will be used to scroll by"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "delayTime",
        "description": "How long is the delay"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 345,
    "kind": "function",
    "name": "scrollDownByElemHeight",
    "memberof": "src/utils/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/scrolls.js~scrollDownByElemHeight",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/scrolls.js",
    "importStyle": "{scrollDownByElemHeight}",
    "description": "Scrolls down by the elements height",
    "lineNumber": 90,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "HTMLElement",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element who's height\nto scroll down by"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 346,
    "kind": "function",
    "name": "scrollDownByElemHeightWithDelay",
    "memberof": "src/utils/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/scrolls.js~scrollDownByElemHeightWithDelay",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/scrolls.js",
    "importStyle": "{scrollDownByElemHeightWithDelay}",
    "description": "Scrolls down by supplied elements height and then waits for\nthe supplied delay time.",
    "lineNumber": 103,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Element",
          "HTMLElement",
          "Node"
        ],
        "spread": false,
        "optional": false,
        "name": "elem",
        "description": "The element to be"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1000",
        "defaultRaw": 1000,
        "name": "delayTime",
        "description": "How long is the delay"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 347,
    "kind": "function",
    "name": "canScrollMore",
    "memberof": "src/utils/scrolls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/scrolls.js~canScrollMore",
    "access": "public",
    "export": true,
    "importPath": "wr-behaviors/src/utils/scrolls.js",
    "importStyle": "{canScrollMore}",
    "description": "Determines if we can scroll down any more",
    "lineNumber": 112,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "T/F indicating if we can scroll down some more"
    },
    "params": []
  },
  {
    "kind": "index",
    "content": "# DockerFile:\n`Volume`: /dist (all built behaviors will be placed there)\n\n# package.json scripts:\n`build-prod`:\n - builds the production ready version (no-comments)\n\n`build-docker`:\n - used by the docker file\n\n`build-dev`:\n - runs dev build\n\n`build-watch`:\n - runs dev build\n - auto-rebuild on changes\n - use env var BEHAVIOR_DIR have behaviors put somewhere other than ./dist\n\n# build.js\nargs:\n- `-a`: builds all behaviors\n- `-f <file>`: build a specific file\n- no args: cli choice of file to be watched and built :)",
    "longname": "/home/john/WebstormProjects/wr-behaviors/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"wr-behaviors\",\n  \"version\": \"1.0.0\",\n  \"main\": \"index.js\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"@types/fs-extra\": \"^5.0.4\",\n    \"babel-eslint\": \"^10.0.1\",\n    \"chokidar\": \"^2.0.4\",\n    \"commander\": \"^2.19.0\",\n    \"eslint\": \"^5.12.0\",\n    \"eslint-config-prettier\": \"^3.3.0\",\n    \"eslint-plugin-prettier\": \"^3.0.1\",\n    \"fastify\": \"^1.13.3\",\n    \"fastify-graceful-shutdown\": \"^2.0.0\",\n    \"fs-extra\": \"^7.0.1\",\n    \"inquirer\": \"^6.2.1\",\n    \"prettier\": \"^1.15.3\",\n    \"rollup\": \"^1.1.0\",\n    \"rollup-plugin-cleanup\": \"^3.1.0\"\n  },\n  \"scripts\": {\n    \"build-prod\": \"rollup -c rollup.prod.config.js\",\n    \"build-docker\": \"rollup -c rollup.prod.config.js && chmod a+rw /dist/*.js\",\n    \"build-dev\": \"rollup -c rollup.dev.config.js\",\n    \"build-deving\": \"rollup --watch -c rollup.deving.config.js\",\n    \"build-watch\": \"rollup --watch -c rollup.dev.config.js\",\n    \"build-docs\": \"esdoc\"\n  },\n  \"devDependencies\": {\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-external-webapi-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\"\n  }\n}\n",
    "longname": "/home/john/WebstormProjects/wr-behaviors/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]